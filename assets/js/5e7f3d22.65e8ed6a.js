"use strict";(self.webpackChunkmapml_viewer_doc=self.webpackChunkmapml_viewer_doc||[]).push([[9481],{3905:function(e,t,n){n.d(t,{Zo:function(){return m},kt:function(){return d}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},m=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),c=s(n),d=r,h=c["".concat(p,".").concat(d)]||c[d]||u[d]||i;return n?a.createElement(h,o(o({ref:t},m),{},{components:n})):a.createElement(h,o({ref:t},m))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=c;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var s=2;s<i;s++)o[s]=n[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},5267:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return p},metadata:function(){return s},toc:function(){return m},default:function(){return c}});var a=n(7462),r=n(3366),i=(n(7294),n(3905)),o=["components"],l={id:"extent",title:"<map-extent>: The Extent element",slug:"/elements/extent/"},p=void 0,s={unversionedId:"elements/extent",id:"elements/extent",title:"<map-extent>: The Extent element",description:"The `` element is a hypertext control that is associated to and represents the",source:"@site/docs/elements/extent.md",sourceDirName:"elements",slug:"/elements/extent/",permalink:"/web-map-doc/docs/elements/extent/",tags:[],version:"current",frontMatter:{id:"extent",title:"<map-extent>: The Extent element",slug:"/elements/extent/"},sidebar:"sidebar",previous:{title:"<layer->: The Layer element",permalink:"/web-map-doc/docs/layers/layer/"},next:{title:"<map-input>: The Input element",permalink:"/web-map-doc/docs/elements/input"}},m=[{value:"Attributes",id:"attributes",children:[{value:"<code>units</code>",id:"units",children:[],level:3}],level:2},{value:"Events",id:"events",children:[],level:2}],u={toc:m};function c(e){var t=e.components,n=(0,r.Z)(e,o);return(0,i.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"<map-extent>")," element is a hypertext control that is associated to and represents the\nrectangle of the map viewport, from the user's perspective.  Map authors use it\nto compose server requests for layer content. Requests are composed using\nURL templates processed by the browser as the map moves and requires new content\nto paint.  The URL templates each contain one or more variable references, with each\nvariable reference denoted by the name of the variable enclosed in braces ",(0,i.kt)("inlineCode",{parentName:"p"},"{}"),"."),(0,i.kt)("p",null,"Variables are created by the map author using the ",(0,i.kt)("inlineCode",{parentName:"p"},"<map-input>")," element.  There are\nseveral types of ",(0,i.kt)("inlineCode",{parentName:"p"},"<map-input>"),", allowing the map author to reference the corners\nof the extent, its width and height, and its zoom."),(0,i.kt)("p",null,"An example of a ",(0,i.kt)("inlineCode",{parentName:"p"},"<map-extent>")," element being used to load image tiles for a single\nURL template."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-html"},'<layer- label="OpenStreetMap" checked>\n  <map-extent units="OSMTILE">\n    <map-input name="z" type="zoom" value="18" min="0" max="18"></map-input>\n    <map-input name="s" type="hidden" shard="true" list="servers"></map-input>\n    <map-datalist id="servers">\n      <map-option value="a"></map-option>\n      <map-option value="b"></map-option>\n      <map-option value="c"></map-option>\n    </map-datalist>\n    <map-input name="x" type="location" units="tilematrix" axis="column" min="0" max="262144"></map-input>\n    <map-input name="y" type="location" units="tilematrix" axis="row" min="0" max="262144"></map-input>\n    <map-link rel="tile" tref="https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png"></map-link>\n  </map-extent>\n</layer->\n')),(0,i.kt)("iframe",{src:"../../../demo/extent-demo.html",title:"MapML Demo",height:"410",width:"100%",scrolling:"no",frameBorder:"0"}),(0,i.kt)("h2",{id:"attributes"},"Attributes"),(0,i.kt)("h3",{id:"units"},(0,i.kt)("inlineCode",{parentName:"h3"},"units")),(0,i.kt)("p",null,"Specifies the projection of the tiles and other content that is expected from the\nserver.  If the projection value is not a case-sensitive match of the ",(0,i.kt)("inlineCode",{parentName:"p"},"<mapml-viewer>"),"\n",(0,i.kt)("inlineCode",{parentName:"p"},"projection")," attribute, the layer will be disabled in the layer control, and will\nnot be displayed on the map, nor content fetched."),(0,i.kt)("p",null,"Defined values of ",(0,i.kt)("inlineCode",{parentName:"p"},"units")," include:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Projection"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"OSMTILE"),(0,i.kt)("td",{parentName:"tr",align:null},"Web Mercator, with 256px x 256px tiles recursively defined inside a square bounds at zoom = 0")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"WGS84"),(0,i.kt)("td",{parentName:"tr",align:null},"Pseudo plate carr\xe9e, with 256px x 256px tiles. Zoom = 0 contains two tiles in two columns, with their origin at -180,90. False easting and northing (pcrs) values inside the projection bounds correspond to longitude and latitude, respectively.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"CBMTILE"),(0,i.kt)("td",{parentName:"tr",align:null},"Lambert Conformal Conic, with 256px x 256px tiles.  Zoom levels chosen by scale denominator, so tiles do not nest.")))),(0,i.kt)("p",null,"Author-defined values of ",(0,i.kt)("inlineCode",{parentName:"p"},"units")," are possible, using the ",(0,i.kt)("a",{parentName:"p",href:"../../api/custom-projections/"},"Custom projections API")),(0,i.kt)("hr",null),(0,i.kt)("h2",{id:"events"},"Events"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Event name"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"extentload"),(0,i.kt)("td",{parentName:"tr",align:null},"Fires when a layer's extent is loaded and parsed. The intent is that this event is analagous to the ",(0,i.kt)("a",{parentName:"td",href:"https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/loadedmetadata_event"},"media element loadedmetadata event"),", but for map layers.")))))}c.isMDXComponent=!0}}]);