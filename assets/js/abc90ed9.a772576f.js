"use strict";(self.webpackChunkmapml_viewer_doc=self.webpackChunkmapml_viewer_doc||[]).push([[903],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>c});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=n.createContext({}),m=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},u=function(e){var t=m(e.components);return n.createElement(p.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=m(a),c=r,h=d["".concat(p,".").concat(c)]||d[c]||s[c]||o;return a?n.createElement(h,l(l({ref:t},u),{},{components:a})):n.createElement(h,l({ref:t},u))}));function c(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,l=new Array(o);l[0]=d;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var m=2;m<o;m++)l[m]=a[m];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},2582:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>s,frontMatter:()=>o,metadata:()=>i,toc:()=>m});var n=a(7462),r=(a(7294),a(3905));const o={id:"map-feature-api",title:"HTMLFeatureElement",slug:"/api/map-feature-api"},l="HTMLFeatureElement",i={unversionedId:"api/map-feature-api",id:"api/map-feature-api",title:"HTMLFeatureElement",description:"Properties",source:"@site/docs/api/map-feature-api.md",sourceDirName:"api",slug:"/api/map-feature-api",permalink:"/web-map-doc/docs/api/map-feature-api",draft:!1,tags:[],version:"current",frontMatter:{id:"map-feature-api",title:"HTMLFeatureElement",slug:"/api/map-feature-api"},sidebar:"sidebar",previous:{title:"HTMLLayerElement",permalink:"/web-map-doc/docs/api/layer-api"},next:{title:"Custom Projections API",permalink:"/web-map-doc/docs/api/custom-projections"}},p={},m=[{value:"Properties",id:"properties",level:2},{value:"zoom",id:"zoom",level:3},{value:"min",id:"min",level:3},{value:"max",id:"max",level:3},{value:"extent",id:"extent",level:3},{value:"Methods",id:"methods",level:2},{value:"zoomTo()",id:"zoomto",level:3},{value:"Syntax",id:"syntax",level:4},{value:"Parameters",id:"parameters",level:4},{value:"Return value",id:"return-value",level:4},{value:"click()",id:"click",level:3},{value:"Syntax:",id:"syntax-1",level:4},{value:"Parameters:",id:"parameters-1",level:4},{value:"Return value:",id:"return-value-1",level:4},{value:"focus(options)",id:"focusoptions",level:3},{value:"Syntax:",id:"syntax-2",level:4},{value:"Parameters:",id:"parameters-2",level:4},{value:"zoomTo",id:"zoomto-1",level:5},{value:"focusVisible",id:"focusvisible",level:5},{value:"Return value:",id:"return-value-2",level:4},{value:"blur()",id:"blur",level:3},{value:"Syntax",id:"syntax-3",level:4},{value:"Parameters",id:"parameters-3",level:4},{value:"Return value",id:"return-value-3",level:4},{value:"mapml2geojson(options)",id:"mapml2geojsonoptions",level:3},{value:"Syntax",id:"syntax-4",level:4},{value:"Parameters",id:"parameters-4",level:4},{value:"Options",id:"options",level:5},{value:"Notes",id:"notes",level:6},{value:"Return value",id:"return-value-4",level:4},{value:"Events",id:"events",level:2},{value:"Examples",id:"examples",level:2},{value:"mapml2geojson",id:"mapml2geojson",level:3},{value:"Default options",id:"default-options",level:4}],u={toc:m};function s(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"htmlfeatureelement"},"HTMLFeatureElement"),(0,r.kt)("h2",{id:"properties"},"Properties"),(0,r.kt)("h3",{id:"zoom"},"zoom"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"HTMLFeatureElement.zoom")," gets or sets the 'native' zoom of the feature; ",(0,r.kt)("inlineCode",{parentName:"p"},"zoom"),"\n",(0,r.kt)("a",{parentName:"p",href:"https://html.spec.whatwg.org/#example-reflect-incantation"},"reflects")," the\ncontent attribute of the same name. Map features' geometry and other properties\nare scale-dependent.  It's expected that features served by HTML (MapML) services\nwill express the native or natural scale of the feature through its ",(0,r.kt)("inlineCode",{parentName:"p"},"zoom"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"min"),"\nand ",(0,r.kt)("inlineCode",{parentName:"p"},"max")," (zoom) content and IDL attributes."),(0,r.kt)("p",null,"To set the zoom:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"let feature = document.querySelector('map-feature');\nfeature.zoom = 5; // set's the 'native' zoom of the feature\n")),(0,r.kt)("p",null,"To get the zoom:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"let feature = document.querySelector('map-feature');\nlet zoom = feature.zoom; \n")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"min"},"min"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"min")," (zoom) attribute gets or sets the native minimum zoom of the feature;\n",(0,r.kt)("inlineCode",{parentName:"p"},"min")," ",(0,r.kt)("a",{parentName:"p",href:"https://html.spec.whatwg.org/#example-reflect-incantation"},"reflects")," the\ncontent attribute of the same name. Map features' geometry and other properties\nare scale-dependent. The ",(0,r.kt)("inlineCode",{parentName:"p"},"min")," value is a rendering zoom value cut-off; at map\nzoom values less than ",(0,r.kt)("inlineCode",{parentName:"p"},"min"),", the feature will not be rendered. "),(0,r.kt)("p",null,"If ",(0,r.kt)("inlineCode",{parentName:"p"},"min")," is not provided, a fallback value will be calculated; the fallback value\nwill be the min zoom value of the layer, or if that is not specified, of the\nmap viewer ",(0,r.kt)("inlineCode",{parentName:"p"},"projection"),"'s minimum value i.e. 0."),(0,r.kt)("p",null,"To set the min:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"let feature = document.querySelector('map-feature');\nfeature.min = 5; // feature will not be rendered on zoom levels 0-4\n")),(0,r.kt)("p",null,"To get the min:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"let feature = document.querySelector('map-feature');\nlet min = feature.min;\n")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"max"},"max"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"max")," (zoom) attribute gets or sets the native maximum zoom of the feature;\n",(0,r.kt)("inlineCode",{parentName:"p"},"max")," ",(0,r.kt)("a",{parentName:"p",href:"https://html.spec.whatwg.org/#example-reflect-incantation"},"reflects")," the\ncontent attribute of the same name. Map features' geometry and other properties\nare scale-dependent. The ",(0,r.kt)("inlineCode",{parentName:"p"},"max")," value is a rendering zoom value cut-off; at map\nzoom values greater than ",(0,r.kt)("inlineCode",{parentName:"p"},"max"),", the feature will not be rendered. "),(0,r.kt)("p",null,"If ",(0,r.kt)("inlineCode",{parentName:"p"},"max")," is not provided, a fallback value will be calculated; the fallback value\nwill be the max zoom value of the layer, or if that is not specified, of the\nmap viewer ",(0,r.kt)("inlineCode",{parentName:"p"},"projection"),"'s maximum value e.g. 25 (depending on the projection)."),(0,r.kt)("p",null,"To set the max:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"let feature = document.querySelector('map-feature');\nfeature.max = 10; // feature will not be rendered past zoom level 10\n")),(0,r.kt)("p",null,"To get the max:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"let feature = document.querySelector('map-feature');\nlet max = feature.max;\n")),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"extent"},"extent"),(0,r.kt)("p",null,"Read-only.  Returns the upper left and lower right coordinates of the\nfeature's minimum bounding rectangle as an object value.  "),(0,r.kt)("p",null,"For point features (which have a zero-area extent), an ",(0,r.kt)("inlineCode",{parentName:"p"},"extent")," is calculated\nto fit the corners of a single tile centred on that location,\nat an integral zoom level equal to the feature's ",(0,r.kt)("a",{parentName:"p",href:"#zoom"},"zoom")," property value, if set, or at the\nfallback (calculated) zoom value if no ",(0,r.kt)("a",{parentName:"p",href:"#zoom"},"zoom")," property is set. "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-console"},"> let f = document.querySelector('map-feature')\n> console.log(f.extent)\n> {topLeft: {\u2026}, bottomRight: {\u2026}, projection: 'CBMTILE'}\n")),(0,r.kt)("p",null,"The extent object is structured as follows:"),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Click to view the extent object"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'{\n    "projection": "CBMTILE",\n    "topLeft": {\n        "tcrs": [\n            {\n                "horizontal": 942.662039991251,\n                "vertical": 1029.0945982508472\n            },\n/* an object with "horizontal" and "vertical" properties for each zoom level in the array */\n            {\n                "horizontal": 546743983.1949257,\n                "vertical": 596874866.9854914\n            }\n        ],\n        "tilematrix": [\n            {\n                "horizontal": 3.6822735937158244,\n                "vertical": 4.019900774417372\n            },\n/* an object with "horizontal" and "vertical" properties for each zoom level in the array */\n            {\n                "horizontal": 2135718.6843551784,\n                "vertical": 2331542.4491620758\n            }\n        ],\n/* gcrs stands for "geographic coordinate reference system" */\n        "gcrs": {\n            "horizontal": -75.73195696514524,\n            "vertical": 45.40761073808424\n        },\n/* pcrs stands for "projected coordinate reference system" */\n        "pcrs": {\n            "horizontal": 1509108.7182317898,\n            "vertical": -170864.4342066869\n        }\n    },\n    "bottomRight": {\n        "tcrs": [\n            {\n                "horizontal": 942.7503158533199,\n                "vertical": 1029.1828741129164\n            },\n            {\n                "horizontal": 546795183.1949255,\n                "vertical": 596926066.9854914\n            }\n        ],\n        "tilematrix": [\n            {\n                "horizontal": 3.6826184213020308,\n                "vertical": 4.0202456020035795\n            },\n            {\n                "horizontal": 2135918.684355178,\n                "vertical": 2331742.4491620758\n            }\n        ],\n        "gcrs": {\n            "horizontal": -75.67858731979081,\n            "vertical": 45.387937810298354\n        },\n        "pcrs": {\n            "horizontal": 1512495.3916717991,\n            "vertical": -174251.10764670372\n        }\n    }\n}\n'))),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"methods"},"Methods"),(0,r.kt)("h3",{id:"zoomto"},"zoomTo()"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"HTMLFeatureElement.zoomTo()")," Move the viewport to be centred on the feature's ",(0,r.kt)("a",{parentName:"p",href:"#extent"},(0,r.kt)("inlineCode",{parentName:"a"},"extent")),".\nThe zoom of the map displayed depends on the native ",(0,r.kt)("a",{parentName:"p",href:"#zoom"},"zoom")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"max")," properties of the feature.\nIf the feature has no specified ",(0,r.kt)("a",{parentName:"p",href:"#zoom"},"zoom")," property, the feature will be centred on the\nviewport at the ",(0,r.kt)("inlineCode",{parentName:"p"},"max")," zoom value, whether that value is present on the feature, or\nis derived from a fallback value based on the parent layer or map.\nIf a ",(0,r.kt)("a",{parentName:"p",href:"#zoom"},"zoom")," property is available, the viewport will be centred on the\ncentre of the feature's ",(0,r.kt)("a",{parentName:"p",href:"#extent"},(0,r.kt)("inlineCode",{parentName:"a"},"extent"))," at that zoom value, whether or not\nthe ",(0,r.kt)("a",{parentName:"p",href:"#extent"},(0,r.kt)("inlineCode",{parentName:"a"},"extent"))," fits completely within the viewport."),(0,r.kt)("h4",{id:"syntax"},"Syntax"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"let f = document.querySelector('map-feature');\nf.zoomTo(); // re-center the map on the feature at its native zoom\n")),(0,r.kt)("h4",{id:"parameters"},"Parameters"),(0,r.kt)("p",null,"None."),(0,r.kt)("h4",{id:"return-value"},"Return value"),(0,r.kt)("p",null,"None (",(0,r.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined"},"undefined"),")."),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"click"},"click()"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"click")," method simulates a mouse click on the feature."),(0,r.kt)("h4",{id:"syntax-1"},"Syntax:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"let f = document.querySelector('map-feature');\nf.click();\n")),(0,r.kt)("h4",{id:"parameters-1"},"Parameters:"),(0,r.kt)("p",null,"None."),(0,r.kt)("h4",{id:"return-value-1"},"Return value:"),(0,r.kt)("p",null,"None (",(0,r.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined"},"undefined"),")."),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"focusoptions"},"focus(options)"),(0,r.kt)("h4",{id:"syntax-2"},"Syntax:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"f.focus();\nf.focus(options);\n")),(0,r.kt)("h4",{id:"parameters-2"},"Parameters:"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"options")," ",(0,r.kt)("span",{className:"badge"},"Optional")),(0,r.kt)("p",null,"An optional object for controlling aspects of the focusing process. "),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"Options are not implemented yet.")),(0,r.kt)("p",null,"This object may contain the following properties:"),(0,r.kt)("h5",{id:"zoomto-1"},"zoomTo"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"zoomTo")," option (",(0,r.kt)("inlineCode",{parentName:"p"},"false")," by default) will move the viewport to be centred on\nthe feature's ",(0,r.kt)("a",{parentName:"p",href:"#extent"},(0,r.kt)("inlineCode",{parentName:"a"},"extent")),", similar to the ",(0,r.kt)("a",{parentName:"p",href:"#zoomto"},(0,r.kt)("inlineCode",{parentName:"a"},"zoomTo()"))," method."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"let f = document.querySelector('map-feature');\nf.focus({ zoomTo: true });\n")),(0,r.kt)("h5",{id:"focusvisible"},"focusVisible"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"focusVisible")," option (",(0,r.kt)("inlineCode",{parentName:"p"},"false")," by default) will enhance the feature with a\nfocus ring, similar to as though the feature had been focused with the keyboard."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"let f = document.querySelector('map-feature');\nf.focus({ zoom: false, focusVisible: true });\n")),(0,r.kt)("h4",{id:"return-value-2"},"Return value:"),(0,r.kt)("p",null,"None (",(0,r.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined"},"undefined"),")."),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"blur"},"blur()"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"blur()")," method removes focus from the feature."),(0,r.kt)("h4",{id:"syntax-3"},"Syntax"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"let f = document.querySelector('map-feature');\nf.blur();\n")),(0,r.kt)("h4",{id:"parameters-3"},"Parameters"),(0,r.kt)("p",null,"None."),(0,r.kt)("h4",{id:"return-value-3"},"Return value"),(0,r.kt)("p",null,"None (",(0,r.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined"},"undefined"),")."),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"mapml2geojsonoptions"},"mapml2geojson(options)"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"HTMLFeatureElement.mapml2geojson(options)")," returns the feature in GeoJSON format."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Function"),(0,r.kt)("th",{parentName:"tr",align:null},"Returns"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("code",null,"mapml2geojson(<Object",">","\xa0","options)")),(0,r.kt)("td",{parentName:"tr",align:null},"A JavaScript (GeoJSON) feature object"),(0,r.kt)("td",{parentName:"tr",align:null},"This function transforms the ",(0,r.kt)("inlineCode",{parentName:"td"},"<feature>")," element to a GeoJSON Feature object. You supply ",(0,r.kt)("a",{parentName:"td",href:"#options"},"options")," to control the transformation.")))),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("inlineCode",{parentName:"p"},"mapml2geojson")," must be called inside a windows.onload event to work properly. i.e.")),(0,r.kt)("h4",{id:"syntax-4"},"Syntax"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"window.onload = (event) => {\n  let layer = document.querySelector('layer-');\n  layer.mapml2geojson();\n};\n")),(0,r.kt)("h4",{id:"parameters-4"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"<Object",">","\xa0","options"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("span",{className:"badge"},"Optional")," You supply parameters via an options object with ",(0,r.kt)("a",{parentName:"td",href:"#options"},"predefined option names"),".")))),(0,r.kt)("h5",{id:"options"},"Options"),(0,r.kt)("p",null,"<Object",">"," A set of key/value pairs that customize the output GeoJSON object. All are optional and detailed below."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Option"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"propertyFunction")),(0,r.kt)("td",{parentName:"tr",align:null},"<Function",">"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("em",{parentName:"td"},"n/a")),(0,r.kt)("td",{parentName:"tr",align:null},"A function you supply that maps the features' ",(0,r.kt)("inlineCode",{parentName:"td"},"<map-properties>")," element to a ",(0,r.kt)("a",{parentName:"td",href:"https://datatracker.ietf.org/doc/html/rfc7946#section-3.2"},'GeoJSON "properties" member'),", since only you know the markup design in your ",(0,r.kt)("inlineCode",{parentName:"td"},"<map-properties>")," value. If you don't supply this option, a default function will attempt to reverse a ",(0,r.kt)("inlineCode",{parentName:"td"},"<table>")," child of the ",(0,r.kt)("inlineCode",{parentName:"td"},"<map-properties>")," element, as if that table was generated by the ",(0,r.kt)("a",{parentName:"td",href:"mapml-viewer-api#options"},"default properties option function from geojson2mapml"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"transform")),(0,r.kt)("td",{parentName:"tr",align:null},"<Boolean",">"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"true")),(0,r.kt)("td",{parentName:"tr",align:null},"Transform ",(0,r.kt)("inlineCode",{parentName:"td"},"<map-coordinates>")," values to ",(0,r.kt)("inlineCode",{parentName:"td"},"gcrs")," (longitude,latitude) values, if they are not already so. GeoJSON ",(0,r.kt)("a",{parentName:"td",href:"https://www.rfc-editor.org/rfc/rfc7946.html#section-4"},"recommends")," using WGS 84 longitude,latitude coordinates, so this is the default behaviour.")))),(0,r.kt)("h6",{id:"notes"},"Notes"),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},(0,r.kt)("inlineCode",{parentName:"p"},"mapml2geojson"),", by default, will transform feature coordinates to ",(0,r.kt)("inlineCode",{parentName:"p"},"gcrs")," before serialization, if\nnecessary. Note that all geographic CRS are ",(0,r.kt)("u",null,(0,r.kt)("strong",{parentName:"p"},"not"))," equivalent, and the interpretation\nof such coordinates is not guaranteed to conform to WGS 84 / GPS coordinates,\nand therefore may not conform to ",(0,r.kt)("a",{parentName:"p",href:"https://datatracker.ietf.org/doc/html/rfc7946#section-4"},"the GeoJSON recommendation"),",\nwhich requires longitude,latitude coordinates to be\nencoded as WGS 84.  The projection engine used to implement this conversion\nis not capable of transforming coordinates from one ",(0,r.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Earth_ellipsoid"},"ellipsoid")," to another, and\nso the resulting JSON SHOULD (somehow, tbd) be tagged with the datum in use by the projection of the layer.")),(0,r.kt)("h4",{id:"return-value-4"},"Return value"),(0,r.kt)("p",null,"A GeoJSON object representing the feature"),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"events"},"Events"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Event name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"click"),(0,r.kt)("td",{parentName:"tr",align:null},"The click event occurs when the user clicks or touches the feature with the keyboard or pointer, or when the ",(0,r.kt)("a",{parentName:"td",href:"#click"},"click()")," method is called.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"focus"),(0,r.kt)("td",{parentName:"tr",align:null},"The focus event occurs when the feature gains focus with a keyboard or pointer, or when the ",(0,r.kt)("a",{parentName:"td",href:"#focus"},"focus()")," method is called.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"blur"),(0,r.kt)("td",{parentName:"tr",align:null},"The blur event occurs when the feature loses focus with a keyboard or pointer, or when the ",(0,r.kt)("a",{parentName:"td",href:"#blur"},"blur()")," method is called.")))),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"examples"},"Examples"),(0,r.kt)("h3",{id:"mapml2geojson"},"mapml2geojson"),(0,r.kt)("h4",{id:"default-options"},"Default options"),(0,r.kt)("p",null,"An example showcasing default GeoJSON output when no options are provided."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html"},'<layer- label="Point Geometry" checked="">\n   <map-meta name="extent" content="top-left-longitude=-75.916809, top-left-latitude=45.886964, bottom-right-longitude=-75.516809,bottom-right-latitude=45.26964"></map-meta>\n   <map-meta name="projection" content="OSMTILE"></map-meta>\n   <map-meta name="cs" content="gcrs"></map-meta>\n   <map-feature>\n      <map-featurecaption>Point Geometry</map-featurecaption>\n      <map-geometry>\n         <map-point>\n            <map-coordinates>-75.6916809 45.4186964</map-coordinates>\n         </map-point>\n      </map-geometry>\n      <map-properties>\n         <table>\n            <thead>\n               <tr>\n                  <th role="columnheader" scope="col">Property name</th>\n                  <th role="columnheader" scope="col">Property value</th>\n               </tr>\n            </thead>\n            <tbody>\n               <tr>\n                  <th scope="row">prop0</th>\n                  <td itemprop="prop0">This is a Point</td>\n               </tr>\n            </tbody>\n         </table>\n      </map-properties>\n   </map-feature>\n</layer->\n<script>\nwindow.onload = (event) => {\n   let layer = document.querySelector(\'layer-\');\n   let output = layer.mapml2geojson();\n};\n<\/script>\n')),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Click to view the output GeoJSON"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'{\n "title": "Point Geometry",\n "bbox": [-75.916809, 45.886964, -75.516809, 45.26964],\n "type": "FeatureCollection",\n "features": [{\n     "type": "Feature",\n     "geometry": {\n         "type": "Point",\n         "coordinates": [-75.6916809, 45.4186964]\n     },\n     "properties": {\n         "prop0": "This is a Point"\n     }\n }]\n}\n'))),(0,r.kt)("hr",null))}s.isMDXComponent=!0}}]);