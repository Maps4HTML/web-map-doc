(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{116:function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return b}));var a=n(0),r=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var m=r.a.createContext({}),p=function(e){var t=r.a.useContext(m),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=p(e.components);return r.a.createElement(m.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,m=c(e,["components","mdxType","originalType","parentName"]),s=p(n),d=a,b=s["".concat(o,".").concat(d)]||s[d]||u[d]||i;return n?r.a.createElement(b,l(l({ref:t},m),{},{components:n})):r.a.createElement(b,l({ref:t},m))}));function b(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var m=2;m<i;m++)o[m]=n[m];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},98:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return l})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return p}));var a=n(3),r=n(7),i=(n(0),n(116)),o={id:"custom-rendering",title:"Custom Rendering API",slug:"/api/custom-rendering"},l={unversionedId:"api/custom-rendering",id:"api/custom-rendering",isDocsHomePage:!1,title:"Custom Rendering API",description:"The Custom Rendering API allows developers to circumvent MapML's rendering and draw anything within",source:"@site/docs/api/custom-rendering.md",slug:"/api/custom-rendering",permalink:"/web-map-doc/docs/api/custom-rendering",version:"current",sidebar:"sidebar",previous:{title:"Custom Projections API",permalink:"/web-map-doc/docs/api/custom-projections"},next:{title:"Debug Mode",permalink:"/web-map-doc/docs/resources/debug-mode"}},c=[{value:"Custom Tiles",id:"custom-tiles",children:[{value:"<code>tileloadstart</code> Event",id:"tileloadstart-event",children:[]},{value:"Example",id:"example",children:[]}]},{value:"Custom Image",id:"custom-image",children:[]}],m={toc:c};function p(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},m,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"The Custom Rendering API allows developers to circumvent MapML's rendering and draw anything within\nHTML's domain onto the map."),Object(i.b)("h2",{id:"custom-tiles"},"Custom Tiles"),Object(i.b)("p",null,"To render custom tiles using JavaScript, listen for the ",Object(i.b)("inlineCode",{parentName:"p"},"tileloadstart")," event on a templated layer's ",Object(i.b)("inlineCode",{parentName:"p"},'<map-link rel="tile">')," element."),Object(i.b)("h3",{id:"tileloadstart-event"},Object(i.b)("inlineCode",{parentName:"h3"},"tileloadstart")," Event"),Object(i.b)("p",null,"This event is fired when a tile is first being created, the event contains the following structure in its detail property:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},"{\n  x: 1,    // tilematrix x value of the tile loaded\n  y: 2,    // tilematrix y value of the tile loaded\n  zoom: 3, // zoom level of the tile loaded\n  appendTile: function appendTile ( customTile ) {...} // pass custom tile as an argument to function\n}\n")),Object(i.b)("h3",{id:"example"},"Example"),Object(i.b)("p",null,"The map:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-html"},'<mapml-viewer projection="OSMTILE" zoom="0" lat="45" lon="-75" controls>\n  <layer- label="Custom Tiles" checked>\n    <map-meta name="zoom" content="min=0,max=23" ></map-meta>\n    <map-extent units="OSMTILE">\n      <map-input name="zoomLevel" type="zoom" min="0" max="23" value="1" ></map-input>\n      <map-input name="row" type="location" axis="row" units="tilematrix" min="0" max="2" ></map-input>\n      <map-input name="col" type="location" axis="column" units="tilematrix" min="0" max="2" ></map-input>\n      \x3c!-- listen for the tileloadstart event on this element --\x3e\n      <map-link rel="tile" title="" tref="" ></map-link>\n    </map-extent>\n  </layer->\n</mapml-viewer>\n')),Object(i.b)("p",null,"The JavaScript for creating custom tiles:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},'let layer = document.querySelector("body > mapml-viewer > layer- > map-extent > map-link");\n    layer.addEventListener("tileloadstart", (e) => {\n      let customTile = document.createElement("p");\n      customTile.innerHTML = `x: {e.detail.x} y: {e.detail.y} zoom: {e.detail.zoom}`;\n      e.detail.appendTile(customTile);\n    });\n')),Object(i.b)("p",null,"In this example the ",Object(i.b)("inlineCode",{parentName:"p"},"customTile")," is an HTML ",Object(i.b)("inlineCode",{parentName:"p"},"<p>"),", but you can use any HTML Element. Simply append the\ncreated element using the ",Object(i.b)("inlineCode",{parentName:"p"},"(tileloadstart event).detail.appendTile()")," function, passing the custom tile as an argument of the function."),Object(i.b)("h2",{id:"custom-image"},"Custom Image"),Object(i.b)("div",{className:"admonition admonition-important alert alert--info"},Object(i.b)("div",{parentName:"div",className:"admonition-heading"},Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",{parentName:"h5",className:"admonition-icon"},Object(i.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(i.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"important")),Object(i.b)("div",{parentName:"div",className:"admonition-content"},Object(i.b)("p",{parentName:"div"},"Needs to be implemented."))))}p.isMDXComponent=!0}}]);