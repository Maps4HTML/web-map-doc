import{CodeMirror}from"./CodeMirror.js";export{CodeMirror}from"./CodeMirror.js";import{eventMixin}from"../util/event.js";import{indexOf}from"../util/misc.js";import{defineOptions}from"./options.js";defineOptions(CodeMirror);import addEditorMethods from"./methods.js";addEditorMethods(CodeMirror);import Doc from"../model/Doc.js";let dontDelegate="iter insert remove copy getEditor constructor".split(" ");for(let o in Doc.prototype)Doc.prototype.hasOwnProperty(o)&&indexOf(dontDelegate,o)<0&&(CodeMirror.prototype[o]=function(o){return function(){return o.apply(this.doc,arguments)}}(Doc.prototype[o]));eventMixin(Doc);import ContentEditableInput from"../input/ContentEditableInput.js";import TextareaInput from"../input/TextareaInput.js";CodeMirror.inputStyles={textarea:TextareaInput,contenteditable:ContentEditableInput};import{defineMIME,defineMode}from"../modes.js";CodeMirror.defineMode=function(o){CodeMirror.defaults.mode||"null"==o||(CodeMirror.defaults.mode=o),defineMode.apply(this,arguments)},CodeMirror.defineMIME=defineMIME,CodeMirror.defineMode("null",(()=>({token:o=>o.skipToEnd()}))),CodeMirror.defineMIME("text/plain","null"),CodeMirror.defineExtension=(o,e)=>{CodeMirror.prototype[o]=e},CodeMirror.defineDocExtension=(o,e)=>{Doc.prototype[o]=e};import{fromTextArea}from"./fromTextArea.js";CodeMirror.fromTextArea=fromTextArea;import{addLegacyProps}from"./legacy.js";addLegacyProps(CodeMirror),CodeMirror.version="5.64.0";