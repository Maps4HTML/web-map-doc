import{getContextBefore}from"../line/highlight.js";import{Pos}from"../line/pos.js";import{getLine}from"../line/utils_line.js";import{replaceRange}from"../model/changes.js";import{Range}from"../model/selection.js";import{replaceOneSelection}from"../model/selection_updates.js";import{countColumn,Pass,spaceStr}from"../util/misc.js";export function indentLine(e,t,n,o){let l,i=e.doc;null==n&&(n="add"),"smart"==n&&(i.mode.indent?l=getContextBefore(e,t).state:n="prev");let s=e.options.tabSize,r=getLine(i,t),a=countColumn(r.text,null,s);r.stateAfter&&(r.stateAfter=null);let m,p=r.text.match(/^\s*/)[0];if(o||/\S/.test(r.text)){if("smart"==n&&(m=i.mode.indent(l,r.text.slice(p.length),r.text),m==Pass||m>150)){if(!o)return;n="prev"}}else m=0,n="not";"prev"==n?m=t>i.first?countColumn(getLine(i,t-1).text,null,s):0:"add"==n?m=a+e.options.indentUnit:"subtract"==n?m=a-e.options.indentUnit:"number"==typeof n&&(m=a+n),m=Math.max(0,m);let f="",c=0;if(e.options.indentWithTabs)for(let u=Math.floor(m/s);u;--u)c+=s,f+="\t";if(c<m&&(f+=spaceStr(m-c)),f!=p)return replaceRange(i,f,Pos(t,0),Pos(t,p.length),"+input"),r.stateAfter=null,!0;for(let u=0;u<i.sel.ranges.length;u++){let e=i.sel.ranges[u];if(e.head.line==t&&e.head.ch<p.length){let e=Pos(t,p.length);replaceOneSelection(i,u,new Range(e,e));break}}}