/*! @maps4html/web-map-custom-element 11-01-2023 */

function properties2Table(o){let e=document.createElement("table"),t=e.createTHead(),r=t.insertRow(),n=document.createElement("th"),a=document.createElement("th");n.appendChild(document.createTextNode("Property name")),a.appendChild(document.createTextNode("Property value")),n.setAttribute("role","columnheader"),a.setAttribute("role","columnheader"),n.setAttribute("scope","col"),a.setAttribute("scope","col"),r.appendChild(n),r.appendChild(a);let l=e.createTBody();for(var p in o)if(o.hasOwnProperty(p)){let e=l.insertRow(),t=document.createElement("th"),r=document.createElement("td");t.appendChild(document.createTextNode(p)),r.appendChild(document.createTextNode(o[p])),t.setAttribute("scope","row"),r.setAttribute("itemprop",p),e.appendChild(t),e.appendChild(r)}return e}function geojson2mapml(c,m={},s=null){m=Object.assign({},{label:null,projection:"OSMTILE",caption:null,properties:null,geometryFunction:null},m);var u=(c="string"==typeof c?JSON.parse(c):c).type.toUpperCase();let d="",e=new DOMParser;null===s&&(a="<layer- label='' checked><map-meta name='projection' content='"+m.projection+"'></map-meta><map-meta name='cs' content='gcrs'></map-meta></layer->",s=e.parseFromString(a,"text/html"),null!==m.label?s.querySelector("layer-").setAttribute("label",m.label):c.name?s.querySelector("layer-").setAttribute("label",c.name):c.title?s.querySelector("layer-").setAttribute("label",c.title):s.querySelector("layer-").setAttribute("label","Layer"));let y="<map-point></map-point>";y=e.parseFromString("<map-point></map-point>","text/html");let g="<map-multipoint><map-coordinates></map-coordinates></map-multipoint>";g=e.parseFromString("<map-multipoint><map-coordinates></map-coordinates></map-multipoint>","text/html");let f="<map-linestring><map-coordinates></map-coordinates></map-linestring>";f=e.parseFromString("<map-linestring><map-coordinates></map-coordinates></map-linestring>","text/html");let b="<map-multilinestring></map-multilinestring>";b=e.parseFromString("<map-multilinestring></map-multilinestring>","text/html");let h="<map-polygon></map-polygon>";h=e.parseFromString("<map-polygon></map-polygon>","text/html");let S="<map-multipolygon></map-multipolygon>";S=e.parseFromString("<map-multipolygon></map-multipolygon>","text/html");let T="<map-geometrycollection></map-geometrycollection>";T=e.parseFromString("<map-geometrycollection></map-geometrycollection>","text/html");let n="<map-feature><map-featurecaption></map-featurecaption><map-geometry></map-geometry><map-properties></map-properties></map-feature>";n=e.parseFromString("<map-feature><map-featurecaption></map-featurecaption><map-geometry></map-geometry><map-properties></map-properties></map-feature>","text/html");let L="<map-coordinates></map-coordinates>";if(L=e.parseFromString("<map-coordinates></map-coordinates>","text/html"),"FEATURECOLLECTION"===u){c.bbox&&s.querySelector("layer-").insertAdjacentHTML("afterbegin","<map-meta name='extent' content='top-left-longitude="+c.bbox[0]+", top-left-latitude="+c.bbox[1]+", bottom-right-longitude="+c.bbox[2]+",bottom-right-latitude="+c.bbox[3]+"'></map-meta>");var t=c.features;for(let e=0;e<t.length;e++)geojson2mapml(t[e],m,s)}else if("FEATURE"===u){let e=n.cloneNode(!0),t=e.querySelector("map-feature");c.bbox&&s.querySelector("layer-").insertAdjacentHTML("afterbegin","<map-meta name='extent' content='top-left-longitude="+c.bbox[0]+", top-left-latitude="+c.bbox[1]+", bottom-right-longitude="+c.bbox[2]+",bottom-right-latitude="+c.bbox[3]+"'></map-meta>");let r=s.querySelector("layer-").getAttribute("label");"function"==typeof m.caption?r=m.caption(c):"string"==typeof m.caption&&(r=c.properties[m.caption],void 0===r&&(r=m.caption)),t.querySelector("map-featurecaption").innerHTML=r;let o;"function"==typeof m.properties?(o=m.properties(c),o instanceof Element||(o=!1,console.error("options.properties function returns a string instead of an HTMLElement."))):o="string"==typeof m.properties?(t.querySelector("map-properties").insertAdjacentHTML("beforeend",m.properties),!1):m.properties instanceof HTMLElement?m.properties:properties2Table(c.properties),o&&t.querySelector("map-properties").appendChild(o);var a=geojson2mapml(c.geometry,m,s);"function"==typeof m.geometryFunction?t.querySelector("map-geometry").appendChild(m.geometryFunction(a,c)):t.querySelector("map-geometry").appendChild(a),s.querySelector("layer-").appendChild(t)}else if(["POINT","LINESTRING","POLYGON","MULTIPOINT","MULTILINESTRING","MULTIPOLYGON","GEOMETRYCOLLECTION"].includes(u))switch(u){case"POINT":d=c.coordinates[0]+" "+c.coordinates[1];let e=y.cloneNode(!0);e=e.querySelector("map-point");let t=L.cloneNode(!0);return t=t.querySelector("map-coordinates"),t.innerHTML=d,e.appendChild(t),e;case"LINESTRING":let r=f.cloneNode(!0),o=r.querySelector("map-coordinates");d="";for(let e=0;e<c.coordinates.length;e++)d=d+c.coordinates[e][0]+" "+c.coordinates[e][1]+" ";return o.innerHTML=d,r.querySelector("map-linestring");case"POLYGON":let n=h.cloneNode(!0);n=n.querySelector("map-polygon");for(let r=0;r<c.coordinates.length;r++){let t="",e=L.cloneNode(!0);e=e.querySelector("map-coordinates");for(let e=0;e<c.coordinates[r].length;e++)t=t+c.coordinates[r][e][0]+" "+c.coordinates[r][e][1]+" ";e.innerHTML=t,n.appendChild(e)}return n;case"MULTIPOINT":d="";let a=g.cloneNode(!0);a=a.querySelector("map-multipoint");for(let e=0;e<c.coordinates.length;e++)d=d+c.coordinates[e][0]+" "+c.coordinates[e][1]+" ";return a.querySelector("map-coordinates").innerHTML=d,a;case"MULTILINESTRING":let l=b.cloneNode(!0);l=l.querySelector("map-multilinestring");for(let r=0;r<c.coordinates.length;r++){let t="",e=L.cloneNode(!0);e=e.querySelector("map-coordinates");for(let e=0;e<c.coordinates[r].length;e++)t=t+c.coordinates[r][e][0]+" "+c.coordinates[r][e][1]+" ";e.innerHTML=t,l.appendChild(e)}return l;case"MULTIPOLYGON":let p=S.cloneNode(!0);p=p.querySelector("map-multiPolygon");for(let n=0;n<c.coordinates.length;n++){let o=h.cloneNode(!0);o=o.querySelector("map-polygon");for(let r=0;r<c.coordinates[n].length;r++){let t="",e=L.cloneNode(!0);e=e.querySelector("map-coordinates");for(let e=0;e<c.coordinates[n][r].length;e++)t=t+c.coordinates[n][r][e][0]+" "+c.coordinates[n][r][e][1]+" ";e.innerHTML=t,o.appendChild(e)}p.appendChild(o)}return p;case"GEOMETRYCOLLECTION":let i=T.cloneNode(!0);i=i.querySelector("map-geometrycollection");for(let e=0;e<c.geometries.length;e++){var q=geojson2mapml(c.geometries[e],m,s);i.appendChild(q)}return i}return s.querySelector("layer-")}function breakArray(t){let r=[];t=t.filter(e=>!/[^\d.-]/g.test(e)).filter(e=>e);for(let e=0;e<t.length;e+=2)r.push(t.slice(e,e+2).map(Number));return r}function table2properties(e){null!==e.querySelector("thead")&&e.querySelector("thead").remove();let t={};return e.querySelectorAll("tr").forEach(e=>{e=e.querySelectorAll("th, td");t[e[0].innerHTML]=e[1].innerHTML}),t}function geometry2geojson(e,n,a,l){let p=e.nodeName,i={},c;switch(p.toUpperCase()){case"MAP-POINT":var m;i.type="Point",l?(m=proj4.transform(n,a,e.querySelector("map-coordinates").innerHTML.split(/[<>\ ]/g).map(Number)),i.coordinates=[m.x,m.y]):i.coordinates=e.querySelector("map-coordinates").innerHTML.split(/[<>\ ]/g).map(Number);break;case"MAP-LINESTRING":i.type="LineString",c=e.querySelector("map-coordinates").innerHTML.split(/[<>\ ]/g),c=breakArray(c),l&&(c=pcrsToGcrs(c,n,a)),i.coordinates=c;break;case"MAP-POLYGON":i.type="Polygon",i.coordinates=[];let t=0;e.querySelectorAll("map-coordinates").forEach(e=>{e=breakArray(e=e.innerHTML.split(/[<>\ ]/g)),l&&(e=pcrsToGcrs(e,n,a)),i.coordinates[t]=e,t++});break;case"MAP-MULTIPOINT":i.type="MultiPoint",c=breakArray(e.querySelector("map-coordinates").innerHTML.split(/[<>\ ]/g)),l&&(c=pcrsToGcrs(c,n,a)),i.coordinates=c;break;case"MAP-MULTILINESTRING":i.type="MultiLineString",i.coordinates=[];let r=0;e.querySelectorAll("map-coordinates").forEach(e=>{e=breakArray(e=e.innerHTML.split(/[<>\ ]/g)),l&&(e=pcrsToGcrs(e,n,a)),i.coordinates[r]=e,r++});break;case"MAP-MULTIPOLYGON":i.type="MultiPolygon",i.coordinates=[];let o=0;e.querySelectorAll("map-polygon").forEach(e=>{let t=0;i.coordinates.push([]),e.querySelectorAll("map-coordinates").forEach(e=>{e=breakArray(e=e.innerHTML.split(/[<>\ ]/g)),l&&(e=pcrsToGcrs(e,n,a)),i.coordinates[o].push([]),i.coordinates[o][t]=e,t++}),o++})}return i}function pcrsToGcrs(t,r,o){let n=[];for(let e=0;e<t.length;e++){var a=[(a=proj4.transform(r,o,t[e])).x,a.y];n.push(a)}return n}function mapml2geojson(e,n={}){n=Object.assign({},{propertyFunction:null,transform:!0},n);let a={type:"FeatureCollection"};a.title=e.getAttribute("label"),a.features=[];let l=null,p=null;n.transform&&(l=new proj4.Proj(e.parentElement._map.options.crs.code),p=new proj4.Proj("EPSG:4326"),"EPSG:3857"!==e.parentElement._map.options.crs.code&&"EPSG:4326"!==e.parentElement._map.options.crs.code||(n.transform=!1));let t=e.querySelectorAll("map-meta");t.forEach(t=>{if("extent"===t.getAttribute("name")){let e=t.getAttribute("content"),r=e.split(","),o={};for(let t=0;t<r.length;t++){let e=r[t].split("=");e[0]=e[0].trim(),e[1]=parseFloat(e[1]),o[e[0]]=e[1]}a.bbox=[o["top-left-longitude"],o["top-left-latitude"],o["bottom-right-longitude"],o["bottom-right-latitude"]]}});let r=e.querySelectorAll("map-feature"),i=0;return r.forEach(e=>{var t;a.features[i]={type:"Feature"},a.features[i].geometry={},a.features[i].properties={},"function"==typeof n.propertyFunction?(t=n.propertyFunction(e.querySelector("map-properties")),a.features[i].properties=t):null!==e.querySelector("map-properties").querySelector("table")?(t=table2properties(e.querySelector("map-properties").querySelector("table")),a.features[i].properties=t):a.features[i].properties={prop0:e.querySelector("map-properties").innerHTML.replace(/(<([^>]+)>)/gi,"")};let r=e.querySelector("map-geometry"),o=r.children[0].nodeName;"MAP-GEOMETRYCOLLECTION"!==o.toUpperCase()?a.features[i].geometry=geometry2geojson(r.children[0],l,p,n.transform):(a.features[i].geometry.type="GeometryCollection",a.features[i].geometry.geometries=[],e=r.querySelector("map-geometrycollection").children,Array.from(e).forEach(e=>{e=geometry2geojson(e,l,p,n.transform),a.features[i].geometry.geometries.push(e)})),i++}),a}
//# sourceMappingURL=geojson.js.map