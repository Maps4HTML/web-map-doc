{"version":3,"file":"map-extent.js","sources":["../src/map-extent.js"],"sourcesContent":["/* global M */\nexport class MapExtent extends HTMLElement {\n  static get observedAttributes() {\n    return ['checked', 'label', 'opacity', 'hidden'];\n  }\n  /* jshint ignore:start */\n  #hasConnected;\n  /* jshint ignore:end */\n  get units() {\n    return this.getAttribute('units') || M.FALLBACK_PROJECTION;\n  }\n\n  get checked() {\n    return this.hasAttribute('checked');\n  }\n\n  set checked(val) {\n    if (val) {\n      this.setAttribute('checked', '');\n    } else {\n      this.removeAttribute('checked');\n    }\n  }\n  get label() {\n    return this.hasAttribute('label')\n      ? this.getAttribute('label')\n      : M.options.locale.dfExtent;\n  }\n  set label(val) {\n    if (val) {\n      this.setAttribute('label', val);\n    }\n  }\n  get opacity() {\n    // use ?? since 0 is falsy, || would return rhs in that case\n    return +(this._opacity ?? this.getAttribute('opacity'));\n  }\n\n  set opacity(val) {\n    if (+val > 1 || +val < 0) return;\n    this.setAttribute('opacity', val);\n  }\n  get hidden() {\n    return this.hasAttribute('hidden');\n  }\n\n  set hidden(val) {\n    if (val) {\n      this.setAttribute('hidden', '');\n    } else {\n      this.removeAttribute('hidden');\n    }\n  }\n  get extent() {\n    const getExtent = (extent) => {\n      return Object.assign(\n        M._convertAndFormatPCRS(\n          extent._extentLayer.bounds,\n          M[extent.units],\n          extent.units\n        ),\n        { zoom: extent._extentLayer.zoomBounds }\n      );\n    };\n    const getCalculatedExtent = (extent) => {\n      extent._calculateBounds();\n      return getExtent(extent);\n    };\n\n    return this._extentLayer.bounds\n      ? getExtent(this)\n      : getCalculatedExtent(this);\n  }\n  zoomTo() {\n    let extent = this.extent;\n    let map = this.getMapEl()._map,\n      xmin = extent.topLeft.pcrs.horizontal,\n      xmax = extent.bottomRight.pcrs.horizontal,\n      ymin = extent.bottomRight.pcrs.vertical,\n      ymax = extent.topLeft.pcrs.vertical,\n      bounds = L.bounds(L.point(xmin, ymin), L.point(xmax, ymax)),\n      center = map.options.crs.unproject(bounds.getCenter(true)),\n      maxZoom = extent.zoom.maxZoom,\n      minZoom = extent.zoom.minZoom;\n    map.setView(center, M.getMaxZoom(bounds, map, minZoom, maxZoom), {\n      animate: false\n    });\n  }\n  getMapEl() {\n    return this.getRootNode() instanceof ShadowRoot\n      ? this.getRootNode().host.closest('mapml-viewer,map[is=web-map]')\n      : this.closest('mapml-viewer,map[is=web-map]');\n  }\n  getLayerEl() {\n    return this.getRootNode() instanceof ShadowRoot\n      ? this.getRootNode().host\n      : this.closest('layer-');\n  }\n  attributeChangedCallback(name, oldValue, newValue) {\n    if (this.#hasConnected /* jshint ignore:line */) {\n      switch (name) {\n        case 'units':\n          if (oldValue !== newValue) {\n            // handle side effects\n          }\n          break;\n        case 'label':\n          if (oldValue !== newValue) {\n            this._layerControlHTML.querySelector(\n              '.mapml-layer-item-name'\n            ).innerHTML = newValue || M.options.locale.dfExtent;\n          }\n          break;\n        case 'checked':\n          this.parentLayer\n            .whenReady()\n            .then(() => {\n              this._handleChange();\n              this._calculateBounds();\n              this._layerControlCheckbox.checked = newValue !== null;\n            })\n            .catch((error) => {\n              console.log(\n                'Error while waiting on parentLayer for map-extent checked callback: ' +\n                  error\n              );\n            });\n          break;\n        case 'opacity':\n          if (oldValue !== newValue) {\n            this._opacity = newValue;\n            if (this._extentLayer) this._extentLayer.changeOpacity(newValue);\n          }\n          break;\n        case 'hidden':\n          if (oldValue !== newValue) {\n            this.parentLayer\n              .whenReady()\n              .then(() => {\n                let extentsRootFieldset =\n                  this.parentLayer._propertiesGroupAnatomy;\n                let position = Array.from(\n                  this.parentNode.querySelectorAll('map-extent:not([hidden])')\n                ).indexOf(this);\n                if (newValue !== null) {\n                  // remove from layer control (hide from user)\n                  this._layerControlHTML.remove();\n                } else {\n                  // insert the extent fieldset into the layer control container in\n                  // the calculated position\n                  if (position === 0) {\n                    extentsRootFieldset.insertAdjacentElement(\n                      'afterbegin',\n                      this._layerControlHTML\n                    );\n                  } else if (position > 0) {\n                    this.parentNode\n                      .querySelectorAll('map-extent:not([hidden])')\n                      [position - 1]._layerControlHTML.insertAdjacentElement(\n                        'afterend',\n                        this._layerControlHTML\n                      );\n                  }\n                }\n                this._validateLayerControlContainerHidden();\n              })\n              .catch(() => {\n                console.log(\n                  'Error while waiting on parentLayer for map-extent hidden callback'\n                );\n              });\n          }\n          break;\n      }\n    }\n  }\n  constructor() {\n    // Always call super first in constructor\n    super();\n    this._createLayerControlExtentHTML =\n      M._createLayerControlExtentHTML.bind(this);\n    this._changeHandler = this._handleChange.bind(this);\n  }\n  async connectedCallback() {\n    // this.parentNode.host returns the layer- element when parentNode is\n    // the shadow root\n    this.parentLayer =\n      this.parentNode.nodeName.toUpperCase() === 'LAYER-'\n        ? this.parentNode\n        : this.parentNode.host;\n    if (\n      this.hasAttribute('data-moving') ||\n      this.parentLayer.hasAttribute('data-moving')\n    )\n      return;\n    this.mapEl = this.parentLayer.closest('mapml-viewer,map[is=web-map]');\n    await this.mapEl.whenProjectionDefined(this.units).catch(() => {\n      throw new Error('Undefined projection:' + this.units);\n    });\n    // when projection is changed, the parent layer-._layer is created (so whenReady is fulfilled) but then removed,\n    // then the map-extent disconnectedCallback will be triggered by layer-._onRemove() (clear the shadowRoot)\n    // even before connectedCallback is finished\n    // in this case, the microtasks triggered by the fulfillment of the removed MapMLLayer should be stopped as well\n    // !this.isConnected <=> the disconnectedCallback has run before\n    if (!this.isConnected) return;\n    /* jshint ignore:start */\n    this.#hasConnected = true;\n    /* jshint ignore:end */\n    this._map = this.mapEl._map;\n    this.parentLayer.addEventListener('map-change', this._changeHandler);\n    this.mapEl.addEventListener('map-projectionchange', this._changeHandler);\n    // this._opacity is used to record the current opacity value (with or without updates),\n    // the initial value of this._opacity should be set as opacity attribute value, if exists, or the default value 1.0\n    this._opacity = this.opacity || 1.0;\n    this._extentLayer = M.extentLayer({\n      opacity: this.opacity,\n      crs: M[this.units],\n      extentZIndex: Array.from(\n        this.parentLayer.querySelectorAll('map-extent')\n      ).indexOf(this),\n      extentEl: this\n    });\n    // this._layerControlHTML is the fieldset for the extent in the LayerControl\n    this._layerControlHTML = this._createLayerControlExtentHTML();\n    this._calculateBounds();\n    this._bindMutationObserver();\n  }\n  /*\n   * Set up a function to watch additions of child elements of map-extent\n   * and to invoke desired side  effects of those additions via\n   * _runMutationObserver\n   */\n  _bindMutationObserver() {\n    this._observer = new MutationObserver((mutationList) => {\n      for (let mutation of mutationList) {\n        // the attributes changes should be handled by attributeChangedCallback()\n        if (mutation.type === 'childList') {\n          this._runMutationObserver(mutation.addedNodes);\n        }\n      }\n    });\n    // childList observes immediate children only (not grandchildren etc)\n    this._observer.observe(this, {\n      childList: true\n    });\n  }\n  _runMutationObserver(elementsGroup) {\n    const _addMetaElement = (mapMeta) => {\n      this.whenReady().then(() => {\n        this._calculateBounds();\n        this._validateDisabled();\n      });\n    };\n    for (let i = 0; i < elementsGroup.length; ++i) {\n      let element = elementsGroup[i];\n      switch (element.nodeName) {\n        case 'MAP-META':\n          const name =\n            element.hasAttribute('name') &&\n            (element.getAttribute('name').toLowerCase() === 'zoom' ||\n              element.getAttribute('name').toLowerCase() === 'extent');\n          if (name && element.hasAttribute('content')) {\n            _addMetaElement(element);\n          }\n          break;\n        case 'MAP-LINK':\n        // might need this in future, among others\n        default:\n          break;\n      }\n    }\n  }\n  getLayerControlHTML() {\n    return this._layerControlHTML;\n  }\n  _projectionMatch() {\n    return (\n      this.units.toUpperCase() === this._map.options.projection.toUpperCase()\n    );\n  }\n  _validateDisabled() {\n    if (!this._extentLayer) return;\n    let templates = this.querySelectorAll(\n      'map-link[rel=image],map-link[rel=tile],map-link[rel=features],map-link[rel=query]'\n    );\n    const noTemplateVisible = () => {\n      let totalTemplateCount = templates.length,\n        disabledTemplateCount = 0;\n      for (let j = 0; j < totalTemplateCount; j++) {\n        if (!templates[j]._validateDisabled()) {\n          disabledTemplateCount++;\n        }\n      }\n      return disabledTemplateCount === totalTemplateCount;\n    };\n    if (!this._projectionMatch() || noTemplateVisible()) {\n      this.setAttribute('disabled', '');\n      this.disabled = true;\n    } else {\n      this.removeAttribute('disabled');\n      this.disabled = false;\n    }\n    this.toggleLayerControlDisabled();\n    this._handleChange();\n    return this.disabled;\n  }\n  getMeta(metaName) {\n    let name = metaName.toLowerCase();\n    if (name !== 'extent' && name !== 'zoom') return;\n    return this.parentLayer.src\n      ? this.querySelector(`:scope > map-meta[name=${name}]`) ||\n          this.parentLayer.shadowRoot.querySelector(\n            `:host > map-meta[name=${name}]`\n          )\n      : this.querySelector(`:scope > map-meta[name=${name}]`) ||\n          this.parentLayer.querySelector(`:scope > map-meta[name=${name}]`);\n  }\n  // disable/italicize layer control elements based on the map-extent.disabled property\n  toggleLayerControlDisabled() {\n    let input = this._layerControlCheckbox,\n      label = this._layerControlLabel, // access to the label for the specific map-extent\n      opacityControl = this._opacityControl,\n      opacitySlider = this._opacitySlider,\n      selectDetails = this._selectdetails;\n    if (this.disabled) {\n      // update the status of layerControl\n      input.disabled = true;\n      opacitySlider.disabled = true;\n      label.style.fontStyle = 'italic';\n      opacityControl.style.fontStyle = 'italic';\n      if (selectDetails) {\n        selectDetails.forEach((i) => {\n          i.querySelectorAll('select').forEach((j) => {\n            j.disabled = true;\n            j.style.fontStyle = 'italic';\n          });\n          i.style.fontStyle = 'italic';\n        });\n      }\n    } else {\n      input.disabled = false;\n      opacitySlider.disabled = false;\n      label.style.fontStyle = 'normal';\n      opacityControl.style.fontStyle = 'normal';\n      if (selectDetails) {\n        selectDetails.forEach((i) => {\n          i.querySelectorAll('select').forEach((j) => {\n            j.disabled = false;\n            j.style.fontStyle = 'normal';\n          });\n          i.style.fontStyle = 'normal';\n        });\n      }\n    }\n  }\n\n  _handleChange() {\n    // add _extentLayer to map if map-extent is checked, otherwise remove it\n    if (this.checked && !this.disabled) {\n      // can be added to mapmllayer layerGroup no matter layer- is checked or not\n      this._extentLayer.addTo(this.parentLayer._layer);\n      this._extentLayer.setZIndex(\n        Array.from(this.parentLayer.querySelectorAll('map-extent')).indexOf(\n          this\n        )\n      );\n    } else {\n      this.parentLayer._layer.removeLayer(this._extentLayer);\n    }\n    // change the checkbox in the layer control to match map-extent.checked\n    // doesn't trigger the event handler because it's not user-caused AFAICT\n  }\n  _validateLayerControlContainerHidden() {\n    let extentsFieldset = this.parentLayer._propertiesGroupAnatomy;\n    let nodeToSearch = this.parentLayer.src\n      ? this.parentLayer.shadowRoot\n      : this.parentLayer;\n    if (!extentsFieldset) return;\n    if (\n      nodeToSearch.querySelectorAll('map-extent:not([hidden])').length === 0\n    ) {\n      extentsFieldset.setAttribute('hidden', '');\n    } else {\n      extentsFieldset.removeAttribute('hidden');\n    }\n  }\n  disconnectedCallback() {\n    // in case of projection change, the disconnectedcallback will be triggered by removing layer-._layer even before\n    // map-extent.connectedcallback is finished (because it will wait for the layer- to be ready)\n    // !this._extentLayer <=> this.connectedCallback has not yet been finished before disconnectedCallback is triggered\n    if (\n      this.hasAttribute('data-moving') ||\n      this.parentLayer.hasAttribute('data-moving') ||\n      !this._extentLayer\n    )\n      return;\n    this._validateLayerControlContainerHidden();\n    // remove layer control for map-extent from layer control DOM\n    // TODO: for the case of projection change, the layer control for map-extent has been created while _extentLayer has not yet been ready\n    this._layerControlHTML.remove();\n    if (this.parentLayer._layer) {\n      this.parentLayer._layer.removeLayer(this._extentLayer);\n    }\n    this.parentLayer.removeEventListener('map-change', this._changeHandler);\n    this.mapEl.removeEventListener('map-projectionchange', this._changeHandler);\n    delete this._extentLayer;\n    if (this.parentLayer._layer) delete this.parentLayer._layer.bounds;\n  }\n  _calculateBounds() {\n    delete this._extentLayer.bounds;\n    delete this._extentLayer.zoomBounds;\n    if (this.parentLayer._layer) delete this.parentLayer._layer.bounds;\n    let zoomMax = -Infinity,\n      zoomMin = Infinity,\n      maxNativeZoom = -Infinity,\n      minNativeZoom = Infinity,\n      templates = this.querySelectorAll(\n        'map-link[rel=image],map-link[rel=tile],map-link[rel=features],map-link[rel=query]'\n      );\n\n    // initialize bounds from this.scope > map-meta\n    let bounds = this.querySelector(':scope > map-meta[name=extent][content]')\n      ? M.getBoundsFromMeta(this) // TODO rewrite this pile of doo doo\n      : undefined;\n\n    // initialize zoom bounds from this.scope > map-meta\n    let zoomBounds = this.querySelector(':scope > map-meta[name=zoom][content]')\n      ? M.getZoomBoundsFromMeta(this) // TODO rewrite this pile of doo doo\n      : undefined;\n\n    // bounds should be able to be calculated unconditionally, not depend on map-extent.checked\n    for (let j = 0; j < templates.length; j++) {\n      const templateZoomBounds = templates[j].getZoomBounds(),\n        templateBounds = templates[j].getBounds();\n      let zoomMax =\n          zoomBounds && zoomBounds.hasOwnProperty('maxZoom')\n            ? zoomBounds.maxZoom\n            : -Infinity,\n        zoomMin =\n          zoomBounds && zoomBounds.hasOwnProperty('minZoom')\n            ? zoomBounds.minZoom\n            : Infinity,\n        minNativeZoom =\n          zoomBounds && zoomBounds.hasOwnProperty('minNativeZoom')\n            ? zoomBounds.minNativeZoom\n            : Infinity,\n        maxNativeZoom =\n          zoomBounds && zoomBounds.hasOwnProperty('maxNativeZoom')\n            ? zoomBounds.maxNativeZoom\n            : -Infinity;\n      if (!zoomBounds) {\n        zoomBounds = Object.assign({}, templateZoomBounds);\n      } else {\n        zoomMax = Math.max(zoomMax, templateZoomBounds.maxZoom);\n        zoomMin = Math.min(zoomMin, templateZoomBounds.minZoom);\n        maxNativeZoom = Math.max(\n          maxNativeZoom,\n          templateZoomBounds.maxNativeZoom\n        );\n        minNativeZoom = Math.min(\n          minNativeZoom,\n          templateZoomBounds.minNativeZoom\n        );\n        zoomBounds.minZoom = zoomMin;\n        zoomBounds.maxZoom = zoomMax;\n        zoomBounds.minNativeZoom = minNativeZoom;\n        zoomBounds.maxNativeZoom = maxNativeZoom;\n      }\n      if (!bounds) {\n        bounds = L.bounds(templateBounds.min, templateBounds.max);\n      } else {\n        bounds.extend(templateBounds);\n      }\n    }\n    if (bounds) {\n      this._extentLayer.bounds = bounds;\n    } else {\n      this._extentLayer.bounds = L.bounds(\n        M[this.units].options.bounds.min,\n        M[this.units].options.bounds.max\n      );\n    }\n    if (!zoomBounds) zoomBounds = {};\n    if (!zoomBounds.hasOwnProperty('minZoom')) {\n      zoomBounds.minZoom = 0;\n    }\n    if (!zoomBounds.hasOwnProperty('maxZoom')) {\n      zoomBounds.maxZoom = M[this.units].options.resolutions.length - 1;\n    }\n    if (\n      !zoomBounds.hasOwnProperty('minNativeZoom') ||\n      zoomBounds.minNativeZoom === Infinity\n    ) {\n      zoomBounds.minNativeZoom = zoomBounds.minZoom;\n    }\n    if (\n      !zoomBounds.hasOwnProperty('maxNativeZoom') ||\n      zoomBounds.maxNativeZoom === -Infinity\n    ) {\n      zoomBounds.maxNativeZoom = zoomBounds.maxZoom;\n    }\n    this._extentLayer.zoomBounds = zoomBounds;\n  }\n\n  whenReady() {\n    return new Promise((resolve, reject) => {\n      let interval, failureTimer;\n      if (this._extentLayer) {\n        resolve();\n      } else {\n        let extentElement = this;\n        interval = setInterval(testForExtent, 300, extentElement);\n        failureTimer = setTimeout(extentNotDefined, 10000);\n      }\n      function testForExtent(extentElement) {\n        if (extentElement._extentLayer) {\n          clearInterval(interval);\n          clearTimeout(failureTimer);\n          resolve();\n        } else if (!extentElement.isConnected) {\n          clearInterval(interval);\n          clearTimeout(failureTimer);\n          reject('map-extent was disconnected while waiting to be ready');\n        }\n      }\n      function extentNotDefined() {\n        clearInterval(interval);\n        clearTimeout(failureTimer);\n        reject('Timeout reached waiting for extent to be ready');\n      }\n    });\n  }\n\n  whenLinksReady() {\n    let templates = this.querySelectorAll(\n      'map-link[rel=image],map-link[rel=tile],map-link[rel=features],map-link[rel=query]'\n    );\n    let linksReady = [];\n    for (let link of [...templates]) {\n      linksReady.push(link.whenReady());\n    }\n    return Promise.allSettled(linksReady);\n  }\n}\n"],"names":["MapExtent","HTMLElement","observedAttributes","#hasConnected","units","this","getAttribute","M","FALLBACK_PROJECTION","checked","hasAttribute","val","setAttribute","removeAttribute","label","options","locale","dfExtent","opacity","_opacity","hidden","extent","getExtent","Object","assign","_convertAndFormatPCRS","_extentLayer","bounds","zoom","zoomBounds","_calculateBounds","zoomTo","let","map","getMapEl","_map","xmin","topLeft","pcrs","horizontal","xmax","bottomRight","ymin","vertical","ymax","L","point","center","crs","unproject","getCenter","maxZoom","minZoom","setView","getMaxZoom","animate","getRootNode","ShadowRoot","host","closest","getLayerEl","attributeChangedCallback","name","oldValue","newValue","_layerControlHTML","querySelector","innerHTML","parentLayer","whenReady","then","_handleChange","_layerControlCheckbox","catch","console","log","error","changeOpacity","extentsRootFieldset","_propertiesGroupAnatomy","position","Array","from","parentNode","querySelectorAll","indexOf","remove","insertAdjacentElement","_validateLayerControlContainerHidden","constructor","super","_createLayerControlExtentHTML","bind","_changeHandler","connectedCallback","nodeName","toUpperCase","mapEl","whenProjectionDefined","Error","isConnected","addEventListener","extentLayer","extentZIndex","extentEl","_bindMutationObserver","_observer","MutationObserver","mutation","mutationList","type","_runMutationObserver","addedNodes","observe","childList","elementsGroup","_addMetaElement","_validateDisabled","i","length","element","toLowerCase","getLayerControlHTML","_projectionMatch","projection","templates","totalTemplateCount","disabledTemplateCount","j","noTemplateVisible","disabled","toggleLayerControlDisabled","getMeta","metaName","src","shadowRoot","input","_layerControlLabel","opacityControl","_opacityControl","opacitySlider","_opacitySlider","selectDetails","_selectdetails","style","fontStyle","forEach","addTo","_layer","setZIndex","removeLayer","extentsFieldset","nodeToSearch","disconnectedCallback","removeEventListener","getBoundsFromMeta","undefined","getZoomBoundsFromMeta","templateZoomBounds","getZoomBounds","templateBounds","getBounds","zoomMax","hasOwnProperty","Infinity","zoomMin","minNativeZoom","maxNativeZoom","Math","max","min","extend","resolutions","Promise","resolve","reject","interval","failureTimer","setInterval","extentElement","clearInterval","clearTimeout","setTimeout","whenLinksReady","link","linksReady","push","allSettled"],"mappings":"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"}