.leaflet-container {
  /* Override the `background-color` set by leaflet.css, enables inheritance from
     the map or <body> element (same as iframes) to give the author more control. */
  background-color: transparent;
  max-height: 100%;
  max-width: 100%;
  min-height: 100%;
  min-width: 100%;
  width: 100% !important;
  height: 100% !important;
}

/* this is required by tiles which are actually divs with multiple images in them */
.leaflet-tile img {
        position: absolute;
        left: 0;
        top: 0;
	}
/* MapML treats images like map layers, so far as fade animation is concerned */
.leaflet-fade-anim .leaflet-image-layer {
        will-change: opacity;
	}
        
.leaflet-image-layer {
        visibility: hidden;
}
.leaflet-image-loaded {
        visibility: inherit;
}

/* Use legible font-sizes (Leaflet upstream PR: https://github.com/Leaflet/Leaflet/pull/7346). */
.leaflet-control-scale-line,
.leaflet-container .leaflet-control-scale,
.leaflet-container .leaflet-control-attribution {
  font-size: 12px;
}

/*
 * Controls.
 */
 
 /* Generic class for seamless buttons */
 .mapml-button {
  background-color: transparent;
  border: none;
  border-radius: 0;
  color: inherit;
  font: inherit;
  line-height: inherit;
  margin: 0;
  padding: 0;
  overflow: hidden;
  text-align: inherit;
  text-transform: none;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
}

/* Remove opinionated link colors set by Leaflet. */
.leaflet-container a {
  color: revert;
}
/* Don't use UA styles for links that are controls
  (and don't inherit color from map into the reload button for consistency). */
.mapml-reload-button,
.leaflet-control-container a,
.leaflet-container a.leaflet-popup-close-button,
.leaflet-container a.leaflet-popup-close-button:hover {
  color: #000;
}
/* Revert above `color: #000` for legendlinks. */
.mapml-layer-item-name a {
  color: revert;
}

 .leaflet-top .leaflet-control {
   margin-top: 5px;
 }
 
 .leaflet-left .leaflet-control {
   margin-left: 5px;
 }

.leaflet-bar a,
.mapml-reload-button {
  background-color: #fff;
  box-sizing: border-box;
  width: 44px !important;
  height: 44px !important;
  line-height: 44px !important;
  font-size: 34px !important;
  font-weight: normal;
  text-align: center;
}

.mapml-reload-button:not([aria-disabled="true"]):hover {
  background-color: #f4f4f4;
}

.mapml-reload-button[aria-disabled="true"] {
  color: #bbb;
  cursor: default;
}

.leaflet-control-layers-toggle {
  width: 44px !important;
  height: 44px !important;
}

.leaflet-bar a,
.leaflet-control-layers,
.mapml-reload-button {
  border-color: #e3e3e3 !important;
}

.leaflet-control-layers,
.mapml-reload-button {
  border-radius: 4px !important;
}
.leaflet-touch .leaflet-bar a:last-child {
  border-bottom-left-radius: 4px !important;
  border-bottom-right-radius: 4px !important;
}
.leaflet-touch .leaflet-bar a:first-child {
  border-top-left-radius: 4px !important;
  border-top-right-radius: 4px !important;
}
.leaflet-touch .leaflet-control-layers,
.leaflet-touch .leaflet-bar {
  border-style: inherit;
}

/* Less opinionated box-shadows. */
.mapml-contextmenu,
.mapml-debug,
.leaflet-bar,
.leaflet-control-layers,
.leaflet-popup-content-wrapper,
.leaflet-tooltip-pane .leaflet-tooltip,
.leaflet-touch .leaflet-control-layers,
.leaflet-touch .leaflet-bar,
.leaflet-popup-tip {
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2), 0 1px 2px rgb(0, 0, 0, 0.3);
}

/* Increase contrast between the attribution container and the underlying content. */
.leaflet-container .leaflet-control-attribution {
  background-color: rgba(255, 255, 255, 0.95);
}

/* Remove opinionated styles of attribution links. */
.leaflet-control-attribution a {
  color: revert;
  text-decoration: revert;
}

/*
 * Zoom controls.
 */

.leaflet-control-zoom-in,
.leaflet-control-zoom-out {
  text-indent: unset;
}

/*
 * Fullscreen control.
 */

.leaflet-control-fullscreen a {  
  background-image: url("data:image/svg+xml,%0A%3Csvg width='26' height='52' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3E%3Cg transform='translate(0 -1000.4)'%3E%3Cuse transform='translate(0 26)' width='100%25' height='100%25' xlink:href='%23a'/%3E%3Cuse transform='translate(0 26)' width='100%25' height='100%25' xlink:href='%23b'/%3E%3Cuse transform='translate(0 26)' width='100%25' height='100%25' xlink:href='%23c'/%3E%3Cuse transform='translate(0 26)' width='100%25' height='100%25' xlink:href='%23d'/%3E%3Cpath id='a' transform='translate(0 1000.4)' d='M5 15v6h6v-2H7v-4z' color='%23000' fill='%23404040'/%3E%3Cpath id='b' transform='translate(0 1000.4)' d='M21 15v6h-6v-2h4v-4z' color='%23000' fill='%23404040'/%3E%3Cpath d='M10 1037.4v4l1 1h4l1-1v-4l-1-1h-4z' color='%23000' fill='%23404040'/%3E%3Cpath id='d' d='M5 1011.4v-6h6v2H7v4z' color='%23000' fill='%23404040'/%3E%3Cpath id='c' d='M21 1011.4v-6h-6v2h4v4z' color='%23000' fill='%23404040'/%3E%3C/g%3E%3C/svg%3E");
  background-repeat: no-repeat;
  background-size: 38px 76px;
  background-position: 3px 3px;
}

:host(.mapml-fullscreen-on) .leaflet-control-fullscreen a {
  background-position: 3px -35px;
}

:host(:-webkit-full-screen) {
  width: 100%!important;
  height: 100%!important;
}

:host(.mapml-fullscreen-on) {
  width: 100%!important;
  height: 100%!important;
}

:host(.leaflet-pseudo-fullscreen) {
  position: fixed!important;
  width: 100%!important;
  height: 100%!important;
  top: 0!important;
  left: 0!important;
  z-index: 99999;
}

/*
 * Layer controls.
 */

.leaflet-control-layers.leaflet-control {
  margin-right: 5px;
  margin-left: 5px;
  padding: 0;
}

.leaflet-control-layers-list {
  padding: 0;
  text-transform: capitalize;
}

.leaflet-control-layers fieldset {
  border: none;
  margin: 0;
  padding: 0;
  min-height: 44px;
}

.leaflet-control-layers label {
  display: inline;
}

.mapml-control-layers > :not(summary) {
  display: block;
  margin-block-start: 5px;
  margin-inline-start: 15px;
  width: calc(100% - 15px);
}

.mapml-layer-item-style > div {
  display: flex;
}

.mapml-layer-item-style input {
  margin-inline-start: 0;
}

.leaflet-control-layers-list .leaflet-control-layers-overlays > :not(:last-of-type) {
  border-bottom: 1px solid #e3e3e3;
}

.leaflet-control .leaflet-control-layers-toggle {
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' height='24' width='24'%3E%3Cpath d='M0 0h24v24H0V0z' fill='none'/%3E%3Cpath d='m11.99 18.54-7.37-5.73L3 14.07l9 7 9-7-1.63-1.27zM12 16l7.36-5.73L21 9l-9-7-9 7 1.63 1.27L12 16zm0-11.47L17.74 9 12 13.47 6.26 9 12 4.53z'/%3E%3C/svg%3E");
  background-size: 34px;
}

/* Revert Leaflet styles that are causing misalignment. */
.leaflet-control-layers-selector {
  margin-top: revert;
  position: revert;
}

/*
 * Context menu.
 */

.mapml-contextmenu {
  display: none;
  border-radius: 4px;
  padding: 4px 0;
  background-color: #fff;
  cursor: default;
  position: absolute;
  width: 160px;
  z-index: 10001;
}

.mapml-contextmenu button.mapml-contextmenu-item {
  display: block;
  color: #222;
  font-size: 12px;
  line-height: 20px;
  text-decoration: none;
  padding: 0 12px;
  border-top: 1px solid transparent;
  border-bottom: 1px solid transparent;
  cursor: default;
  width: 100%;
}

.mapml-contextmenu button.mapml-contextmenu-item.over {
  background-color: #f4f4f4;
  border-top: 1px solid #f0f0f0;
  border-bottom: 1px solid #f0f0f0;
}
      
.mapml-contextmenu-separator {
  border-bottom: 1px solid #e3e3e3;
  margin: 5px 0;
}

.mapml-contextmenu.mapml-submenu {
  width: 80px;
  margin-bottom: -2rem;
}

@supports (contain: layout) {
  .mapml-contextmenu {
    position: fixed;
  }
  .mapml-contextmenu.mapml-submenu {
    position: absolute;
  }
}

.mapml-contextmenu-item[aria-controls] span::after {
  content:">";
}
@supports (list-style-type: disclosure-open) {
  .mapml-contextmenu-item[aria-controls] span {
    display: inline-block;
  }
  .mapml-contextmenu-item[aria-controls] span::after {
    content:"";
    display: list-item;
    list-style-type: disclosure-closed;
    margin-inline-start: 20px;
  }
}

/*
 * Debug mode.
 */

.mapml-debug {
  contain: content;
  max-height: 100%;
  max-width: 100%;
  border-radius: 4px;
  padding: 5px 10px;
  background-color: #fff;
  cursor: default;
  z-index: 1000;
  position: absolute;
  display: block;
  top: auto;
  right: 5px;
  bottom: 5px;
  left: 5px;
  width: -webkit-fit-content;
  width: -moz-fit-content;
  width: fit-content;
  font: inherit;
}

.mapml-debug-banner {
  font-weight: bold;
  text-transform: uppercase;
  display: inline-block;
  text-align: left;
  text-align: inline-start;
  line-height: 2;
}

.mapml-debug-panel,
.mapml-debug-grid {
  font-family: monospace;
}

.mapml-debug-tile {
  text-indent: 6px;
  line-height: 1.8;
}

.mapml-debug-coordinates {
  padding-left: 4px;
  padding-right: 4px;
}

.mapml-debug,
.mapml-debug * {
  border-collapse: collapse;
  border-spacing: 0;
}

.mapml-debug-coordinates:empty {
  display: none;
}

.mapml-debug-coordinates > * {
  display: inline;
}

:host(.mapml-fullscreen-on) .mapml-debug-grid {
  color: #fff;
  text-shadow: 1px 1px 1px #000, 1px 1px 1px #000;
}

/*
 * User interaction.
 */
 
 :host(.leaflet-drag-target) .leaflet-grab {
   cursor: move;
   cursor: -webkit-grabbing;
   cursor:    -moz-grabbing;
   cursor:         grabbing;
 }
 
 /* Prevent `:hover` styles from applying to controls when the user is panning
 the map display and the cursor happens to move over a control. */
:host(.leaflet-drag-target) .leaflet-control {
  pointer-events: none;
}

/* Disable dragging of controls. */
.mapml-popup-button,
.leaflet-popup-close-button,
.leaflet-control :not([draggable="true"]),
.mapml-contextmenu :not([draggable="true"]) {
  -webkit-user-drag: none;
}

/* Disable text selection in controls. */
.leaflet-control,
.mapml-contextmenu,
.mapml-debug,
.mapml-focus-buttons,
.mapml-layer-item-settings summary {
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

/* Hide unintended highlighting of controls from clicking the map display in
   quick succession. This is a workaround for `user-select: contain`, since it has
   virtually no browser support: https://www.chromestatus.com/feature/5730263904550912. */
.leaflet-control a::selection,
.leaflet-popup-close-button::selection,
.leaflet-control-attribution::selection {
  background-color: transparent;
}

/* Disable pointer events where they'd interfere with the intended action. */
.leaflet-tooltip,
.leaflet-crosshair *,
.mapml-layer-item-settings .mapml-control-layers summary label,
.mapml-contextmenu-item > *,
.mapml-link-preview {
  pointer-events: none!important;
}

/* Restore the default focus outline of UA stylesheets,
   which Leaflet unfortunately removes (https://github.com/Leaflet/Leaflet/issues/6986). */
.leaflet-container :focus {
  outline-color: -webkit-focus-ring-color !important;
  outline-style: auto !important;
  outline-width: thin !important;
  outline: revert !important;
}
/* Unset the outline that Leaflet occasionally sets on controls without also
   delegating focus. */
.leaflet-active:not(:focus) {
  outline: unset !important;
}
.leaflet-container:not(:focus-within) .mapml-outline {
  outline: 0;
}
.leaflet-container:not(:focus-within) .mapml-crosshair {
  visibility: hidden;
}

/* Restore the default UA tap highlight color by overriding the opinionated tap
   highlight color inherited from leaflet.css. */
.leaflet-control a {
  -webkit-tap-highlight-color: initial;
}

/* Less opinionated styles for the zoom box than inherited from leaflet.css. */
.leaflet-zoom-box {
  border: thin dotted;
  background-color: rgba(255,255,255,0.33);
}

label,
input,
button,
summary {
  cursor: pointer;
}

.mapml-draggable,
.mapml-draggable * {
  cursor: row-resize;
  background-color: white;
}

.leaflet-crosshair {
  cursor: crosshair;
}

/*
 * Visibility hack – mitigates FOUC.
 * (https://github.com/Maps4HTML/Web-Map-Custom-Element/issues/154)
 */

/* Unset `visibility: hidden` (inherited from web-map/mapml-viewer.js). */
.leaflet-container .mapml-contextmenu,
.leaflet-container .leaflet-control-container {
  visibility: unset!important;
}

.mapml-crosshair {
  margin: -36px 0 0 -36px;
  width: 72px;
  height: 72px;
  left: 50%;
  top: 50%;
  content: '';
  display: block;
  position: absolute;
  z-index: 10000;
}

.mapml-popup-button {
	padding: 0 4px 0 4px;
	border: none;
	text-align: center;
	font: 16px/14px Tahoma, Verdana, sans-serif;
	color: inherit;
	text-decoration: none;
	font-weight: bold;
  background: transparent;
  white-space: nowrap;
  box-sizing: border-box;
  width: 44px;
  height: 44px;
  line-height: 44px;
}

.mapml-focus-buttons {
  white-space: nowrap;
}

.mapml-feature-count {
  display:inline;
  white-space: nowrap;
  text-align: center;
  padding: 2px;
}

.mapml-focus-buttons button,
.leaflet-container a.leaflet-popup-close-button {
  width: 44px;
  height: 44px;
  min-width: 44px;
  min-height: 44px;
  line-height: 44px;
}
.leaflet-popup-content {
  margin: 0;
  min-width: min-content;
}
.mapml-popup-content {
  padding-top: 44px;
}
.mapml-focus-buttons {
  display: block;
  text-align: center;
}
.mapml-focus-buttons button {
  display: inline-block;
  padding: 0;
}
.leaflet-container a.leaflet-popup-close-button {
  padding: 0;
  font-size: 20px;
}
.leaflet-popup-content .mapml-feature-count {
  margin: 0;
  padding: 0 5px;
  line-height: 44px;
}
.mapml-popup-content hr:last-of-type {
  margin-bottom: 0;
  border-bottom: 0;
  border-top: 1px solid #e3e3e3;
}
.mapml-popup-content :first-child {
  margin-top: 0;
  padding-top: 0;
}
.mapml-popup-content > :not(.mapml-focus-buttons) {
  padding: 0 1rem;
}
.leaflet-popup-tip-container {
  margin-top: -1px;
}

.mapml-outline {
  outline-style: auto;
  outline-offset: -2px;
  z-index: 1000;
  pointer-events: none;
  position: absolute;
  height: 100%;
  width: 100%;
  color: initial;
}
 
 /* Force printers to include background-images of controls for printing.
   (https://github.com/Maps4HTML/Web-Map-Custom-Element/issues/294) */
@media print {
  .leaflet-control {
    -webkit-print-color-adjust: exact;
                  color-adjust: exact;
  }
}

.leaflet-pane > svg g.leaflet-interactive,
svg.leaflet-image-layer.leaflet-interactive g {
  pointer-events: visiblePainted; /* IE 9-10 doesn't have auto */
  pointer-events: auto;
}

.mapml-link-preview {
  position: absolute;
  left: 0;
  bottom: 0;
  background-color: rgb(222,225,230);
  border-radius: 0 5px 0 0 ;
  z-index: 1050;
}

.mapml-link-preview > p {
  margin: 3px 5px 2px 3px;
  color: rgb(60,64,67);
}

/**
* layer item controls
*/

button.mapml-button:disabled,
.mapml-button[aria-disabled="true"],
.mapml-layer-item:disabled button.mapml-button {
  opacity: .3;
}

.mapml-button-icon {
  pointer-events: none;
}

.mapml-button-icon svg {
  fill: currentColor;
}

.mapml-layer-item,
.mapml-layer-item *,
.mapml-layer-item ::before,
.mapml-layer-item ::after {
  box-sizing: border-box;
}

.mapml-layer-item {
  border: 0;
  margin: 0;
  padding: 0;
}

.mapml-layer-item:not(:last-of-type) {
  border-bottom: 1px solid #e3e3e3;
}

.mapml-layer-item-properties {
  align-items: center;
  display: flex;
  justify-content: space-between;
  padding-inline-start: .5rem;
}
.mapml-layer-item-controls {
  margin-inline-start: auto;
}


.mapml-layer-item-controls button span {
  font-size: large;
  font-weight: 900;
  vertical-align: middle;
}

.mapml-layer-item-controls button svg {
  vertical-align: text-bottom;
}

.mapml-layer-item-controls,
.mapml-layer-item-remove-control,
.mapml-layer-item-settings-control {
  align-items: center;
  display: flex;
  justify-content: center;
}


.mapml-layer-item-remove-control,
.mapml-layer-item-settings-control {
  min-height: 44px;
  min-width: 44px;
  height: 44px;
  width: 44px;
}

label.mapml-layer-item-toggle {
  display: inline-flex;
  align-items: center;
}

.mapml-layer-item-name {
  word-break: break-word;
  padding-block-start: .25rem;
  padding-block-end: .25rem;
  padding-inline-start: .25rem;
  padding-inline-end: 1rem;
}

.mapml-layer-item-settings > * {
  display: block;
  padding-block-start: .25rem;
  padding-block-end: .25rem;
  padding-inline-start: 2rem;
  padding-inline-end: 1rem;
}

.mapml-screen-reader-output {
  clip: rect(0 0 0 0);
  clip-path: inset(50%);
  height: 1px;
  overflow: hidden;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}