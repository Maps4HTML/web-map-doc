{"version":3,"file":"web-map.js","sources":["../src/web-map.js"],"sourcesContent":["import './leaflet.js'; // bundled with proj4, proj4leaflet, modularized\nimport './mapml.js';\nimport { MapLayer } from './layer.js';\nimport { MapArea } from './map-area.js';\nimport { MapCaption } from './map-caption.js';\nimport { MapFeature } from './map-feature.js';\nimport { MapExtent } from './map-extent.js';\nimport { MapInput } from './map-input.js';\nimport { MapLink } from './map-link.js';\n\nexport class WebMap extends HTMLMapElement {\n  static get observedAttributes() {\n    return [\n      'lat',\n      'lon',\n      'zoom',\n      'projection',\n      'width',\n      'height',\n      'controls',\n      'static',\n      'controlslist'\n    ];\n  }\n  // see comments below regarding attributeChangedCallback vs. getter/setter\n  // usage.  Effectively, the user of the element must use the property, not\n  // the getAttribute/setAttribute/removeAttribute DOM API, because the latter\n  // calls don't result in the getter/setter being called (so you have to use\n  // the getter/setter directly)\n  get controls() {\n    return this.hasAttribute('controls');\n  }\n  set controls(value) {\n    const hasControls = Boolean(value);\n    if (hasControls) {\n      this.setAttribute('controls', '');\n    } else {\n      this.removeAttribute('controls');\n    }\n  }\n  get controlsList() {\n    return this._controlsList;\n  }\n  set controlsList(value) {\n    this._controlsList.value = value;\n    this.setAttribute('controlslist', value);\n  }\n  get width() {\n    return +window.getComputedStyle(this).width.replace('px', '');\n  }\n  set width(val) {\n    //img.height or img.width setters change or add the corresponding attributes\n    this.setAttribute('width', val);\n  }\n  get height() {\n    return +window.getComputedStyle(this).height.replace('px', '');\n  }\n  set height(val) {\n    //img.height or img.width setters change or add the corresponding attributes\n    this.setAttribute('height', val);\n  }\n  get lat() {\n    return +(this.hasAttribute('lat') ? this.getAttribute('lat') : 0);\n  }\n  set lat(val) {\n    if (val) {\n      this.setAttribute('lat', val);\n    }\n  }\n  get lon() {\n    return +(this.hasAttribute('lon') ? this.getAttribute('lon') : 0);\n  }\n  set lon(val) {\n    if (val) {\n      this.setAttribute('lon', val);\n    }\n  }\n  get projection() {\n    return this.hasAttribute('projection')\n      ? this.getAttribute('projection')\n      : 'OSMTILE';\n  }\n  set projection(val) {\n    if (val) {\n      this.whenProjectionDefined(val)\n        .then(() => {\n          this.setAttribute('projection', val);\n        })\n        .catch(() => {\n          throw new Error('Undefined projection:' + val);\n        });\n    }\n  }\n  get zoom() {\n    return +(this.hasAttribute('zoom') ? this.getAttribute('zoom') : 0);\n  }\n  set zoom(val) {\n    var parsedVal = parseInt(val, 10);\n    if (!isNaN(parsedVal) && parsedVal >= 0 && parsedVal <= 25) {\n      this.setAttribute('zoom', parsedVal);\n    }\n  }\n  get layers() {\n    return this.getElementsByTagName('layer-');\n  }\n  get areas() {\n    return this.getElementsByTagName('area');\n  }\n\n  get extent() {\n    let map = this._map,\n      pcrsBounds = M.pixelToPCRSBounds(\n        map.getPixelBounds(),\n        map.getZoom(),\n        map.options.projection\n      );\n    let formattedExtent = M._convertAndFormatPCRS(\n      pcrsBounds,\n      map.options.crs,\n      this.projection\n    );\n    if (map.getMaxZoom() !== Infinity) {\n      formattedExtent.zoom = {\n        minZoom: map.getMinZoom(),\n        maxZoom: map.getMaxZoom()\n      };\n    }\n    return formattedExtent;\n  }\n  get static() {\n    return this.hasAttribute('static');\n  }\n  set static(value) {\n    const isStatic = Boolean(value);\n    if (isStatic) this.setAttribute('static', '');\n    else this.removeAttribute('static');\n  }\n\n  constructor() {\n    // Always call super first in constructor\n    super();\n    this._source = this.outerHTML;\n    // create an array to track the history of the map and the current index\n    this._history = [];\n    this._historyIndex = -1;\n    this._traversalCall = false;\n  }\n  connectedCallback() {\n    this.whenProjectionDefined(this.projection)\n      .then(() => {\n        this._initShadowRoot();\n\n        this._controlsList = new M.DOMTokenList(\n          this.getAttribute('controlslist'),\n          this,\n          'controlslist',\n          [\n            'noreload',\n            'nofullscreen',\n            'nozoom',\n            'nolayer',\n            'noscale',\n            'geolocation'\n          ]\n        );\n\n        var s = window.getComputedStyle(this),\n          wpx = s.width,\n          hpx = s.height,\n          w = this.hasAttribute('width')\n            ? this.getAttribute('width')\n            : parseInt(wpx.replace('px', '')),\n          h = this.hasAttribute('height')\n            ? this.getAttribute('height')\n            : parseInt(hpx.replace('px', ''));\n        this._changeWidth(w);\n        this._changeHeight(h);\n\n        this._createMap();\n\n        this._toggleStatic();\n\n        /*\n      1. only deletes aria-label when the last (only remaining) map caption is removed\n      2. only deletes aria-label if the aria-label was defined by the map caption element itself\n    */\n\n        let mapcaption = this.querySelector('map-caption');\n\n        if (mapcaption !== null) {\n          setTimeout(() => {\n            let ariaupdate = this.getAttribute('aria-label');\n\n            if (ariaupdate === mapcaption.innerHTML) {\n              this.mapCaptionObserver = new MutationObserver((m) => {\n                let mapcaptionupdate = this.querySelector('map-caption');\n                if (mapcaptionupdate !== mapcaption) {\n                  this.removeAttribute('aria-label');\n                }\n              });\n              this.mapCaptionObserver.observe(this, {\n                childList: true\n              });\n            }\n          }, 0);\n        }\n      })\n      .catch(() => {\n        throw new Error('Projection not defined');\n      });\n  }\n  _initShadowRoot() {\n    let tmpl = document.createElement('template');\n    /* jshint ignore:start */\n    tmpl.innerHTML = `<link rel=\"stylesheet\" href=\"${\n      new URL('mapml.css', import.meta.url).href\n    }\">`;\n    /* jshint ignore:end */\n\n    const rootDiv = document.createElement('div');\n    rootDiv.classList.add('mapml-web-map');\n\n    let shadowRoot = rootDiv.attachShadow({ mode: 'open' });\n    this._container = document.createElement('div');\n\n    let output =\n      \"<output role='status' aria-live='polite' aria-atomic='true' class='mapml-screen-reader-output'></output>\";\n    this._container.insertAdjacentHTML('beforeend', output);\n\n    // Set default styles for the map element.\n    let mapDefaultCSS = document.createElement('style');\n    mapDefaultCSS.innerHTML =\n      `[is=\"web-map\"] {` +\n      `all: initial;` + // Reset properties inheritable from html/body, as some inherited styles may cause unexpected issues with the map element's components (https://github.com/Maps4HTML/Web-Map-Custom-Element/issues/140).\n      `contain: layout size;` + // Contain layout and size calculations within the map element.\n      `display: inline-block;` + // This together with dimension properties is required so that Leaflet isn't working with a height=0 box by default.\n      `height: 150px;` + // Provide a \"default object size\" (https://github.com/Maps4HTML/HTML-Map-Element/issues/31).\n      `width: 300px;` +\n      `border-width: 2px;` + // Set a default border for contrast, similar to UA default for iframes.\n      `border-style: inset;` +\n      `box-sizing: inherit;` + // https://github.com/Maps4HTML/Web-Map-Custom-Element/issues/350#issuecomment-888361985\n      `}` +\n      `[is=\"web-map\"][frameborder=\"0\"] {` +\n      `border-width: 0;` +\n      `}` +\n      `[is=\"web-map\"][hidden] {` +\n      `display: none!important;` +\n      `}` +\n      `[is=\"web-map\"] .mapml-web-map {` +\n      `display: contents;` + // This div doesn't have to participate in layout by generating its own box.\n      `}`;\n\n    let shadowRootCSS = document.createElement('style');\n    shadowRootCSS.innerHTML =\n      `:host .leaflet-control-container {` +\n      `visibility: hidden!important;` + // Visibility hack to improve percieved performance (mitigate FOUC) â€“ visibility is unset in mapml.css! (https://github.com/Maps4HTML/Web-Map-Custom-Element/issues/154).\n      `}`;\n\n    // Hide all (light DOM) children of the map element except for the\n    // `<area>` and `<div class=\"mapml-web-map\">` (shadow root host) elements.\n    let hideElementsCSS = document.createElement('style');\n    hideElementsCSS.innerHTML =\n      `[is=\"web-map\"] > :not(area):not(.mapml-web-map) {` +\n      `display: none!important;` +\n      `}`;\n    this.appendChild(hideElementsCSS);\n\n    shadowRoot.appendChild(shadowRootCSS);\n    shadowRoot.appendChild(tmpl.content.cloneNode(true));\n    shadowRoot.appendChild(this._container);\n    this.appendChild(rootDiv);\n    document.head.insertAdjacentElement('afterbegin', mapDefaultCSS);\n  }\n  _createMap() {\n    if (!this._map) {\n      this._map = L.map(this._container, {\n        center: new L.LatLng(this.lat, this.lon),\n        projection: this.projection,\n        query: true,\n        contextMenu: true,\n        announceMovement: M.options.announceMovement,\n        featureIndex: true,\n        mapEl: this,\n        crs: M[this.projection],\n        zoom: this.zoom,\n        zoomControl: false\n      });\n      this._addToHistory();\n\n      this._createControls();\n      this._toggleControls();\n      this._crosshair = M.crosshair().addTo(this._map);\n\n      if (M.options.featureIndexOverlayOption)\n        this._featureIndexOverlay = M.featureIndexOverlay().addTo(this._map);\n\n      if (this.hasAttribute('name')) {\n        var name = this.getAttribute('name');\n        if (name) {\n          this.poster = document.querySelector(\n            'img[usemap=' + '\"#' + name + '\"]'\n          );\n          // firefox has an issue where the attribution control's use of\n          // _container.innerHTML does not work properly if the engine is throwing\n          // exceptions because there are no area element children of the image map\n          // for firefox only, a workaround is to actually remove the image...\n          if (this.poster) {\n            if (L.Browser.gecko) {\n              this.poster.removeAttribute('usemap');\n            }\n            //this.appendChild(this.poster);\n          }\n        }\n      }\n\n      // undisplay the img in the image map, because it's not needed now.\n      // gives a slight FOUC, unless:\n      // 1) the img is pre-styled (https://github.com/Maps4HTML/Web-Map-Custom-Element/blob/80a4a4e372d2ef61bb7cad6a111e17e396b8e908/index-map-area.html#L35)\n      // 2) placed after the map element\n      if (this.poster) {\n        this.poster.setAttribute('hidden', '');\n      }\n\n      // https://github.com/Maps4HTML/Web-Map-Custom-Element/issues/274\n      this.setAttribute('role', 'application');\n      // Make the Leaflet container element programmatically identifiable\n      // (https://github.com/Leaflet/Leaflet/issues/7193).\n      this._container.setAttribute('role', 'region');\n      this._container.setAttribute('aria-label', 'Interactive map');\n\n      this._setUpEvents();\n    }\n  }\n  disconnectedCallback() {\n    let rootDiv = this.querySelector('.mapml-web-map');\n    while (rootDiv.shadowRoot.firstChild) {\n      rootDiv.shadowRoot.removeChild(rootDiv.shadowRoot.firstChild);\n    }\n    rootDiv.remove();\n    delete this._map;\n    this._deleteControls();\n  }\n  adoptedCallback() {\n    //    console.log('Custom map element moved to new page.');\n  }\n\n  attributeChangedCallback(name, oldValue, newValue) {\n    //    console.log('Attribute: ' + name + ' changed from: '+ oldValue + ' to: '+newValue);\n    // \"Best practice\": handle side-effects in this callback\n    // https://developers.google.com/web/fundamentals/web-components/best-practices\n    // https://developers.google.com/web/fundamentals/web-components/best-practices#avoid-reentrancy\n    // note that the example is misleading, since the user can't use\n    // setAttribute or removeAttribute to set the property, they need to use\n    // the property directly in their API usage, which kinda sucks\n    /*\n  const hasValue = newValue !== null;\n  switch (name) {\n    case 'checked':\n      // Note the attributeChangedCallback is only handling the *side effects*\n      // of setting the attribute.\n      this.setAttribute('aria-checked', hasValue);\n      break;\n    ...\n  }     */\n    switch (name) {\n      case 'controlslist':\n        if (this._controlsList) {\n          if (this._controlsList.valueSet === false) {\n            this._controlsList.value = newValue;\n          }\n          this._toggleControls();\n        }\n        break;\n      case 'controls':\n        if (oldValue !== null && newValue === null) {\n          this._hideControls();\n        } else if (oldValue === null && newValue !== null) {\n          this._showControls();\n        }\n        break;\n      case 'height':\n        if (oldValue !== newValue) {\n          this._changeHeight(newValue);\n        }\n        break;\n      case 'width':\n        if (oldValue !== newValue) {\n          this._changeWidth(newValue);\n        }\n        break;\n      case 'static':\n        this._toggleStatic();\n        break;\n      case 'projection':\n        const reconnectLayers = () => {\n          if (this._map && this._map.options.projection !== newValue) {\n            // save map location and zoom\n            let lat = this.lat;\n            let lon = this.lon;\n            let zoom = this.zoom;\n            // saving the lat, lon and zoom is necessary because Leaflet seems\n            // to try to compensate for the change in the scales for each zoom\n            // level in the crs by changing the zoom level of the map when\n            // you set the map crs.  So, we save the current view for use below\n            // when all the layers' reconnections have settled.\n            // leaflet doesn't like this: https://github.com/Leaflet/Leaflet/issues/2553\n            this._map.options.crs = M[newValue];\n            this._map.options.projection = newValue;\n            let layersReady = [];\n            this._map.announceMovement.disable();\n            for (let layer of this.querySelectorAll('layer-')) {\n              layer.removeAttribute('disabled');\n              let reAttach = this.removeChild(layer);\n              this.appendChild(reAttach);\n              layersReady.push(reAttach.whenReady());\n            }\n            Promise.allSettled(layersReady).then(() => {\n              // use the saved map location to ensure it is correct after\n              // changing the map CRS.  Specifically affects projection\n              // upgrades, e.g. https://maps4html.org/experiments/custom-projections/BNG/\n              // see leaflet bug: https://github.com/Leaflet/Leaflet/issues/2553\n              this.zoomTo(lat, lon, zoom);\n              if (M.options.announceMovement)\n                this._map.announceMovement.enable();\n              this.querySelectorAll('layer-').forEach((layer) => {\n                layer.dispatchEvent(new CustomEvent('map-change'));\n              });\n            });\n          }\n        };\n        if (newValue) {\n          const connect = reconnectLayers.bind(this);\n          new Promise((resolve, reject) => {\n            connect();\n            resolve();\n          }).then(() => {\n            if (this._map && this._map.options.projection !== oldValue) {\n              // this awful hack is brought to you by a leaflet bug/ feature request\n              // https://github.com/Leaflet/Leaflet/issues/2553\n              this.zoomTo(this.lat, this.lon, this.zoom + 1);\n              this.zoomTo(this.lat, this.lon, this.zoom - 1);\n              // this doesn't completely work either\n              this._resetHistory();\n            }\n            if (this._debug) for (let i = 0; i < 2; i++) this.toggleDebug();\n          });\n        }\n        break;\n    }\n  }\n\n  // Creates All map controls and adds them to the map, when created.\n  _createControls() {\n    let mapSize = this._map.getSize().y,\n      totalSize = 0;\n\n    this._layerControl = M.layerControl(null, {\n      collapsed: true,\n      mapEl: this\n    }).addTo(this._map);\n\n    let scaleValue = M.options.announceScale;\n\n    if (scaleValue === 'metric') {\n      scaleValue = { metric: true, imperial: false };\n    }\n    if (scaleValue === 'imperial') {\n      scaleValue = { metric: false, imperial: true };\n    }\n\n    if (!this._scaleBar)\n      this._scaleBar = M.scaleBar(scaleValue).addTo(this._map);\n\n    // Only add controls if there is enough top left vertical space\n    if (!this._zoomControl && totalSize + 93 <= mapSize) {\n      totalSize += 93;\n      this._zoomControl = L.control.zoom().addTo(this._map);\n    }\n    if (!this._reloadButton && totalSize + 49 <= mapSize) {\n      totalSize += 49;\n      this._reloadButton = M.reloadButton().addTo(this._map);\n    }\n    if (!this._fullScreenControl && totalSize + 49 <= mapSize) {\n      totalSize += 49;\n      this._fullScreenControl = M.fullscreenButton().addTo(this._map);\n    }\n\n    if (!this._geolocationButton) {\n      this._geolocationButton = M.geolocationButton().addTo(this._map);\n    }\n  }\n\n  // Sets controls by hiding/unhiding them based on the map attribute\n  _toggleControls() {\n    if (this.controls === false) {\n      this._hideControls();\n      this._map.contextMenu.toggleContextMenuItem('Controls', 'disabled');\n    } else {\n      this._showControls();\n      this._map.contextMenu.toggleContextMenuItem('Controls', 'enabled');\n    }\n  }\n\n  _hideControls() {\n    this._setControlsVisibility('fullscreen', true);\n    this._setControlsVisibility('layercontrol', true);\n    this._setControlsVisibility('reload', true);\n    this._setControlsVisibility('zoom', true);\n    this._setControlsVisibility('geolocation', true);\n    this._setControlsVisibility('scale', true);\n  }\n  _showControls() {\n    this._setControlsVisibility('fullscreen', false);\n    this._setControlsVisibility('layercontrol', false);\n    this._setControlsVisibility('reload', false);\n    this._setControlsVisibility('zoom', false);\n    this._setControlsVisibility('geolocation', true);\n    this._setControlsVisibility('scale', false);\n\n    // prune the controls shown if necessary\n    // this logic could be embedded in _showControls\n    // but would require being able to iterate the domain of supported tokens\n    // for the controlslist\n    if (this._controlsList) {\n      this._controlsList.forEach((value) => {\n        switch (value.toLowerCase()) {\n          case 'nofullscreen':\n            this._setControlsVisibility('fullscreen', true);\n            break;\n          case 'nolayer':\n            this._setControlsVisibility('layercontrol', true);\n            break;\n          case 'noreload':\n            this._setControlsVisibility('reload', true);\n            break;\n          case 'nozoom':\n            this._setControlsVisibility('zoom', true);\n            break;\n          case 'geolocation':\n            this._setControlsVisibility('geolocation', false);\n            break;\n          case 'noscale':\n            this._setControlsVisibility('scale', true);\n            break;\n        }\n      });\n    }\n    if (this._layerControl && this._layerControl._layers.length === 0) {\n      this._layerControl._container.setAttribute('hidden', '');\n    }\n  }\n\n  // delete the map controls that are private properties of this custom element\n  _deleteControls() {\n    delete this._layerControl;\n    delete this._zoomControl;\n    delete this._reloadButton;\n    delete this._fullScreenControl;\n    delete this._geolocationButton;\n    delete this._scaleBar;\n  }\n  // Sets the control's visibility AND all its childrens visibility,\n  // for the control element based on the Boolean hide parameter\n  _setControlsVisibility(control, hide) {\n    let container;\n    switch (control) {\n      case 'zoom':\n        if (this._zoomControl) {\n          container = this._zoomControl._container;\n        }\n        break;\n      case 'reload':\n        if (this._reloadButton) {\n          container = this._reloadButton._container;\n        }\n        break;\n      case 'fullscreen':\n        if (this._fullScreenControl) {\n          container = this._fullScreenControl._container;\n        }\n        break;\n      case 'layercontrol':\n        if (this._layerControl) {\n          container = this._layerControl._container;\n        }\n        break;\n      case 'geolocation':\n        if (this._geolocationButton) {\n          container = this._geolocationButton._container;\n        }\n        break;\n      case 'scale':\n        if (this._scaleBar) {\n          container = this._scaleBar._container;\n        }\n        break;\n    }\n    if (container) {\n      if (hide) {\n        // setting the visibility for all the children of the element\n        [...container.children].forEach((childEl) => {\n          childEl.setAttribute('hidden', '');\n        });\n        container.setAttribute('hidden', '');\n      } else {\n        // setting the visibility for all the children of the element\n        [...container.children].forEach((childEl) => {\n          childEl.removeAttribute('hidden');\n        });\n        container.removeAttribute('hidden');\n      }\n    }\n  }\n  _toggleStatic() {\n    const isStatic = this.hasAttribute('static');\n    if (this._map) {\n      if (isStatic) {\n        this._map.dragging.disable();\n        this._map.touchZoom.disable();\n        this._map.doubleClickZoom.disable();\n        this._map.scrollWheelZoom.disable();\n        this._map.boxZoom.disable();\n        this._map.keyboard.disable();\n        this._zoomControl.disable();\n      } else {\n        this._map.dragging.enable();\n        this._map.touchZoom.enable();\n        this._map.doubleClickZoom.enable();\n        this._map.scrollWheelZoom.enable();\n        this._map.boxZoom.enable();\n        this._map.keyboard.enable();\n        this._zoomControl.enable();\n      }\n    }\n  }\n\n  _dropHandler(event) {\n    event.preventDefault();\n    let text = event.dataTransfer.getData('text');\n    M._pasteLayer(this, text);\n  }\n  _dragoverHandler(event) {\n    event.preventDefault();\n    event.dataTransfer.dropEffect = 'copy';\n  }\n  _removeEvents() {\n    if (this._map) {\n      this._map.off();\n      this.removeEventListener('drop', this._dropHandler, false);\n      this.removeEventListener('dragover', this._dragoverHandler, false);\n    }\n  }\n  _setUpEvents() {\n    this.addEventListener('drop', this._dropHandler, false);\n    this.addEventListener('dragover', this._dragoverHandler, false);\n    this.addEventListener(\n      'change',\n      function (e) {\n        if (e.target.tagName === 'LAYER-') {\n          this.dispatchEvent(\n            new CustomEvent('layerchange', {\n              details: { target: this, originalEvent: e }\n            })\n          );\n        }\n      },\n      false\n    );\n\n    this.parentElement.addEventListener('keyup', function (e) {\n      if (\n        e.keyCode === 9 &&\n        document.activeElement.nodeName === 'MAPML-VIEWER'\n      ) {\n        document.activeElement.dispatchEvent(\n          new CustomEvent('mapfocused', { detail: { target: this } })\n        );\n      }\n    });\n    // pasting layer-, links and geojson using Ctrl+V\n    this.addEventListener('keydown', function (e) {\n      if (e.keyCode === 86 && e.ctrlKey) {\n        navigator.clipboard.readText().then((layer) => {\n          M._pasteLayer(this, layer);\n        });\n        // Prevents default spacebar event on all of web-map\n      } else if (\n        e.keyCode === 32 &&\n        document.activeElement.shadowRoot.activeElement.nodeName !== 'INPUT'\n      ) {\n        e.preventDefault();\n        this._map.fire('keypress', { originalEvent: e });\n      }\n    });\n    this.parentElement.addEventListener('mousedown', function (e) {\n      if (document.activeElement.nodeName === 'MAPML-VIEWER') {\n        document.activeElement.dispatchEvent(\n          new CustomEvent('mapfocused', { detail: { target: this } })\n        );\n      }\n    });\n\n    this._map.on(\n      'locationfound',\n      function (e) {\n        this.dispatchEvent(\n          new CustomEvent('maplocationfound', {\n            detail: { latlng: e.latlng, accuracy: e.accuracy }\n          })\n        );\n      },\n      this\n    );\n    this._map.on(\n      'locationerror',\n      function (e) {\n        this.dispatchEvent(\n          new CustomEvent('locationerror', { detail: { error: e.message } })\n        );\n      },\n      this\n    );\n    this._map.on(\n      'load',\n      function () {\n        this.dispatchEvent(\n          new CustomEvent('load', { detail: { target: this } })\n        );\n      },\n      this\n    );\n    this._map.on(\n      'preclick',\n      function (e) {\n        this.dispatchEvent(\n          new CustomEvent('preclick', {\n            detail: {\n              lat: e.latlng.lat,\n              lon: e.latlng.lng,\n              x: e.containerPoint.x,\n              y: e.containerPoint.y\n            }\n          })\n        );\n      },\n      this\n    );\n    this._map.on(\n      'click',\n      function (e) {\n        this.dispatchEvent(\n          new CustomEvent('click', {\n            detail: {\n              lat: e.latlng.lat,\n              lon: e.latlng.lng,\n              x: e.containerPoint.x,\n              y: e.containerPoint.y\n            }\n          })\n        );\n      },\n      this\n    );\n    this._map.on(\n      'dblclick',\n      function (e) {\n        this.dispatchEvent(\n          new CustomEvent('dblclick', {\n            detail: {\n              lat: e.latlng.lat,\n              lon: e.latlng.lng,\n              x: e.containerPoint.x,\n              y: e.containerPoint.y\n            }\n          })\n        );\n      },\n      this\n    );\n    this._map.on(\n      'mousemove',\n      function (e) {\n        this.dispatchEvent(\n          new CustomEvent('mousemove', {\n            detail: {\n              lat: e.latlng.lat,\n              lon: e.latlng.lng,\n              x: e.containerPoint.x,\n              y: e.containerPoint.y\n            }\n          })\n        );\n      },\n      this\n    );\n    this._map.on(\n      'mouseover',\n      function (e) {\n        this.dispatchEvent(\n          new CustomEvent('mouseover', {\n            detail: {\n              lat: e.latlng.lat,\n              lon: e.latlng.lng,\n              x: e.containerPoint.x,\n              y: e.containerPoint.y\n            }\n          })\n        );\n      },\n      this\n    );\n    this._map.on(\n      'mouseout',\n      function (e) {\n        this.dispatchEvent(\n          new CustomEvent('mouseout', {\n            detail: {\n              lat: e.latlng.lat,\n              lon: e.latlng.lng,\n              x: e.containerPoint.x,\n              y: e.containerPoint.y\n            }\n          })\n        );\n      },\n      this\n    );\n    this._map.on(\n      'mousedown',\n      function (e) {\n        this.dispatchEvent(\n          new CustomEvent('mousedown', {\n            detail: {\n              lat: e.latlng.lat,\n              lon: e.latlng.lng,\n              x: e.containerPoint.x,\n              y: e.containerPoint.y\n            }\n          })\n        );\n      },\n      this\n    );\n    this._map.on(\n      'mouseup',\n      function (e) {\n        this.dispatchEvent(\n          new CustomEvent('mouseup', {\n            detail: {\n              lat: e.latlng.lat,\n              lon: e.latlng.lng,\n              x: e.containerPoint.x,\n              y: e.containerPoint.y\n            }\n          })\n        );\n      },\n      this\n    );\n    this._map.on(\n      'contextmenu',\n      function (e) {\n        this.dispatchEvent(\n          new CustomEvent('contextmenu', {\n            detail: {\n              lat: e.latlng.lat,\n              lon: e.latlng.lng,\n              x: e.containerPoint.x,\n              y: e.containerPoint.y\n            }\n          })\n        );\n      },\n      this\n    );\n    this._map.on(\n      'movestart',\n      function () {\n        this._updateMapCenter();\n        this.dispatchEvent(\n          new CustomEvent('movestart', { detail: { target: this } })\n        );\n      },\n      this\n    );\n    this._map.on(\n      'move',\n      function () {\n        this._updateMapCenter();\n        this.dispatchEvent(\n          new CustomEvent('move', { detail: { target: this } })\n        );\n      },\n      this\n    );\n    this._map.on(\n      'moveend',\n      function () {\n        this._updateMapCenter();\n        this._addToHistory();\n        this.dispatchEvent(\n          new CustomEvent('map-moveend', { detail: { target: this } })\n        );\n      },\n      this\n    );\n    this._map.on(\n      'zoomstart',\n      function () {\n        this._updateMapCenter();\n        this.dispatchEvent(\n          new CustomEvent('zoomstart', { detail: { target: this } })\n        );\n      },\n      this\n    );\n    this._map.on(\n      'zoom',\n      function () {\n        this._updateMapCenter();\n        this.dispatchEvent(\n          new CustomEvent('zoom', { detail: { target: this } })\n        );\n      },\n      this\n    );\n    this._map.on(\n      'zoomend',\n      function () {\n        this._updateMapCenter();\n        this.dispatchEvent(\n          new CustomEvent('zoomend', { detail: { target: this } })\n        );\n      },\n      this\n    );\n    this.addEventListener('fullscreenchange', function (event) {\n      if (document.fullscreenElement === null) {\n        // full-screen mode has been exited\n        this._map.contextMenu.setViewFullScreenInnerHTML('view');\n      } else {\n        this._map.contextMenu.setViewFullScreenInnerHTML('exit');\n      }\n    });\n    this.addEventListener('keydown', function (event) {\n      if (document.activeElement.className === 'mapml-web-map') {\n        // Check if Ctrl+R is pressed and map is focused\n        if (event.ctrlKey && event.keyCode === 82) {\n          // Prevent default browser behavior\n          event.preventDefault();\n          this.reload();\n        } else if (event.altKey && event.keyCode === 39) {\n          // Prevent default browser behavior\n          event.preventDefault();\n          this.forward();\n        } else if (event.altKey && event.keyCode === 37) {\n          // Prevent default browser behavior\n          event.preventDefault();\n          this.back();\n        }\n      }\n    });\n  }\n\n  locate(options) {\n    //options: https://leafletjs.com/reference.html#locate-options\n    if (this._geolocationButton) {\n      this._geolocationButton.stop();\n    }\n    if (options) {\n      if (options.zoomTo) {\n        options.setView = options.zoomTo;\n        delete options.zoomTo;\n      }\n      this._map.locate(options);\n    } else {\n      this._map.locate({ setView: true, maxZoom: 16 });\n    }\n  }\n\n  toggleDebug() {\n    if (this._debug) {\n      this._debug.remove();\n      this._debug = undefined;\n    } else {\n      this._debug = M.debugOverlay().addTo(this._map);\n    }\n  }\n\n  _changeWidth(width) {\n    if (this._container) {\n      this._container.style.width = width + 'px';\n      document.querySelector('[is=\"web-map\"]').style.width = width + 'px';\n    }\n    if (this._map) {\n      this._map.invalidateSize(false);\n    }\n  }\n  _changeHeight(height) {\n    if (this._container) {\n      this._container.style.height = height + 'px';\n      document.querySelector('[is=\"web-map\"]').style.height = height + 'px';\n    }\n    if (this._map) {\n      this._map.invalidateSize(false);\n    }\n  }\n  zoomTo(lat, lon, zoom) {\n    zoom = Number.isInteger(+zoom) ? +zoom : this.zoom;\n    let location = new L.LatLng(+lat, +lon);\n    this._map.setView(location, zoom);\n    this.zoom = zoom;\n    this.lat = location.lat;\n    this.lon = location.lng;\n  }\n  _updateMapCenter() {\n    // remember to tell Leaflet event handler that 'this' in here refers to\n    //  something other than the map in this case the custom polymer element\n    this.lat = this._map.getCenter().lat;\n    this.lon = this._map.getCenter().lng;\n    this.zoom = this._map.getZoom();\n  }\n  _resetHistory() {\n    this._history = [];\n    this._historyIndex = -1;\n    this._traversalCall = false;\n    // weird but ok\n    this._addToHistory();\n  }\n  /**\n   * Adds to the maps history on moveends\n   * @private\n   */\n  _addToHistory() {\n    if (this._traversalCall > 0) {\n      // this._traversalCall tracks how many consecutive moveends to ignore from history\n      this._traversalCall--; // this is useful for ignoring moveends corresponding to back, forward and reload\n      return;\n    }\n\n    let mapLocation = this._map.getPixelBounds().getCenter();\n    let location = {\n      zoom: this._map.getZoom(),\n      x: mapLocation.x,\n      y: mapLocation.y\n    };\n    this._historyIndex++;\n    this._history.splice(this._historyIndex, 0, location);\n    // Remove future history and overwrite it when map pan/zoom while inside history\n    if (this._historyIndex + 1 !== this._history.length) {\n      this._history.length = this._historyIndex + 1;\n    }\n    if (this._historyIndex === 0) {\n      // when at initial state of map, disable back, forward, and reload items\n      this._map.contextMenu.toggleContextMenuItem('Back', 'disabled'); // back contextmenu item\n      this._map.contextMenu.toggleContextMenuItem('Forward', 'disabled'); // forward contextmenu item\n      this._map.contextMenu.toggleContextMenuItem('Reload', 'disabled'); // reload contextmenu item\n      this._reloadButton?.disable();\n    } else {\n      this._map.contextMenu.toggleContextMenuItem('Back', 'enabled'); // back contextmenu item\n      this._map.contextMenu.toggleContextMenuItem('Forward', 'disabled'); // forward contextmenu item\n      this._map.contextMenu.toggleContextMenuItem('Reload', 'enabled'); // reload contextmenu item\n      this._reloadButton?.enable();\n    }\n  }\n  /**\n   * Allow user to move back in history\n   */\n  back() {\n    let history = this._history;\n    let curr = history[this._historyIndex];\n\n    if (this._historyIndex > 0) {\n      this._map.contextMenu.toggleContextMenuItem('Forward', 'enabled'); // forward contextmenu item\n      this._historyIndex--;\n      let prev = history[this._historyIndex];\n      // Disable back, reload contextmenu item when at the end of history\n      if (this._historyIndex === 0) {\n        this._map.contextMenu.toggleContextMenuItem('Back', 'disabled'); // back contextmenu item\n        this._map.contextMenu.toggleContextMenuItem('Reload', 'disabled'); // reload contextmenu item\n        this._reloadButton?.disable();\n      }\n\n      if (prev.zoom !== curr.zoom) {\n        this._traversalCall = 2; // allows the next 2 moveends to be ignored from history\n\n        let currScale = this._map.options.crs.scale(curr.zoom); // gets the scale of the current zoom level\n        let prevScale = this._map.options.crs.scale(prev.zoom); // gets the scale of the previous zoom level\n\n        let scale = currScale / prevScale; // used to convert the previous pixel location to be in terms of the current zoom level\n\n        this._map.panBy([prev.x * scale - curr.x, prev.y * scale - curr.y], {\n          animate: false\n        });\n        this._map.setZoom(prev.zoom);\n      } else {\n        this._traversalCall = 1;\n        this._map.panBy([prev.x - curr.x, prev.y - curr.y]);\n      }\n    }\n  }\n\n  /**\n   * Allows user to move forward in history\n   */\n  forward() {\n    let history = this._history;\n    let curr = history[this._historyIndex];\n    if (this._historyIndex < history.length - 1) {\n      this._map.contextMenu.toggleContextMenuItem('Back', 'enabled'); // back contextmenu item\n      this._map.contextMenu.toggleContextMenuItem('Reload', 'enabled'); // reload contextmenu item\n      this._reloadButton?.enable();\n      this._historyIndex++;\n      let next = history[this._historyIndex];\n      // disable forward contextmenu item, when at the end of forward history\n      if (this._historyIndex + 1 === this._history.length) {\n        this._map.contextMenu.toggleContextMenuItem('Forward', 'disabled'); // forward contextmenu item\n      }\n\n      if (next.zoom !== curr.zoom) {\n        this._traversalCall = 2; // allows the next 2 moveends to be ignored from history\n\n        let currScale = this._map.options.crs.scale(curr.zoom); // gets the scale of the current zoom level\n        let nextScale = this._map.options.crs.scale(next.zoom); // gets the scale of the next zoom level\n\n        let scale = currScale / nextScale; // used to convert the next pixel location to be in terms of the current zoom level\n\n        this._map.panBy([next.x * scale - curr.x, next.y * scale - curr.y], {\n          animate: false\n        });\n        this._map.setZoom(next.zoom);\n      } else {\n        this._traversalCall = 1;\n        this._map.panBy([next.x - curr.x, next.y - curr.y]);\n      }\n    }\n  }\n\n  /**\n   * Allows the user to reload/reset the map's location to it's initial location\n   */\n  reload() {\n    let initialLocation = this._history.shift();\n    let mapLocation = this._map.getPixelBounds().getCenter();\n    let curr = {\n      zoom: this._map.getZoom(),\n      x: mapLocation.x,\n      y: mapLocation.y\n    };\n\n    this._map.contextMenu.toggleContextMenuItem('Back', 'disabled'); // back contextmenu item\n    this._map.contextMenu.toggleContextMenuItem('Forward', 'disabled'); // forward contextmenu item\n    this._map.contextMenu.toggleContextMenuItem('Reload', 'disabled'); // reload contextmenu item\n    this._reloadButton?.disable();\n\n    this._history = [initialLocation];\n    this._historyIndex = 0;\n\n    if (initialLocation.zoom !== curr.zoom) {\n      this._traversalCall = 2; // ignores the next 2 moveend events\n\n      let currScale = this._map.options.crs.scale(curr.zoom); // gets the scale of the current zoom level\n      let initScale = this._map.options.crs.scale(initialLocation.zoom); // gets the scale of the initial location's zoom\n\n      let scale = currScale / initScale;\n\n      this._map.panBy(\n        [\n          initialLocation.x * scale - curr.x,\n          initialLocation.y * scale - curr.y\n        ],\n        { animate: false }\n      );\n      this._map.setZoom(initialLocation.zoom);\n    } else {\n      // if it's on the same zoom level as the initial location, no need to calculate scales\n      this._traversalCall = 1;\n      this._map.panBy([initialLocation.x - curr.x, initialLocation.y - curr.y]);\n    }\n    this._map.getContainer().focus();\n  }\n\n  _toggleFullScreen() {\n    this._map.toggleFullscreen();\n  }\n\n  viewSource() {\n    let blob = new Blob([this._source], { type: 'text/plain' }),\n      url = URL.createObjectURL(blob);\n    window.open(url);\n    URL.revokeObjectURL(url);\n  }\n\n  defineCustomProjection(jsonTemplate) {\n    let t = JSON.parse(jsonTemplate);\n    if (\n      t === undefined ||\n      !t.proj4string ||\n      !t.projection ||\n      !t.resolutions ||\n      !t.origin ||\n      !t.bounds\n    )\n      throw new Error('Incomplete TCRS Definition');\n    if (t.projection.indexOf(':') >= 0)\n      throw new Error('\":\" is not permitted in projection name');\n    if (M[t.projection.toUpperCase()]) return t.projection.toUpperCase();\n    let tileSize = [256, 512, 1024, 2048, 4096].includes(t.tilesize)\n      ? t.tilesize\n      : M.TILE_SIZE;\n\n    M[t.projection] = new L.Proj.CRS(t.projection, t.proj4string, {\n      origin: t.origin,\n      resolutions: t.resolutions,\n      bounds: L.bounds(t.bounds),\n      crs: {\n        tcrs: {\n          horizontal: {\n            name: 'x',\n            min: 0,\n            max: (zoom) =>\n              Math.round(\n                M[t.projection].options.bounds.getSize().x /\n                  M[t.projection].options.resolutions[zoom]\n              )\n          },\n          vertical: {\n            name: 'y',\n            min: 0,\n            max: (zoom) =>\n              Math.round(\n                M[t.projection].options.bounds.getSize().y /\n                  M[t.projection].options.resolutions[zoom]\n              )\n          },\n          bounds: (zoom) =>\n            L.bounds(\n              [\n                M[t.projection].options.crs.tcrs.horizontal.min,\n                M[t.projection].options.crs.tcrs.vertical.min\n              ],\n              [\n                M[t.projection].options.crs.tcrs.horizontal.max(zoom),\n                M[t.projection].options.crs.tcrs.vertical.max(zoom)\n              ]\n            )\n        },\n        pcrs: {\n          horizontal: {\n            name: 'easting',\n            get min() {\n              return M[t.projection].options.bounds.min.x;\n            },\n            get max() {\n              return M[t.projection].options.bounds.max.x;\n            }\n          },\n          vertical: {\n            name: 'northing',\n            get min() {\n              return M[t.projection].options.bounds.min.y;\n            },\n            get max() {\n              return M[t.projection].options.bounds.max.y;\n            }\n          },\n          get bounds() {\n            return M[t.projection].options.bounds;\n          }\n        },\n        gcrs: {\n          horizontal: {\n            name: 'longitude',\n            // set min/max axis values from EPSG registry area of use, retrieved 2019-07-25\n            get min() {\n              return M[t.projection].unproject(M.OSMTILE.options.bounds.min)\n                .lng;\n            },\n            get max() {\n              return M[t.projection].unproject(M.OSMTILE.options.bounds.max)\n                .lng;\n            }\n          },\n          vertical: {\n            name: 'latitude',\n            // set min/max axis values from EPSG registry area of use, retrieved 2019-07-25\n            get min() {\n              return M[t.projection].unproject(M.OSMTILE.options.bounds.min)\n                .lat;\n            },\n            get max() {\n              return M[t.projection].unproject(M.OSMTILE.options.bounds.max)\n                .lat;\n            }\n          },\n          get bounds() {\n            return L.latLngBounds(\n              [\n                M[t.projection].options.crs.gcrs.vertical.min,\n                M[t.projection].options.crs.gcrs.horizontal.min\n              ],\n              [\n                M[t.projection].options.crs.gcrs.vertical.max,\n                M[t.projection].options.crs.gcrs.horizontal.max\n              ]\n            );\n          }\n        },\n        map: {\n          horizontal: {\n            name: 'i',\n            min: 0,\n            max: (map) => map.getSize().x\n          },\n          vertical: {\n            name: 'j',\n            min: 0,\n            max: (map) => map.getSize().y\n          },\n          bounds: (map) => L.bounds(L.point([0, 0]), map.getSize())\n        },\n        tile: {\n          horizontal: {\n            name: 'i',\n            min: 0,\n            max: tileSize\n          },\n          vertical: {\n            name: 'j',\n            min: 0,\n            max: tileSize\n          },\n          get bounds() {\n            return L.bounds(\n              [\n                M[t.projection].options.crs.tile.horizontal.min,\n                M[t.projection].options.crs.tile.vertical.min\n              ],\n              [\n                M[t.projection].options.crs.tile.horizontal.max,\n                M[t.projection].options.crs.tile.vertical.max\n              ]\n            );\n          }\n        },\n        tilematrix: {\n          horizontal: {\n            name: 'column',\n            min: 0,\n            max: (zoom) =>\n              Math.round(\n                M[t.projection].options.crs.tcrs.horizontal.max(zoom) /\n                  M[t.projection].options.crs.tile.bounds.getSize().x\n              )\n          },\n          vertical: {\n            name: 'row',\n            min: 0,\n            max: (zoom) =>\n              Math.round(\n                M[t.projection].options.crs.tcrs.vertical.max(zoom) /\n                  M[t.projection].options.crs.tile.bounds.getSize().y\n              )\n          },\n          bounds: (zoom) =>\n            L.bounds(\n              [\n                M[t.projection].options.crs.tilematrix.horizontal.min,\n                M[t.projection].options.crs.tilematrix.vertical.min\n              ],\n              [\n                M[t.projection].options.crs.tilematrix.horizontal.max(zoom),\n                M[t.projection].options.crs.tilematrix.vertical.max(zoom)\n              ]\n            )\n        }\n      }\n    }); //creates crs using L.Proj\n    M[t.projection.toUpperCase()] = M[t.projection]; //adds the projection uppercase to global M\n    return t.projection;\n  }\n  whenReady() {\n    return new Promise((resolve, reject) => {\n      let interval, failureTimer;\n      if (this._map) {\n        resolve();\n      } else {\n        let viewer = this;\n        interval = setInterval(testForMap, 200, viewer);\n        failureTimer = setTimeout(mapNotDefined, 5000);\n      }\n      function testForMap(viewer) {\n        if (viewer._map) {\n          clearInterval(interval);\n          clearTimeout(failureTimer);\n          resolve();\n        }\n      }\n      function mapNotDefined() {\n        clearInterval(interval);\n        clearTimeout(failureTimer);\n        reject('Timeout reached waiting for map to be ready');\n      }\n    });\n  }\n  whenLayersReady() {\n    let layersReady = [];\n    // check if all the children elements (map-extent, map-feature) of all layer- are ready\n    for (let layer of [...this.layers]) {\n      layersReady.push(layer.whenElemsReady());\n    }\n    return Promise.allSettled(layersReady);\n  }\n  whenProjectionDefined(projection) {\n    return new Promise((resolve, reject) => {\n      let interval, failureTimer;\n      if (M[projection]) {\n        resolve();\n      } else {\n        interval = setInterval(testForProjection, 200, projection);\n        failureTimer = setTimeout(projectionNotDefined, 5000);\n      }\n      function testForProjection(p) {\n        if (M[p]) {\n          clearInterval(interval);\n          clearTimeout(failureTimer);\n          resolve();\n        }\n      }\n      function projectionNotDefined() {\n        clearInterval(interval);\n        clearTimeout(failureTimer);\n        reject('Timeout reached waiting for projection to be defined');\n      }\n    });\n  }\n  geojson2mapml(json, options = {}) {\n    if (options.projection === undefined) {\n      options.projection = this.projection;\n    }\n    let geojsonLayer = M.geojson2mapml(json, options);\n    this.appendChild(geojsonLayer);\n    return geojsonLayer;\n  }\n\n  _ready() {\n    if (this.hasAttribute('name')) {\n      var name = this.getAttribute('name');\n      if (name) {\n        this.poster = document.querySelector(\n          'img[usemap=' + '\"#' + name + '\"]'\n        );\n        // firefox has an issue where the attribution control's use of\n        // _container.innerHTML does not work properly if the engine is throwing\n        // exceptions because there are no area element children of the image map\n        // for firefox only, a workaround is to actually remove the image...\n        if (this.poster) {\n          if (L.Browser.gecko) {\n            this.poster.removeAttribute('usemap');\n          }\n          this._container.appendChild(this.poster);\n        }\n      }\n    }\n  }\n}\n// need to provide options { extends: ... }  for custom built-in elements\nwindow.customElements.define('web-map', WebMap, { extends: 'map' });\nwindow.customElements.define('layer-', MapLayer);\nwindow.customElements.define('map-area', MapArea, { extends: 'area' });\nwindow.customElements.define('map-caption', MapCaption);\nwindow.customElements.define('map-feature', MapFeature);\nwindow.customElements.define('map-extent', MapExtent);\nwindow.customElements.define('map-input', MapInput);\nwindow.customElements.define('map-link', MapLink);\n"],"names":["MapLayer","MapArea","MapCaption","MapFeature","MapExtent","MapInput","MapLink","WebMap","HTMLMapElement","observedAttributes","controls","this","hasAttribute","value","Boolean","setAttribute","removeAttribute","controlsList","_controlsList","width","window","getComputedStyle","replace","val","height","lat","getAttribute","lon","projection","whenProjectionDefined","then","catch","Error","zoom","parsedVal","parseInt","isNaN","layers","getElementsByTagName","areas","extent","let","map","_map","pcrsBounds","M","pixelToPCRSBounds","getPixelBounds","getZoom","options","formattedExtent","_convertAndFormatPCRS","crs","getMaxZoom","Infinity","minZoom","getMinZoom","maxZoom","static","constructor","super","_source","outerHTML","_history","_historyIndex","_traversalCall","connectedCallback","_initShadowRoot","DOMTokenList","s","wpx","hpx","w","h","_changeWidth","_changeHeight","_createMap","_toggleStatic","mapcaption","querySelector","setTimeout","innerHTML","mapCaptionObserver","MutationObserver","observe","childList","tmpl","document","createElement","URL","import","meta","url","href","rootDiv","classList","add","shadowRoot","attachShadow","mode","_container","insertAdjacentHTML","mapDefaultCSS","shadowRootCSS","hideElementsCSS","appendChild","content","cloneNode","head","insertAdjacentElement","name","L","center","LatLng","query","contextMenu","announceMovement","featureIndex","mapEl","zoomControl","_addToHistory","_createControls","_toggleControls","_crosshair","crosshair","addTo","featureIndexOverlayOption","_featureIndexOverlay","featureIndexOverlay","poster","Browser","gecko","_setUpEvents","disconnectedCallback","firstChild","removeChild","remove","_deleteControls","adoptedCallback","attributeChangedCallback","oldValue","newValue","valueSet","_hideControls","_showControls","connect","layersReady","disable","layer","querySelectorAll","reAttach","push","whenReady","Promise","allSettled","zoomTo","enable","forEach","dispatchEvent","CustomEvent","bind","resolve","reject","_resetHistory","_debug","i","toggleDebug","mapSize","getSize","y","totalSize","_layerControl","layerControl","collapsed","scaleValue","announceScale","metric","imperial","_scaleBar","scaleBar","_zoomControl","control","_reloadButton","reloadButton","_fullScreenControl","fullscreenButton","_geolocationButton","geolocationButton","toggleContextMenuItem","_setControlsVisibility","toLowerCase","_layers","length","hide","container","children","childEl","isStatic","dragging","touchZoom","doubleClickZoom","scrollWheelZoom","boxZoom","keyboard","_dropHandler","event","preventDefault","text","dataTransfer","getData","_pasteLayer","_dragoverHandler","dropEffect","_removeEvents","off","removeEventListener","addEventListener","e","target","tagName","details","originalEvent","parentElement","keyCode","activeElement","nodeName","detail","ctrlKey","navigator","clipboard","readText","fire","on","latlng","accuracy","error","message","lng","x","containerPoint","_updateMapCenter","fullscreenElement","setViewFullScreenInnerHTML","className","reload","altKey","forward","back","locate","stop","setView","undefined","debugOverlay","style","invalidateSize","Number","isInteger","location","getCenter","mapLocation","splice","prev","history","curr","scale","panBy","animate","setZoom","next","initialLocation","shift","getContainer","focus","_toggleFullScreen","toggleFullscreen","viewSource","blob","Blob","type","createObjectURL","open","revokeObjectURL","defineCustomProjection","jsonTemplate","t","JSON","parse","proj4string","resolutions","origin","bounds","indexOf","toUpperCase","tileSize","includes","tilesize","TILE_SIZE","Proj","CRS","tcrs","horizontal","min","max","Math","round","vertical","pcrs","gcrs","unproject","OSMTILE","latLngBounds","point","tile","tilematrix","interval","failureTimer","setInterval","viewer","clearInterval","clearTimeout","whenLayersReady","whenElemsReady","p","geojson2mapml","json","geojsonLayer","_ready","customElements","define","extends"],"mappings":"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"}