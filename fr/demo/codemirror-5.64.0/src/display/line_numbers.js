import{lineNumberFor}from"../line/utils_line.js";import{compensateForHScroll}from"../measurement/position_measurement.js";import{elt}from"../util/dom.js";import{updateGutterSpace}from"./update_display.js";export function alignHorizontally(e){let t=e.display,i=t.view;if(!(t.alignWidgets||t.gutters.firstChild&&e.options.fixedGutter))return;let r=compensateForHScroll(t)-t.scroller.scrollLeft+e.doc.scrollLeft,l=t.gutters.offsetWidth,n=r+"px";for(let o=0;o<i.length;o++)if(!i[o].hidden){e.options.fixedGutter&&(i[o].gutter&&(i[o].gutter.style.left=n),i[o].gutterBackground&&(i[o].gutterBackground.style.left=n));let t=i[o].alignable;if(t)for(let e=0;e<t.length;e++)t[e].style.left=n}e.options.fixedGutter&&(t.gutters.style.left=r+l+"px")}export function maybeUpdateLineNumberWidth(e){if(!e.options.lineNumbers)return!1;let t=e.doc,i=lineNumberFor(e.options,t.first+t.size-1),r=e.display;if(i.length!=r.lineNumChars){let t=r.measure.appendChild(elt("div",[elt("div",i)],"CodeMirror-linenumber CodeMirror-gutter-elt")),l=t.firstChild.offsetWidth,n=t.offsetWidth-l;return r.lineGutter.style.width="",r.lineNumInnerWidth=Math.max(l,r.lineGutter.offsetWidth-n)+1,r.lineNumWidth=r.lineNumInnerWidth+n,r.lineNumChars=r.lineNumInnerWidth?i.length:-1,r.lineGutter.style.width=r.lineNumWidth+"px",updateGutterSpace(e.display),!0}return!1}