#!/usr/bin/env node
var lint=require("./lint"),files=new(require("node-static").Server),server=require("http").createServer((function(e,t){e.addListener("end",(function(){files.serve(e,t,(function(e){e&&(console.error(e),process.exit(1))}))})).resume()})).addListener("error",(function(e){throw e})).listen(3e3,(async()=>{const e=require("puppeteer"),t=await e.launch({args:["--no-sandbox","--disable-setuid-sandbox"]}),o=await t.newPage();for(o.on("console",(e=>console.log("console:",e.text()))),o.on("dialog",(async e=>{console.log(e.message()),await e.dismiss()})),o.evaluateOnNewDocument((()=>window.automatedTests=!0)),await o.goto("http://localhost:3000/test/index.html#"+(process.argv[2]||""));!await o.evaluate((()=>window.done));)await sleep(200);let[n,a]=await o.evaluate((()=>[window.failed,window.errored]));for(let s of a)console.log(s);console.log(await o.evaluate((()=>document.getElementById("output").innerText+"\n"+document.getElementById("status").innerText))),process.exit(n>0||a.length||!lint.ok?1:0),await t.close()})());function sleep(e){return new Promise((t=>setTimeout(t,e)))}