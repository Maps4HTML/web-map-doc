{"version":3,"file":"map-extent.js","sources":["../src/map-extent.js"],"sourcesContent":["/* global M */\nexport class MapExtent extends HTMLElement {\n  static get observedAttributes() {\n    return ['checked', 'label', 'opacity', 'hidden'];\n  }\n  /* jshint ignore:start */\n  #hasConnected;\n  /* jshint ignore:end */\n  get units() {\n    return this.getAttribute('units') || M.FALLBACK_PROJECTION;\n  }\n\n  get checked() {\n    return this.hasAttribute('checked');\n  }\n\n  set checked(val) {\n    if (val) {\n      this.setAttribute('checked', '');\n    } else {\n      this.removeAttribute('checked');\n    }\n  }\n  get label() {\n    return this.hasAttribute('label')\n      ? this.getAttribute('label')\n      : M.options.locale.dfExtent;\n  }\n  set label(val) {\n    if (val) {\n      this.setAttribute('label', val);\n    }\n  }\n  get opacity() {\n    // use ?? since 0 is falsy, || would return rhs in that case\n    return +(this._opacity ?? this.getAttribute('opacity'));\n  }\n\n  set opacity(val) {\n    if (+val > 1 || +val < 0) return;\n    this.setAttribute('opacity', val);\n  }\n  get hidden() {\n    return this.hasAttribute('hidden');\n  }\n\n  set hidden(val) {\n    if (val) {\n      this.setAttribute('hidden', '');\n    } else {\n      this.removeAttribute('hidden');\n    }\n  }\n  get extent() {\n    const getExtent = (extent) => {\n      return Object.assign(\n        M._convertAndFormatPCRS(\n          extent._extentLayer.bounds,\n          M[extent.units],\n          extent.units\n        ),\n        { zoom: extent._extentLayer.zoomBounds }\n      );\n    };\n    const getCalculatedExtent = (extent) => {\n      extent._calculateBounds();\n      return getExtent(extent);\n    };\n\n    return this._extentLayer.bounds\n      ? getExtent(this)\n      : getCalculatedExtent(this);\n  }\n\n  getOuterHTML() {\n    let tempElement = this.cloneNode(true);\n\n    if (this.querySelector('map-link')) {\n      let mapLinks = tempElement.querySelectorAll('map-link');\n\n      mapLinks.forEach((mapLink) => {\n        if (mapLink.hasAttribute('href')) {\n          mapLink.setAttribute(\n            'href',\n            decodeURI(\n              new URL(\n                mapLink.attributes.href.value,\n                this.baseURI ? this.baseURI : document.baseURI\n              ).href\n            )\n          );\n        } else if (mapLink.hasAttribute('tref')) {\n          mapLink.setAttribute(\n            'tref',\n            decodeURI(\n              new URL(\n                mapLink.attributes.tref.value,\n                this.baseURI ? this.baseURI : document.baseURI\n              ).href\n            )\n          );\n        }\n      });\n    }\n\n    let outerLayer = tempElement.outerHTML;\n\n    tempElement.remove();\n\n    return outerLayer;\n  }\n\n  zoomTo() {\n    let extent = this.extent;\n    let map = this.getMapEl()._map,\n      xmin = extent.topLeft.pcrs.horizontal,\n      xmax = extent.bottomRight.pcrs.horizontal,\n      ymin = extent.bottomRight.pcrs.vertical,\n      ymax = extent.topLeft.pcrs.vertical,\n      bounds = L.bounds(L.point(xmin, ymin), L.point(xmax, ymax)),\n      center = map.options.crs.unproject(bounds.getCenter(true)),\n      maxZoom = extent.zoom.maxZoom,\n      minZoom = extent.zoom.minZoom;\n    map.setView(center, M.getMaxZoom(bounds, map, minZoom, maxZoom), {\n      animate: false\n    });\n  }\n  getMapEl() {\n    return this.getRootNode() instanceof ShadowRoot\n      ? this.getRootNode().host.closest('mapml-viewer,map[is=web-map]')\n      : this.closest('mapml-viewer,map[is=web-map]');\n  }\n  getLayerEl() {\n    return this.getRootNode() instanceof ShadowRoot\n      ? this.getRootNode().host\n      : this.closest('layer-');\n  }\n  attributeChangedCallback(name, oldValue, newValue) {\n    if (this.#hasConnected /* jshint ignore:line */) {\n      switch (name) {\n        case 'units':\n          if (oldValue !== newValue) {\n            // handle side effects\n          }\n          break;\n        case 'label':\n          if (oldValue !== newValue) {\n            this._layerControlHTML.querySelector(\n              '.mapml-extent-item-name'\n            ).innerHTML = newValue || M.options.locale.dfExtent;\n          }\n          break;\n        case 'checked':\n          this.parentLayer\n            .whenReady()\n            .then(() => {\n              this._handleChange();\n              this._calculateBounds();\n              this._layerControlCheckbox.checked = newValue !== null;\n            })\n            .catch((error) => {\n              console.log(\n                'Error while waiting on parentLayer for map-extent checked callback: ' +\n                  error\n              );\n            });\n          break;\n        case 'opacity':\n          if (oldValue !== newValue) {\n            this._opacity = newValue;\n            if (this._extentLayer) this._extentLayer.changeOpacity(newValue);\n          }\n          break;\n        case 'hidden':\n          if (oldValue !== newValue) {\n            this.parentLayer\n              .whenReady()\n              .then(() => {\n                let extentsRootFieldset =\n                  this.parentLayer._propertiesGroupAnatomy;\n                let position = Array.from(\n                  this.parentNode.querySelectorAll('map-extent:not([hidden])')\n                ).indexOf(this);\n                if (newValue !== null) {\n                  // remove from layer control (hide from user)\n                  this._layerControlHTML.remove();\n                } else {\n                  // insert the extent fieldset into the layer control container in\n                  // the calculated position\n                  if (position === 0) {\n                    extentsRootFieldset.insertAdjacentElement(\n                      'afterbegin',\n                      this._layerControlHTML\n                    );\n                  } else if (position > 0) {\n                    this.parentNode\n                      .querySelectorAll('map-extent:not([hidden])')\n                      [position - 1]._layerControlHTML.insertAdjacentElement(\n                        'afterend',\n                        this._layerControlHTML\n                      );\n                  }\n                }\n                this._validateLayerControlContainerHidden();\n              })\n              .catch(() => {\n                console.log(\n                  'Error while waiting on parentLayer for map-extent hidden callback'\n                );\n              });\n          }\n          break;\n      }\n    }\n  }\n  constructor() {\n    // Always call super first in constructor\n    super();\n    this._createLayerControlExtentHTML =\n      M._createLayerControlExtentHTML.bind(this);\n    this._changeHandler = this._handleChange.bind(this);\n  }\n  async connectedCallback() {\n    // this.parentNode.host returns the layer- element when parentNode is\n    // the shadow root\n    this.parentLayer =\n      this.parentNode.nodeName.toUpperCase() === 'LAYER-'\n        ? this.parentNode\n        : this.parentNode.host;\n    if (\n      this.hasAttribute('data-moving') ||\n      this.parentLayer.hasAttribute('data-moving')\n    )\n      return;\n    this.mapEl = this.parentLayer.closest('mapml-viewer,map[is=web-map]');\n    await this.mapEl.whenProjectionDefined(this.units).catch(() => {\n      throw new Error('Undefined projection:' + this.units);\n    });\n    // when projection is changed, the parent layer-._layer is created (so whenReady is fulfilled) but then removed,\n    // then the map-extent disconnectedCallback will be triggered by layer-._onRemove() (clear the shadowRoot)\n    // even before connectedCallback is finished\n    // in this case, the microtasks triggered by the fulfillment of the removed MapMLLayer should be stopped as well\n    // !this.isConnected <=> the disconnectedCallback has run before\n    if (!this.isConnected) return;\n    /* jshint ignore:start */\n    this.#hasConnected = true;\n    /* jshint ignore:end */\n    this._map = this.mapEl._map;\n    this.parentLayer.addEventListener('map-change', this._changeHandler);\n    this.mapEl.addEventListener('map-projectionchange', this._changeHandler);\n    // this._opacity is used to record the current opacity value (with or without updates),\n    // the initial value of this._opacity should be set as opacity attribute value, if exists, or the default value 1.0\n    this._opacity = this.opacity || 1.0;\n    this._extentLayer = M.extentLayer({\n      opacity: this.opacity,\n      crs: M[this.units],\n      extentZIndex: Array.from(\n        this.parentLayer.querySelectorAll('map-extent')\n      ).indexOf(this),\n      extentEl: this\n    });\n    // this._layerControlHTML is the fieldset for the extent in the LayerControl\n    this._layerControlHTML = this._createLayerControlExtentHTML();\n    this._calculateBounds();\n    // instead of children using parents' whenReady which can be cyclic,\n    // when this element is ready, run stuff that is only available after\n    // initialization\n    this._runMutationObserver(this.children);\n    // make sure same thing happens when children are added\n    this._bindMutationObserver();\n  }\n  /*\n   * Set up a function to watch additions of child elements of map-extent\n   * and to invoke desired side  effects of those additions via\n   * _runMutationObserver\n   */\n  _bindMutationObserver() {\n    this._observer = new MutationObserver((mutationList) => {\n      for (let mutation of mutationList) {\n        // the attributes changes should be handled by attributeChangedCallback()\n        if (mutation.type === 'childList') {\n          this._runMutationObserver(mutation.addedNodes);\n        }\n      }\n    });\n    // childList observes immediate children only (not grandchildren etc)\n    this._observer.observe(this, {\n      childList: true\n    });\n  }\n  _runMutationObserver(elementsGroup) {\n    const _addMetaElement = (mapMeta) => {\n      this.whenReady().then(() => {\n        this._calculateBounds();\n        this._validateDisabled();\n      });\n    };\n    const _addStylesheetLink = (mapLink) => {\n      this.whenReady().then(() => {\n        this._extentLayer.appendStyleLink(mapLink);\n      });\n    };\n    const _addStyleElement = (mapStyle) => {\n      this.whenReady().then(() => {\n        this._extentLayer.appendStyleElement(mapStyle);\n      });\n    };\n    for (let i = 0; i < elementsGroup.length; ++i) {\n      let element = elementsGroup[i];\n      switch (element.nodeName) {\n        case 'MAP-META':\n          const name =\n            element.hasAttribute('name') &&\n            (element.getAttribute('name').toLowerCase() === 'zoom' ||\n              element.getAttribute('name').toLowerCase() === 'extent');\n          if (name && element.hasAttribute('content')) {\n            _addMetaElement(element);\n          }\n          break;\n        case 'MAP-LINK':\n          if (element.link && !element.link.isConnected)\n            _addStylesheetLink(element);\n          break;\n        case 'MAP-STYLE':\n          if (element.styleElement && !element.styleElement.isConnected) {\n            _addStyleElement(element);\n          }\n          break;\n        default:\n          break;\n      }\n    }\n  }\n  getLayerControlHTML() {\n    return this._layerControlHTML;\n  }\n  _projectionMatch() {\n    return (\n      this.units.toUpperCase() === this._map.options.projection.toUpperCase()\n    );\n  }\n  _validateDisabled() {\n    if (!this._extentLayer) return;\n    let templates = this.querySelectorAll(\n      'map-link[rel=image],map-link[rel=tile],map-link[rel=features],map-link[rel=query]'\n    );\n    const noTemplateVisible = () => {\n      let totalTemplateCount = templates.length,\n        disabledTemplateCount = 0;\n      for (let j = 0; j < totalTemplateCount; j++) {\n        if (!templates[j]._validateDisabled()) {\n          disabledTemplateCount++;\n        }\n      }\n      return disabledTemplateCount === totalTemplateCount;\n    };\n    if (!this._projectionMatch() || noTemplateVisible()) {\n      this.setAttribute('disabled', '');\n      this.disabled = true;\n    } else {\n      this.removeAttribute('disabled');\n      this.disabled = false;\n    }\n    this.toggleLayerControlDisabled();\n    this._handleChange();\n    return this.disabled;\n  }\n  getMeta(metaName) {\n    let name = metaName.toLowerCase();\n    if (name !== 'extent' && name !== 'zoom') return;\n    return this.parentLayer.src\n      ? this.querySelector(`:scope > map-meta[name=${name}]`) ||\n          this.parentLayer.shadowRoot.querySelector(\n            `:host > map-meta[name=${name}]`\n          )\n      : this.querySelector(`:scope > map-meta[name=${name}]`) ||\n          this.parentLayer.querySelector(`:scope > map-meta[name=${name}]`);\n  }\n  // disable/italicize layer control elements based on the map-extent.disabled property\n  toggleLayerControlDisabled() {\n    let input = this._layerControlCheckbox,\n      label = this._layerControlLabel, // access to the label for the specific map-extent\n      opacityControl = this._opacityControl,\n      opacitySlider = this._opacitySlider,\n      selectDetails = this._selectdetails;\n    if (this.disabled) {\n      // update the status of layerControl\n      input.disabled = true;\n      opacitySlider.disabled = true;\n      label.style.fontStyle = 'italic';\n      opacityControl.style.fontStyle = 'italic';\n      if (selectDetails) {\n        selectDetails.forEach((i) => {\n          i.querySelectorAll('select').forEach((j) => {\n            j.disabled = true;\n            j.style.fontStyle = 'italic';\n          });\n          i.style.fontStyle = 'italic';\n        });\n      }\n    } else {\n      input.disabled = false;\n      opacitySlider.disabled = false;\n      label.style.fontStyle = 'normal';\n      opacityControl.style.fontStyle = 'normal';\n      if (selectDetails) {\n        selectDetails.forEach((i) => {\n          i.querySelectorAll('select').forEach((j) => {\n            j.disabled = false;\n            j.style.fontStyle = 'normal';\n          });\n          i.style.fontStyle = 'normal';\n        });\n      }\n    }\n  }\n\n  _handleChange() {\n    // add _extentLayer to map if map-extent is checked, otherwise remove it\n    if (this.checked && !this.disabled) {\n      // can be added to mapmllayer layerGroup no matter layer- is checked or not\n      this._extentLayer.addTo(this.parentLayer._layer);\n      this._extentLayer.setZIndex(\n        Array.from(this.parentLayer.querySelectorAll('map-extent')).indexOf(\n          this\n        )\n      );\n    } else {\n      this.parentLayer._layer.removeLayer(this._extentLayer);\n    }\n    // change the checkbox in the layer control to match map-extent.checked\n    // doesn't trigger the event handler because it's not user-caused AFAICT\n  }\n  _validateLayerControlContainerHidden() {\n    let extentsFieldset = this.parentLayer._propertiesGroupAnatomy;\n    let nodeToSearch = this.parentLayer.src\n      ? this.parentLayer.shadowRoot\n      : this.parentLayer;\n    if (!extentsFieldset) return;\n    if (\n      nodeToSearch.querySelectorAll('map-extent:not([hidden])').length === 0\n    ) {\n      extentsFieldset.setAttribute('hidden', '');\n    } else {\n      extentsFieldset.removeAttribute('hidden');\n    }\n  }\n  disconnectedCallback() {\n    // in case of projection change, the disconnectedcallback will be triggered by removing layer-._layer even before\n    // map-extent.connectedcallback is finished (because it will wait for the layer- to be ready)\n    // !this._extentLayer <=> this.connectedCallback has not yet been finished before disconnectedCallback is triggered\n    if (\n      this.hasAttribute('data-moving') ||\n      this.parentLayer.hasAttribute('data-moving') ||\n      !this._extentLayer\n    )\n      return;\n    this._validateLayerControlContainerHidden();\n    // remove layer control for map-extent from layer control DOM\n    // TODO: for the case of projection change, the layer control for map-extent has been created while _extentLayer has not yet been ready\n    this._layerControlHTML.remove();\n    if (this.parentLayer._layer) {\n      this.parentLayer._layer.removeLayer(this._extentLayer);\n    }\n    this.parentLayer.removeEventListener('map-change', this._changeHandler);\n    this.mapEl.removeEventListener('map-projectionchange', this._changeHandler);\n    delete this._extentLayer;\n    if (this.parentLayer._layer) delete this.parentLayer._layer.bounds;\n  }\n  _calculateBounds() {\n    delete this._extentLayer.bounds;\n    delete this._extentLayer.zoomBounds;\n    if (this.parentLayer._layer) delete this.parentLayer._layer.bounds;\n    let zoomMax = -Infinity,\n      zoomMin = Infinity,\n      maxNativeZoom = -Infinity,\n      minNativeZoom = Infinity,\n      templates = this.querySelectorAll(\n        'map-link[rel=image],map-link[rel=tile],map-link[rel=features],map-link[rel=query]'\n      );\n\n    // initialize bounds from this.scope > map-meta\n    let bounds = this.querySelector(':scope > map-meta[name=extent][content]')\n      ? M.getBoundsFromMeta(this) // TODO rewrite this pile of doo doo\n      : undefined;\n\n    // initialize zoom bounds from this.scope > map-meta\n    let zoomBounds = this.querySelector(':scope > map-meta[name=zoom][content]')\n      ? M.getZoomBoundsFromMeta(this) // TODO rewrite this pile of doo doo\n      : undefined;\n\n    // bounds should be able to be calculated unconditionally, not depend on map-extent.checked\n    for (let j = 0; j < templates.length; j++) {\n      const templateZoomBounds = templates[j].getZoomBounds(),\n        templateBounds = templates[j].getBounds();\n      let zoomMax =\n          zoomBounds && zoomBounds.hasOwnProperty('maxZoom')\n            ? zoomBounds.maxZoom\n            : -Infinity,\n        zoomMin =\n          zoomBounds && zoomBounds.hasOwnProperty('minZoom')\n            ? zoomBounds.minZoom\n            : Infinity,\n        minNativeZoom =\n          zoomBounds && zoomBounds.hasOwnProperty('minNativeZoom')\n            ? zoomBounds.minNativeZoom\n            : Infinity,\n        maxNativeZoom =\n          zoomBounds && zoomBounds.hasOwnProperty('maxNativeZoom')\n            ? zoomBounds.maxNativeZoom\n            : -Infinity;\n      if (!zoomBounds) {\n        zoomBounds = Object.assign({}, templateZoomBounds);\n      } else {\n        zoomMax = Math.max(zoomMax, templateZoomBounds.maxZoom);\n        zoomMin = Math.min(zoomMin, templateZoomBounds.minZoom);\n        maxNativeZoom = Math.max(\n          maxNativeZoom,\n          templateZoomBounds.maxNativeZoom\n        );\n        minNativeZoom = Math.min(\n          minNativeZoom,\n          templateZoomBounds.minNativeZoom\n        );\n        zoomBounds.minZoom = zoomMin;\n        zoomBounds.maxZoom = zoomMax;\n        zoomBounds.minNativeZoom = minNativeZoom;\n        zoomBounds.maxNativeZoom = maxNativeZoom;\n      }\n      if (!bounds) {\n        bounds = L.bounds(templateBounds.min, templateBounds.max);\n      } else {\n        bounds.extend(templateBounds);\n      }\n    }\n    if (bounds) {\n      this._extentLayer.bounds = bounds;\n    } else {\n      this._extentLayer.bounds = L.bounds(\n        M[this.units].options.bounds.min,\n        M[this.units].options.bounds.max\n      );\n    }\n    if (!zoomBounds) zoomBounds = {};\n    if (!zoomBounds.hasOwnProperty('minZoom')) {\n      zoomBounds.minZoom = 0;\n    }\n    if (!zoomBounds.hasOwnProperty('maxZoom')) {\n      zoomBounds.maxZoom = M[this.units].options.resolutions.length - 1;\n    }\n    if (\n      !zoomBounds.hasOwnProperty('minNativeZoom') ||\n      zoomBounds.minNativeZoom === Infinity\n    ) {\n      zoomBounds.minNativeZoom = zoomBounds.minZoom;\n    }\n    if (\n      !zoomBounds.hasOwnProperty('maxNativeZoom') ||\n      zoomBounds.maxNativeZoom === -Infinity\n    ) {\n      zoomBounds.maxNativeZoom = zoomBounds.maxZoom;\n    }\n    this._extentLayer.zoomBounds = zoomBounds;\n  }\n\n  whenReady() {\n    return new Promise((resolve, reject) => {\n      let interval, failureTimer;\n      if (this._extentLayer) {\n        resolve();\n      } else {\n        let extentElement = this;\n        interval = setInterval(testForExtent, 300, extentElement);\n        failureTimer = setTimeout(extentNotDefined, 10000);\n      }\n      function testForExtent(extentElement) {\n        if (extentElement._extentLayer) {\n          clearInterval(interval);\n          clearTimeout(failureTimer);\n          resolve();\n        } else if (!extentElement.isConnected) {\n          clearInterval(interval);\n          clearTimeout(failureTimer);\n          reject('map-extent was disconnected while waiting to be ready');\n        }\n      }\n      function extentNotDefined() {\n        clearInterval(interval);\n        clearTimeout(failureTimer);\n        reject('Timeout reached waiting for extent to be ready');\n      }\n    });\n  }\n\n  whenLinksReady() {\n    let templates = this.querySelectorAll(\n      'map-link[rel=image],map-link[rel=tile],map-link[rel=features],map-link[rel=query]'\n    );\n    let linksReady = [];\n    for (let link of [...templates]) {\n      linksReady.push(link.whenReady());\n    }\n    return Promise.allSettled(linksReady);\n  }\n}\n"],"names":["MapExtent","HTMLElement","observedAttributes","#hasConnected","units","this","getAttribute","M","FALLBACK_PROJECTION","checked","hasAttribute","val","setAttribute","removeAttribute","label","options","locale","dfExtent","opacity","_opacity","hidden","extent","getExtent","Object","assign","_convertAndFormatPCRS","_extentLayer","bounds","zoom","zoomBounds","_calculateBounds","getOuterHTML","let","tempElement","cloneNode","querySelector","mapLinks","querySelectorAll","forEach","mapLink","decodeURI","URL","attributes","href","value","baseURI","document","tref","outerLayer","outerHTML","remove","zoomTo","map","getMapEl","_map","xmin","topLeft","pcrs","horizontal","xmax","bottomRight","ymin","vertical","ymax","L","point","center","crs","unproject","getCenter","maxZoom","minZoom","setView","getMaxZoom","animate","getRootNode","ShadowRoot","host","closest","getLayerEl","attributeChangedCallback","name","oldValue","newValue","_layerControlHTML","innerHTML","parentLayer","whenReady","then","_handleChange","_layerControlCheckbox","catch","console","log","error","changeOpacity","extentsRootFieldset","_propertiesGroupAnatomy","position","Array","from","parentNode","indexOf","insertAdjacentElement","_validateLayerControlContainerHidden","constructor","super","_createLayerControlExtentHTML","bind","_changeHandler","connectedCallback","nodeName","toUpperCase","mapEl","whenProjectionDefined","Error","isConnected","addEventListener","extentLayer","extentZIndex","extentEl","_runMutationObserver","children","_bindMutationObserver","_observer","MutationObserver","mutation","mutationList","type","addedNodes","observe","childList","elementsGroup","_addMetaElement","_validateDisabled","_addStylesheetLink","appendStyleLink","_addStyleElement","appendStyleElement","mapStyle","i","length","element","toLowerCase","link","styleElement","getLayerControlHTML","_projectionMatch","projection","templates","totalTemplateCount","disabledTemplateCount","j","noTemplateVisible","disabled","toggleLayerControlDisabled","getMeta","metaName","src","shadowRoot","input","_layerControlLabel","opacityControl","_opacityControl","opacitySlider","_opacitySlider","selectDetails","_selectdetails","style","fontStyle","addTo","_layer","setZIndex","removeLayer","extentsFieldset","nodeToSearch","disconnectedCallback","removeEventListener","getBoundsFromMeta","undefined","getZoomBoundsFromMeta","templateZoomBounds","getZoomBounds","templateBounds","getBounds","zoomMax","hasOwnProperty","Infinity","zoomMin","minNativeZoom","maxNativeZoom","Math","max","min","extend","resolutions","Promise","resolve","reject","interval","failureTimer","setInterval","extentElement","clearInterval","clearTimeout","setTimeout","whenLinksReady","linksReady","push","allSettled"],"mappings":"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"}