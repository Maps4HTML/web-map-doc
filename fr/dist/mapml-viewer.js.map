{"version":3,"file":"mapml-viewer.js","sources":["../src/mapml-viewer.js"],"sourcesContent":["import './leaflet.js'; // bundled with proj4, proj4leaflet, modularized\nimport './mapml.js';\nimport { MapLayer } from './layer.js';\nimport { MapCaption } from './map-caption.js';\nimport { MapFeature } from './map-feature.js';\nimport { MapExtent } from './map-extent.js';\nimport { MapInput } from './map-input.js';\nimport { MapSelect } from './map-select.js';\nimport { MapLink } from './map-link.js';\nimport { MapStyle } from './map-style.js';\n\nexport class MapViewer extends HTMLElement {\n  static get observedAttributes() {\n    return [\n      'lat',\n      'lon',\n      'zoom',\n      'projection',\n      'width',\n      'height',\n      'controls',\n      'static',\n      'controlslist'\n    ];\n  }\n  // see comments below regarding attributeChangedCallback vs. getter/setter\n  // usage.  Effectively, the user of the element must use the property, not\n  // the getAttribute/setAttribute/removeAttribute DOM API, because the latter\n  // calls don't result in the getter/setter being called (so you have to use\n  // the getter/setter directly)\n  get controls() {\n    return this.hasAttribute('controls');\n  }\n  set controls(value) {\n    const hasControls = Boolean(value);\n    if (hasControls) {\n      this.setAttribute('controls', '');\n    } else {\n      this.removeAttribute('controls');\n    }\n  }\n  get controlsList() {\n    return this._controlsList;\n  }\n  set controlsList(value) {\n    this._controlsList.value = value;\n    this.setAttribute('controlslist', value);\n  }\n  get width() {\n    return +window.getComputedStyle(this).width.replace('px', '');\n  }\n  set width(val) {\n    //img.height or img.width setters change or add the corresponding attributes\n    this.setAttribute('width', val);\n  }\n  get height() {\n    return +window.getComputedStyle(this).height.replace('px', '');\n  }\n  set height(val) {\n    //img.height or img.width setters change or add the corresponding attributes\n    this.setAttribute('height', val);\n  }\n  get lat() {\n    return +(this.hasAttribute('lat') ? this.getAttribute('lat') : 0);\n  }\n  set lat(val) {\n    if (val) {\n      this.setAttribute('lat', val);\n    }\n  }\n  get lon() {\n    return +(this.hasAttribute('lon') ? this.getAttribute('lon') : 0);\n  }\n  set lon(val) {\n    if (val) {\n      this.setAttribute('lon', val);\n    }\n  }\n  get projection() {\n    return this.hasAttribute('projection')\n      ? this.getAttribute('projection')\n      : 'OSMTILE';\n  }\n  set projection(val) {\n    if (val) {\n      this.whenProjectionDefined(val)\n        .then(() => {\n          this.setAttribute('projection', val);\n        })\n        .catch(() => {\n          throw new Error('Undefined projection:' + val);\n        });\n    }\n  }\n  get zoom() {\n    return +(this.hasAttribute('zoom') ? this.getAttribute('zoom') : 0);\n  }\n  set zoom(val) {\n    var parsedVal = parseInt(val, 10);\n    if (!isNaN(parsedVal) && parsedVal >= 0 && parsedVal <= 25) {\n      this.setAttribute('zoom', parsedVal);\n    }\n  }\n  get layers() {\n    return this.getElementsByTagName('layer-');\n  }\n\n  get extent() {\n    let map = this._map,\n      pcrsBounds = M.pixelToPCRSBounds(\n        map.getPixelBounds(),\n        map.getZoom(),\n        map.options.projection\n      );\n    let formattedExtent = M._convertAndFormatPCRS(\n      pcrsBounds,\n      map.options.crs,\n      this.projection\n    );\n    // get min/max zoom from layers at this moment\n    let minZoom = Infinity,\n      maxZoom = -Infinity;\n    for (let i = 0; i < this.layers.length; i++) {\n      if (this.layers[i].extent) {\n        if (this.layers[i].extent.zoom.minZoom < minZoom)\n          minZoom = this.layers[i].extent.zoom.minZoom;\n        if (this.layers[i].extent.zoom.maxZoom > maxZoom)\n          maxZoom = this.layers[i].extent.zoom.maxZoom;\n      }\n    }\n\n    formattedExtent.zoom = {\n      minZoom: minZoom !== Infinity ? minZoom : map.getMinZoom(),\n      maxZoom: maxZoom !== -Infinity ? maxZoom : map.getMaxZoom()\n    };\n    return formattedExtent;\n  }\n  get static() {\n    return this.hasAttribute('static');\n  }\n  set static(value) {\n    const isStatic = Boolean(value);\n    if (isStatic) this.setAttribute('static', '');\n    else this.removeAttribute('static');\n  }\n\n  constructor() {\n    // Always call super first in constructor\n    super();\n    this._source = this.outerHTML;\n    // create an array to track the history of the map and the current index\n    this._history = [];\n    this._historyIndex = -1;\n    this._traversalCall = false;\n  }\n  connectedCallback() {\n    this.whenProjectionDefined(this.projection)\n      .then(() => {\n        this._initShadowRoot();\n\n        this._controlsList = new M.DOMTokenList(\n          this.getAttribute('controlslist'),\n          this,\n          'controlslist',\n          [\n            'noreload',\n            'nofullscreen',\n            'nozoom',\n            'nolayer',\n            'noscale',\n            'geolocation'\n          ]\n        );\n\n        var s = window.getComputedStyle(this),\n          wpx = s.width,\n          hpx = s.height,\n          w = this.hasAttribute('width')\n            ? this.getAttribute('width')\n            : parseInt(wpx.replace('px', '')),\n          h = this.hasAttribute('height')\n            ? this.getAttribute('height')\n            : parseInt(hpx.replace('px', ''));\n        this._changeWidth(w);\n        this._changeHeight(h);\n\n        this._createMap();\n\n        // https://github.com/Maps4HTML/Web-Map-Custom-Element/issues/274\n        this.setAttribute('role', 'application');\n        this._toggleStatic();\n\n        /*\n      1. only deletes aria-label when the last (only remaining) map caption is removed\n      2. only deletes aria-label if the aria-label was defined by the map caption element itself\n      */\n\n        let mapcaption = this.querySelector('map-caption');\n\n        if (mapcaption !== null) {\n          setTimeout(() => {\n            let ariaupdate = this.getAttribute('aria-label');\n\n            if (ariaupdate === mapcaption.innerHTML) {\n              this.mapCaptionObserver = new MutationObserver((m) => {\n                let mapcaptionupdate = this.querySelector('map-caption');\n                if (mapcaptionupdate !== mapcaption) {\n                  this.removeAttribute('aria-label');\n                }\n              });\n              this.mapCaptionObserver.observe(this, {\n                childList: true\n              });\n            }\n          }, 0);\n        }\n      })\n      .catch(() => {\n        throw new Error('Projection not defined');\n      });\n  }\n  _initShadowRoot() {\n    if (!this.shadowRoot) {\n      this.attachShadow({ mode: 'open' });\n    }\n    let tmpl = document.createElement('template');\n    /* jshint ignore:start */\n    tmpl.innerHTML = `<link rel=\"stylesheet\" href=\"${\n      new URL('mapml.css', import.meta.url).href\n    }\">`;\n    /* jshint ignore:end */\n\n    let shadowRoot = this.shadowRoot;\n    this._container = document.createElement('div');\n\n    let output =\n      \"<output role='status' aria-live='polite' aria-atomic='true' class='mapml-screen-reader-output'></output>\";\n    this._container.insertAdjacentHTML('beforeend', output);\n\n    // Set default styles for the map element.\n    let mapDefaultCSS = document.createElement('style');\n    mapDefaultCSS.innerHTML =\n      `:host {` +\n      `all: initial;` + // Reset properties inheritable from html/body, as some inherited styles may cause unexpected issues with the map element's components (https://github.com/Maps4HTML/Web-Map-Custom-Element/issues/140).\n      `contain: layout size;` + // Contain layout and size calculations within the map element.\n      `display: inline-block;` + // This together with dimension properties is required so that Leaflet isn't working with a height=0 box by default.\n      `height: 150px;` + // Provide a \"default object size\" (https://github.com/Maps4HTML/HTML-Map-Element/issues/31).\n      `width: 300px;` +\n      `border-width: 2px;` + // Set a default border for contrast, similar to UA default for iframes.\n      `border-style: inset;` +\n      `}` +\n      `:host([frameborder=\"0\"]) {` +\n      `border-width: 0;` +\n      `}` +\n      `:host([hidden]) {` +\n      `display: none!important;` +\n      `}` +\n      `:host .leaflet-control-container {` +\n      `visibility: hidden!important;` + // Visibility hack to improve percieved performance (mitigate FOUC) â€“ visibility is unset in mapml.css! (https://github.com/Maps4HTML/Web-Map-Custom-Element/issues/154).\n      `}`;\n\n    // Hide all (light DOM) children of the map element.\n    let hideElementsCSS = document.createElement('style');\n    hideElementsCSS.innerHTML =\n      `mapml-viewer > * {` + `display: none!important;` + `}`;\n    this.appendChild(hideElementsCSS);\n\n    // Make the Leaflet container element programmatically identifiable\n    // (https://github.com/Leaflet/Leaflet/issues/7193).\n    this._container.setAttribute('role', 'region');\n    this._container.setAttribute('aria-label', 'Interactive map');\n\n    shadowRoot.appendChild(mapDefaultCSS);\n    shadowRoot.appendChild(tmpl.content.cloneNode(true));\n    shadowRoot.appendChild(this._container);\n  }\n  _createMap() {\n    if (!this._map) {\n      this._map = L.map(this._container, {\n        center: new L.LatLng(this.lat, this.lon),\n        minZoom: 0,\n        maxZoom: M[this.projection].options.resolutions.length - 1,\n        projection: this.projection,\n        query: true,\n        contextMenu: true,\n        announceMovement: M.options.announceMovement,\n        featureIndex: true,\n        mapEl: this,\n        crs: M[this.projection],\n        zoom: this.zoom,\n        zoomControl: false\n      });\n      this._addToHistory();\n\n      this._createControls();\n      this._toggleControls();\n      this._crosshair = M.crosshair().addTo(this._map);\n\n      if (M.options.featureIndexOverlayOption)\n        this._featureIndexOverlay = M.featureIndexOverlay().addTo(this._map);\n\n      this._setUpEvents();\n    }\n  }\n  disconnectedCallback() {\n    this._removeEvents();\n    while (this.shadowRoot.firstChild) {\n      this.shadowRoot.removeChild(this.shadowRoot.firstChild);\n    }\n    delete this._map;\n    this._deleteControls();\n  }\n  adoptedCallback() {\n    //    console.log('Custom map element moved to new page.');\n  }\n\n  attributeChangedCallback(name, oldValue, newValue) {\n    //    console.log('Attribute: ' + name + ' changed from: '+ oldValue + ' to: '+newValue);\n    // \"Best practice\": handle side-effects in this callback\n    // https://developers.google.com/web/fundamentals/web-components/best-practices\n    // https://developers.google.com/web/fundamentals/web-components/best-practices#avoid-reentrancy\n    // note that the example is misleading, since the user can't use\n    // setAttribute or removeAttribute to set the property, they need to use\n    // the property directly in their API usage, which kinda sucks\n    /*\n  const hasValue = newValue !== null;\n  switch (name) {\n    case 'checked':\n      // Note the attributeChangedCallback is only handling the *side effects*\n      // of setting the attribute.\n      this.setAttribute('aria-checked', hasValue);\n      break;\n    ...\n  }     */\n    switch (name) {\n      case 'controlslist':\n        if (this._controlsList) {\n          if (this._controlsList.valueSet === false) {\n            this._controlsList.value = newValue;\n          }\n          this._toggleControls();\n        }\n        break;\n      case 'controls':\n        if (oldValue !== null && newValue === null) {\n          this._hideControls();\n        } else if (oldValue === null && newValue !== null) {\n          this._showControls();\n        }\n        break;\n      case 'height':\n        if (oldValue !== newValue) {\n          this._changeHeight(newValue);\n        }\n        break;\n      case 'width':\n        if (oldValue !== newValue) {\n          this._changeWidth(newValue);\n        }\n        break;\n      case 'static':\n        this._toggleStatic();\n        break;\n      case 'projection':\n        const reconnectLayers = () => {\n          // save map location and zoom\n          let lat = this.lat;\n          let lon = this.lon;\n          let zoom = this.zoom;\n          // saving the lat, lon and zoom is necessary because Leaflet seems\n          // to try to compensate for the change in the scales for each zoom\n          // level in the crs by changing the zoom level of the map when\n          // you set the map crs.  So, we save the current view for use below\n          // when all the layers' reconnections have settled.\n          // leaflet doesn't like this: https://github.com/Leaflet/Leaflet/issues/2553\n          this._map.options.crs = M[newValue];\n          this._map.options.projection = newValue;\n          let layersReady = [];\n          this._map.announceMovement.disable();\n          for (let layer of this.querySelectorAll('layer-')) {\n            layer.removeAttribute('disabled');\n            let reAttach = this.removeChild(layer);\n            this.appendChild(reAttach);\n            layersReady.push(reAttach.whenReady());\n          }\n          return Promise.allSettled(layersReady).then(() => {\n            // use the saved map location to ensure it is correct after\n            // changing the map CRS.  Specifically affects projection\n            // upgrades, e.g. https://maps4html.org/experiments/custom-projections/BNG/\n            // see leaflet bug: https://github.com/Leaflet/Leaflet/issues/2553\n            this.zoomTo(lat, lon, zoom);\n            if (M.options.announceMovement) this._map.announceMovement.enable();\n            // required to delay until map-extent.disabled is correctly set\n            // which happens as a result of layer-._validateDisabled()\n            // which happens so much we have to delay until they calls are\n            // completed\n            setTimeout(() => {\n              this.dispatchEvent(new CustomEvent('map-projectionchange'));\n            }, 0);\n          });\n        };\n        if (\n          newValue &&\n          this._map &&\n          this._map.options.projection !== newValue\n        ) {\n          const connect = reconnectLayers.bind(this);\n          connect().then(() => {\n            if (this._map && this._map.options.projection !== oldValue) {\n              // this doesn't completely work either\n              this._resetHistory();\n            }\n            if (this._debug) for (let i = 0; i < 2; i++) this.toggleDebug();\n          });\n        }\n        break;\n    }\n  }\n\n  // Creates All map controls and adds them to the map, when created.\n  _createControls() {\n    let mapSize = this._map.getSize().y,\n      totalSize = 0;\n\n    this._layerControl = M.layerControl(null, {\n      collapsed: true,\n      mapEl: this\n    }).addTo(this._map);\n\n    let scaleValue = M.options.announceScale;\n\n    if (scaleValue === 'metric') {\n      scaleValue = { metric: true, imperial: false };\n    }\n    if (scaleValue === 'imperial') {\n      scaleValue = { metric: false, imperial: true };\n    }\n\n    if (!this._scaleBar)\n      this._scaleBar = M.scaleBar(scaleValue).addTo(this._map);\n\n    // Only add controls if there is enough top left vertical space\n    if (!this._zoomControl && totalSize + 93 <= mapSize) {\n      totalSize += 93;\n      this._zoomControl = L.control.zoom().addTo(this._map);\n    }\n    if (!this._reloadButton && totalSize + 49 <= mapSize) {\n      totalSize += 49;\n      this._reloadButton = M.reloadButton().addTo(this._map);\n    }\n    if (!this._fullScreenControl && totalSize + 49 <= mapSize) {\n      totalSize += 49;\n      this._fullScreenControl = M.fullscreenButton().addTo(this._map);\n    }\n\n    if (!this._geolocationButton) {\n      this._geolocationButton = M.geolocationButton().addTo(this._map);\n    }\n  }\n\n  // Sets controls by hiding/unhiding them based on the map attribute\n  _toggleControls() {\n    if (this.controls === false) {\n      this._hideControls();\n      this._map.contextMenu.toggleContextMenuItem('Controls', 'disabled');\n    } else {\n      this._showControls();\n      this._map.contextMenu.toggleContextMenuItem('Controls', 'enabled');\n    }\n  }\n\n  _hideControls() {\n    this._setControlsVisibility('fullscreen', true);\n    this._setControlsVisibility('layercontrol', true);\n    this._setControlsVisibility('reload', true);\n    this._setControlsVisibility('zoom', true);\n    this._setControlsVisibility('geolocation', true);\n    this._setControlsVisibility('scale', true);\n  }\n  _showControls() {\n    this._setControlsVisibility('fullscreen', false);\n    this._setControlsVisibility('layercontrol', false);\n    this._setControlsVisibility('reload', false);\n    this._setControlsVisibility('zoom', false);\n    this._setControlsVisibility('geolocation', true);\n    this._setControlsVisibility('scale', false);\n\n    // prune the controls shown if necessary\n    // this logic could be embedded in _showControls\n    // but would require being able to iterate the domain of supported tokens\n    // for the controlslist\n    if (this._controlsList) {\n      this._controlsList.forEach((value) => {\n        switch (value.toLowerCase()) {\n          case 'nofullscreen':\n            this._setControlsVisibility('fullscreen', true);\n            break;\n          case 'nolayer':\n            this._setControlsVisibility('layercontrol', true);\n            break;\n          case 'noreload':\n            this._setControlsVisibility('reload', true);\n            break;\n          case 'nozoom':\n            this._setControlsVisibility('zoom', true);\n            break;\n          case 'geolocation':\n            this._setControlsVisibility('geolocation', false);\n            break;\n          case 'noscale':\n            this._setControlsVisibility('scale', true);\n            break;\n        }\n      });\n    }\n    if (this._layerControl && this._layerControl._layers.length === 0) {\n      this._layerControl._container.setAttribute('hidden', '');\n    }\n  }\n\n  // delete the map controls that are private properties of this custom element\n  _deleteControls() {\n    delete this._layerControl;\n    delete this._zoomControl;\n    delete this._reloadButton;\n    delete this._fullScreenControl;\n    delete this._geolocationButton;\n    delete this._scaleBar;\n  }\n  // Sets the control's visibility AND all its childrens visibility,\n  // for the control element based on the Boolean hide parameter\n  _setControlsVisibility(control, hide) {\n    let container;\n    switch (control) {\n      case 'zoom':\n        if (this._zoomControl) {\n          container = this._zoomControl._container;\n        }\n        break;\n      case 'reload':\n        if (this._reloadButton) {\n          container = this._reloadButton._container;\n        }\n        break;\n      case 'fullscreen':\n        if (this._fullScreenControl) {\n          container = this._fullScreenControl._container;\n        }\n        break;\n      case 'layercontrol':\n        if (this._layerControl) {\n          container = this._layerControl._container;\n        }\n        break;\n      case 'geolocation':\n        if (this._geolocationButton) {\n          container = this._geolocationButton._container;\n        }\n        break;\n      case 'scale':\n        if (this._scaleBar) {\n          container = this._scaleBar._container;\n        }\n        break;\n    }\n    if (container) {\n      if (hide) {\n        // setting the visibility for all the children of the element\n        [...container.children].forEach((childEl) => {\n          childEl.setAttribute('hidden', '');\n        });\n        container.setAttribute('hidden', '');\n      } else {\n        // setting the visibility for all the children of the element\n        [...container.children].forEach((childEl) => {\n          childEl.removeAttribute('hidden');\n        });\n        container.removeAttribute('hidden');\n      }\n    }\n  }\n  _toggleStatic() {\n    const isStatic = this.hasAttribute('static');\n    if (this._map) {\n      if (isStatic) {\n        this._map.dragging.disable();\n        this._map.touchZoom.disable();\n        this._map.doubleClickZoom.disable();\n        this._map.scrollWheelZoom.disable();\n        this._map.boxZoom.disable();\n        this._map.keyboard.disable();\n        this._zoomControl.disable();\n      } else {\n        this._map.dragging.enable();\n        this._map.touchZoom.enable();\n        this._map.doubleClickZoom.enable();\n        this._map.scrollWheelZoom.enable();\n        this._map.boxZoom.enable();\n        this._map.keyboard.enable();\n        this._zoomControl.enable();\n      }\n    }\n  }\n\n  _dropHandler(event) {\n    event.preventDefault();\n    let text = event.dataTransfer.getData('text');\n    M._pasteLayer(this, text);\n  }\n  _dragoverHandler(event) {\n    event.preventDefault();\n    event.dataTransfer.dropEffect = 'copy';\n  }\n  _removeEvents() {\n    if (this._map) {\n      this._map.off();\n      this.removeEventListener('drop', this._dropHandler, false);\n      this.removeEventListener('dragover', this._dragoverHandler, false);\n    }\n  }\n  _setUpEvents() {\n    this.addEventListener('drop', this._dropHandler, false);\n    this.addEventListener('dragover', this._dragoverHandler, false);\n    this.addEventListener(\n      'change',\n      function (e) {\n        if (e.target.tagName === 'LAYER-') {\n          this.dispatchEvent(\n            new CustomEvent('layerchange', {\n              details: { target: this, originalEvent: e }\n            })\n          );\n        }\n      },\n      false\n    );\n\n    this.parentElement.addEventListener('keyup', function (e) {\n      if (\n        e.keyCode === 9 &&\n        document.activeElement.nodeName === 'MAPML-VIEWER'\n      ) {\n        document.activeElement.dispatchEvent(\n          new CustomEvent('mapfocused', { detail: { target: this } })\n        );\n      }\n    });\n    // pasting layer-, links and geojson using Ctrl+V\n    this.addEventListener('keydown', function (e) {\n      if (e.keyCode === 86 && e.ctrlKey) {\n        navigator.clipboard.readText().then((layer) => {\n          M._pasteLayer(this, layer);\n        });\n        // Prevents default spacebar event on all of mapml-viewer\n      } else if (\n        e.keyCode === 32 &&\n        this.shadowRoot.activeElement.nodeName !== 'INPUT'\n      ) {\n        e.preventDefault();\n        this._map.fire('keypress', { originalEvent: e });\n      }\n    });\n    this.parentElement.addEventListener('mousedown', function (e) {\n      if (document.activeElement.nodeName === 'MAPML-VIEWER') {\n        document.activeElement.dispatchEvent(\n          new CustomEvent('mapfocused', { detail: { target: this } })\n        );\n      }\n    });\n\n    this._map.on(\n      'locationfound',\n      function (e) {\n        this.dispatchEvent(\n          new CustomEvent('maplocationfound', {\n            detail: { latlng: e.latlng, accuracy: e.accuracy }\n          })\n        );\n      },\n      this\n    );\n    this._map.on(\n      'locationerror',\n      function (e) {\n        this.dispatchEvent(\n          new CustomEvent('locationerror', { detail: { error: e.message } })\n        );\n      },\n      this\n    );\n    this._map.on(\n      'load',\n      function () {\n        this.dispatchEvent(\n          new CustomEvent('load', { detail: { target: this } })\n        );\n      },\n      this\n    );\n    this._map.on(\n      'preclick',\n      function (e) {\n        this.dispatchEvent(\n          new CustomEvent('preclick', {\n            detail: {\n              lat: e.latlng.lat,\n              lon: e.latlng.lng,\n              x: e.containerPoint.x,\n              y: e.containerPoint.y\n            }\n          })\n        );\n      },\n      this\n    );\n    this._map.on(\n      'click',\n      function (e) {\n        this.dispatchEvent(\n          new CustomEvent('click', {\n            detail: {\n              lat: e.latlng.lat,\n              lon: e.latlng.lng,\n              x: e.containerPoint.x,\n              y: e.containerPoint.y\n            }\n          })\n        );\n      },\n      this\n    );\n    this._map.on(\n      'dblclick',\n      function (e) {\n        this.dispatchEvent(\n          new CustomEvent('dblclick', {\n            detail: {\n              lat: e.latlng.lat,\n              lon: e.latlng.lng,\n              x: e.containerPoint.x,\n              y: e.containerPoint.y\n            }\n          })\n        );\n      },\n      this\n    );\n    this._map.on(\n      'mousemove',\n      function (e) {\n        this.dispatchEvent(\n          new CustomEvent('mousemove', {\n            detail: {\n              lat: e.latlng.lat,\n              lon: e.latlng.lng,\n              x: e.containerPoint.x,\n              y: e.containerPoint.y\n            }\n          })\n        );\n      },\n      this\n    );\n    this._map.on(\n      'mouseover',\n      function (e) {\n        this.dispatchEvent(\n          new CustomEvent('mouseover', {\n            detail: {\n              lat: e.latlng.lat,\n              lon: e.latlng.lng,\n              x: e.containerPoint.x,\n              y: e.containerPoint.y\n            }\n          })\n        );\n      },\n      this\n    );\n    this._map.on(\n      'mouseout',\n      function (e) {\n        this.dispatchEvent(\n          new CustomEvent('mouseout', {\n            detail: {\n              lat: e.latlng.lat,\n              lon: e.latlng.lng,\n              x: e.containerPoint.x,\n              y: e.containerPoint.y\n            }\n          })\n        );\n      },\n      this\n    );\n    this._map.on(\n      'mousedown',\n      function (e) {\n        this.dispatchEvent(\n          new CustomEvent('mousedown', {\n            detail: {\n              lat: e.latlng.lat,\n              lon: e.latlng.lng,\n              x: e.containerPoint.x,\n              y: e.containerPoint.y\n            }\n          })\n        );\n      },\n      this\n    );\n    this._map.on(\n      'mouseup',\n      function (e) {\n        this.dispatchEvent(\n          new CustomEvent('mouseup', {\n            detail: {\n              lat: e.latlng.lat,\n              lon: e.latlng.lng,\n              x: e.containerPoint.x,\n              y: e.containerPoint.y\n            }\n          })\n        );\n      },\n      this\n    );\n    this._map.on(\n      'contextmenu',\n      function (e) {\n        this.dispatchEvent(\n          new CustomEvent('contextmenu', {\n            detail: {\n              lat: e.latlng.lat,\n              lon: e.latlng.lng,\n              x: e.containerPoint.x,\n              y: e.containerPoint.y\n            }\n          })\n        );\n      },\n      this\n    );\n    this._map.on(\n      'movestart',\n      function () {\n        this.dispatchEvent(\n          new CustomEvent('movestart', { detail: { target: this } })\n        );\n      },\n      this\n    );\n    this._map.on(\n      'move',\n      function () {\n        this.dispatchEvent(\n          new CustomEvent('move', { detail: { target: this } })\n        );\n      },\n      this\n    );\n    this._map.on(\n      'moveend',\n      function () {\n        this._updateMapCenter();\n        this._addToHistory();\n        this.dispatchEvent(\n          new CustomEvent('map-moveend', { detail: { target: this } })\n        );\n      },\n      this\n    );\n    this._map.on(\n      'zoomstart',\n      function () {\n        this.dispatchEvent(\n          new CustomEvent('zoomstart', { detail: { target: this } })\n        );\n      },\n      this\n    );\n    this._map.on(\n      'zoom',\n      function () {\n        this.dispatchEvent(\n          new CustomEvent('zoom', { detail: { target: this } })\n        );\n      },\n      this\n    );\n    this._map.on(\n      'zoomend',\n      function () {\n        this._updateMapCenter();\n        this.dispatchEvent(\n          new CustomEvent('zoomend', { detail: { target: this } })\n        );\n      },\n      this\n    );\n    const setMapMinAndMaxZoom = ((e) => {\n      this.whenLayersReady().then(() => {\n        if (e && e.layer._layerEl) {\n          this._map.setMaxZoom(this.extent.zoom.maxZoom);\n          this._map.setMinZoom(this.extent.zoom.minZoom);\n        }\n      });\n    }).bind(this);\n    this.whenLayersReady().then(() => {\n      this._map.setMaxZoom(this.extent.zoom.maxZoom);\n      this._map.setMinZoom(this.extent.zoom.minZoom);\n      this._map.on('layeradd layerremove', setMapMinAndMaxZoom, this);\n    });\n    this.addEventListener('fullscreenchange', function (event) {\n      if (document.fullscreenElement === null) {\n        // full-screen mode has been exited\n        this._map.contextMenu.setViewFullScreenInnerHTML('view');\n      } else {\n        this._map.contextMenu.setViewFullScreenInnerHTML('exit');\n      }\n    });\n    this.addEventListener('keydown', function (event) {\n      if (document.activeElement.nodeName === 'MAPML-VIEWER') {\n        // Check if Ctrl+R is pressed and map is focused\n        if (event.ctrlKey && event.keyCode === 82) {\n          // Prevent default browser behavior\n          event.preventDefault();\n          this.reload();\n        } else if (event.altKey && event.keyCode === 39) {\n          // Prevent default browser behavior\n          event.preventDefault();\n          this.forward();\n        } else if (event.altKey && event.keyCode === 37) {\n          // Prevent default browser behavior\n          event.preventDefault();\n          this.back();\n        }\n      }\n    });\n  }\n\n  locate(options) {\n    //options: https://leafletjs.com/reference.html#locate-options\n    if (this._geolocationButton) {\n      this._geolocationButton.stop();\n    }\n    if (options) {\n      if (options.zoomTo) {\n        options.setView = options.zoomTo;\n        delete options.zoomTo;\n      }\n      this._map.locate(options);\n    } else {\n      this._map.locate({ setView: true, maxZoom: 16 });\n    }\n  }\n\n  toggleDebug() {\n    if (this._debug) {\n      this._debug.remove();\n      this._debug = undefined;\n    } else {\n      this._debug = M.debugOverlay().addTo(this._map);\n    }\n  }\n\n  _changeWidth(width) {\n    if (this._container) {\n      this._container.style.width = width + 'px';\n      this.shadowRoot.styleSheets[0].cssRules[0].style.width = width + 'px';\n    }\n    if (this._map) {\n      this._map.invalidateSize(false);\n    }\n  }\n  _changeHeight(height) {\n    if (this._container) {\n      this._container.style.height = height + 'px';\n      this.shadowRoot.styleSheets[0].cssRules[0].style.height = height + 'px';\n    }\n    if (this._map) {\n      this._map.invalidateSize(false);\n    }\n  }\n  zoomTo(lat, lon, zoom) {\n    zoom = Number.isInteger(+zoom) ? +zoom : this.zoom;\n    let location = new L.LatLng(+lat, +lon);\n    this._map.setView(location, zoom);\n    this.zoom = zoom;\n    this.lat = location.lat;\n    this.lon = location.lng;\n  }\n  _updateMapCenter() {\n    // remember to tell Leaflet event handler that 'this' in here refers to\n    //  something other than the map in this case the custom polymer element\n    this.lat = this._map.getCenter().lat;\n    this.lon = this._map.getCenter().lng;\n    this.zoom = this._map.getZoom();\n  }\n  _resetHistory() {\n    this._history = [];\n    this._historyIndex = -1;\n    this._traversalCall = false;\n    // weird but ok\n    this._addToHistory();\n  }\n  /**\n   * Adds to the maps history on moveends\n   * @private\n   */\n  _addToHistory() {\n    if (this._traversalCall > 0) {\n      // this._traversalCall tracks how many consecutive moveends to ignore from history\n      this._traversalCall--; // this is useful for ignoring moveends corresponding to back, forward and reload\n      return;\n    }\n\n    let mapLocation = this._map.getPixelBounds().getCenter();\n    let location = {\n      zoom: this._map.getZoom(),\n      x: mapLocation.x,\n      y: mapLocation.y\n    };\n    this._historyIndex++;\n    this._history.splice(this._historyIndex, 0, location);\n    // Remove future history and overwrite it when map pan/zoom while inside history\n    if (this._historyIndex + 1 !== this._history.length) {\n      this._history.length = this._historyIndex + 1;\n    }\n    if (this._historyIndex === 0) {\n      // when at initial state of map, disable back, forward, and reload items\n      this._map.contextMenu.toggleContextMenuItem('Back', 'disabled'); // back contextmenu item\n      this._map.contextMenu.toggleContextMenuItem('Forward', 'disabled'); // forward contextmenu item\n      this._map.contextMenu.toggleContextMenuItem('Reload', 'disabled'); // reload contextmenu item\n      this._reloadButton?.disable();\n    } else {\n      this._map.contextMenu.toggleContextMenuItem('Back', 'enabled'); // back contextmenu item\n      this._map.contextMenu.toggleContextMenuItem('Forward', 'disabled'); // forward contextmenu item\n      this._map.contextMenu.toggleContextMenuItem('Reload', 'enabled'); // reload contextmenu item\n      this._reloadButton?.enable();\n    }\n  }\n  /**\n   * Allow user to move back in history\n   */\n  back() {\n    let history = this._history;\n    let curr = history[this._historyIndex];\n\n    if (this._historyIndex > 0) {\n      this._map.contextMenu.toggleContextMenuItem('Forward', 'enabled'); // forward contextmenu item\n      this._historyIndex--;\n      let prev = history[this._historyIndex];\n      // Disable back, reload contextmenu item when at the end of history\n      if (this._historyIndex === 0) {\n        this._map.contextMenu.toggleContextMenuItem('Back', 'disabled'); // back contextmenu item\n        this._map.contextMenu.toggleContextMenuItem('Reload', 'disabled'); // reload contextmenu item\n        this._reloadButton?.disable();\n      }\n\n      if (prev.zoom !== curr.zoom) {\n        this._traversalCall = 2; // allows the next 2 moveends to be ignored from history\n\n        let currScale = this._map.options.crs.scale(curr.zoom); // gets the scale of the current zoom level\n        let prevScale = this._map.options.crs.scale(prev.zoom); // gets the scale of the previous zoom level\n\n        let scale = currScale / prevScale; // used to convert the previous pixel location to be in terms of the current zoom level\n\n        this._map.panBy([prev.x * scale - curr.x, prev.y * scale - curr.y], {\n          animate: false\n        });\n        this._map.setZoom(prev.zoom);\n      } else {\n        this._traversalCall = 1;\n        this._map.panBy([prev.x - curr.x, prev.y - curr.y]);\n      }\n    }\n  }\n\n  /**\n   * Allows user to move forward in history\n   */\n  forward() {\n    let history = this._history;\n    let curr = history[this._historyIndex];\n    if (this._historyIndex < history.length - 1) {\n      this._map.contextMenu.toggleContextMenuItem('Back', 'enabled'); // back contextmenu item\n      this._map.contextMenu.toggleContextMenuItem('Reload', 'enabled'); // reload contextmenu item\n      this._reloadButton?.enable();\n      this._historyIndex++;\n      let next = history[this._historyIndex];\n      // disable forward contextmenu item, when at the end of forward history\n      if (this._historyIndex + 1 === this._history.length) {\n        this._map.contextMenu.toggleContextMenuItem('Forward', 'disabled'); // forward contextmenu item\n      }\n\n      if (next.zoom !== curr.zoom) {\n        this._traversalCall = 2; // allows the next 2 moveends to be ignored from history\n\n        let currScale = this._map.options.crs.scale(curr.zoom); // gets the scale of the current zoom level\n        let nextScale = this._map.options.crs.scale(next.zoom); // gets the scale of the next zoom level\n\n        let scale = currScale / nextScale; // used to convert the next pixel location to be in terms of the current zoom level\n\n        this._map.panBy([next.x * scale - curr.x, next.y * scale - curr.y], {\n          animate: false\n        });\n        this._map.setZoom(next.zoom);\n      } else {\n        this._traversalCall = 1;\n        this._map.panBy([next.x - curr.x, next.y - curr.y]);\n      }\n    }\n  }\n\n  /**\n   * Allows the user to reload/reset the map's location to it's initial location\n   */\n  reload() {\n    let initialLocation = this._history.shift();\n    let mapLocation = this._map.getPixelBounds().getCenter();\n    let curr = {\n      zoom: this._map.getZoom(),\n      x: mapLocation.x,\n      y: mapLocation.y\n    };\n\n    this._map.contextMenu.toggleContextMenuItem('Back', 'disabled'); // back contextmenu item\n    this._map.contextMenu.toggleContextMenuItem('Forward', 'disabled'); // forward contextmenu item\n    this._map.contextMenu.toggleContextMenuItem('Reload', 'disabled'); // reload contextmenu item\n    this._reloadButton?.disable();\n\n    this._history = [initialLocation];\n    this._historyIndex = 0;\n\n    if (initialLocation.zoom !== curr.zoom) {\n      this._traversalCall = 2; // ignores the next 2 moveend events\n\n      let currScale = this._map.options.crs.scale(curr.zoom); // gets the scale of the current zoom level\n      let initScale = this._map.options.crs.scale(initialLocation.zoom); // gets the scale of the initial location's zoom\n\n      let scale = currScale / initScale;\n\n      this._map.panBy(\n        [\n          initialLocation.x * scale - curr.x,\n          initialLocation.y * scale - curr.y\n        ],\n        { animate: false }\n      );\n      this._map.setZoom(initialLocation.zoom);\n    } else {\n      // if it's on the same zoom level as the initial location, no need to calculate scales\n      this._traversalCall = 1;\n      this._map.panBy([initialLocation.x - curr.x, initialLocation.y - curr.y]);\n    }\n    this._map.getContainer().focus();\n  }\n\n  _toggleFullScreen() {\n    this._map.toggleFullscreen();\n  }\n\n  viewSource() {\n    let blob = new Blob([this._source], { type: 'text/plain' }),\n      url = URL.createObjectURL(blob);\n    window.open(url);\n    URL.revokeObjectURL(url);\n  }\n\n  defineCustomProjection(jsonTemplate) {\n    let t = JSON.parse(jsonTemplate);\n    if (\n      t === undefined ||\n      !t.proj4string ||\n      !t.projection ||\n      !t.resolutions ||\n      !t.origin ||\n      !t.bounds\n    )\n      throw new Error('Incomplete TCRS Definition');\n    if (t.projection.indexOf(':') >= 0)\n      throw new Error('\":\" is not permitted in projection name');\n    if (M[t.projection.toUpperCase()]) return t.projection.toUpperCase();\n    let tileSize = [256, 512, 1024, 2048, 4096].includes(t.tilesize)\n      ? t.tilesize\n      : M.TILE_SIZE;\n\n    M[t.projection] = new L.Proj.CRS(t.projection, t.proj4string, {\n      origin: t.origin,\n      resolutions: t.resolutions,\n      bounds: L.bounds(t.bounds),\n      crs: {\n        tcrs: {\n          horizontal: {\n            name: 'x',\n            min: 0,\n            max: (zoom) =>\n              Math.round(\n                M[t.projection].options.bounds.getSize().x /\n                  M[t.projection].options.resolutions[zoom]\n              )\n          },\n          vertical: {\n            name: 'y',\n            min: 0,\n            max: (zoom) =>\n              Math.round(\n                M[t.projection].options.bounds.getSize().y /\n                  M[t.projection].options.resolutions[zoom]\n              )\n          },\n          bounds: (zoom) =>\n            L.bounds(\n              [\n                M[t.projection].options.crs.tcrs.horizontal.min,\n                M[t.projection].options.crs.tcrs.vertical.min\n              ],\n              [\n                M[t.projection].options.crs.tcrs.horizontal.max(zoom),\n                M[t.projection].options.crs.tcrs.vertical.max(zoom)\n              ]\n            )\n        },\n        pcrs: {\n          horizontal: {\n            name: 'easting',\n            get min() {\n              return M[t.projection].options.bounds.min.x;\n            },\n            get max() {\n              return M[t.projection].options.bounds.max.x;\n            }\n          },\n          vertical: {\n            name: 'northing',\n            get min() {\n              return M[t.projection].options.bounds.min.y;\n            },\n            get max() {\n              return M[t.projection].options.bounds.max.y;\n            }\n          },\n          get bounds() {\n            return M[t.projection].options.bounds;\n          }\n        },\n        gcrs: {\n          horizontal: {\n            name: 'longitude',\n            // set min/max axis values from EPSG registry area of use, retrieved 2019-07-25\n            get min() {\n              return M[t.projection].unproject(M.OSMTILE.options.bounds.min)\n                .lng;\n            },\n            get max() {\n              return M[t.projection].unproject(M.OSMTILE.options.bounds.max)\n                .lng;\n            }\n          },\n          vertical: {\n            name: 'latitude',\n            // set min/max axis values from EPSG registry area of use, retrieved 2019-07-25\n            get min() {\n              return M[t.projection].unproject(M.OSMTILE.options.bounds.min)\n                .lat;\n            },\n            get max() {\n              return M[t.projection].unproject(M.OSMTILE.options.bounds.max)\n                .lat;\n            }\n          },\n          get bounds() {\n            return L.latLngBounds(\n              [\n                M[t.projection].options.crs.gcrs.vertical.min,\n                M[t.projection].options.crs.gcrs.horizontal.min\n              ],\n              [\n                M[t.projection].options.crs.gcrs.vertical.max,\n                M[t.projection].options.crs.gcrs.horizontal.max\n              ]\n            );\n          }\n        },\n        map: {\n          horizontal: {\n            name: 'i',\n            min: 0,\n            max: (map) => map.getSize().x\n          },\n          vertical: {\n            name: 'j',\n            min: 0,\n            max: (map) => map.getSize().y\n          },\n          bounds: (map) => L.bounds(L.point([0, 0]), map.getSize())\n        },\n        tile: {\n          horizontal: {\n            name: 'i',\n            min: 0,\n            max: tileSize\n          },\n          vertical: {\n            name: 'j',\n            min: 0,\n            max: tileSize\n          },\n          get bounds() {\n            return L.bounds(\n              [\n                M[t.projection].options.crs.tile.horizontal.min,\n                M[t.projection].options.crs.tile.vertical.min\n              ],\n              [\n                M[t.projection].options.crs.tile.horizontal.max,\n                M[t.projection].options.crs.tile.vertical.max\n              ]\n            );\n          }\n        },\n        tilematrix: {\n          horizontal: {\n            name: 'column',\n            min: 0,\n            max: (zoom) =>\n              Math.round(\n                M[t.projection].options.crs.tcrs.horizontal.max(zoom) /\n                  M[t.projection].options.crs.tile.bounds.getSize().x\n              )\n          },\n          vertical: {\n            name: 'row',\n            min: 0,\n            max: (zoom) =>\n              Math.round(\n                M[t.projection].options.crs.tcrs.vertical.max(zoom) /\n                  M[t.projection].options.crs.tile.bounds.getSize().y\n              )\n          },\n          bounds: (zoom) =>\n            L.bounds(\n              [\n                M[t.projection].options.crs.tilematrix.horizontal.min,\n                M[t.projection].options.crs.tilematrix.vertical.min\n              ],\n              [\n                M[t.projection].options.crs.tilematrix.horizontal.max(zoom),\n                M[t.projection].options.crs.tilematrix.vertical.max(zoom)\n              ]\n            )\n        }\n      }\n    }); //creates crs using L.Proj\n    M[t.projection.toUpperCase()] = M[t.projection]; //adds the projection uppercase to global M\n    return t.projection;\n  }\n  whenReady() {\n    return new Promise((resolve, reject) => {\n      let interval, failureTimer;\n      if (this._map) {\n        resolve();\n      } else {\n        let viewer = this;\n        interval = setInterval(testForMap, 200, viewer);\n        failureTimer = setTimeout(mapNotDefined, 5000);\n      }\n      function testForMap(viewer) {\n        if (viewer._map) {\n          clearInterval(interval);\n          clearTimeout(failureTimer);\n          resolve();\n        }\n      }\n      function mapNotDefined() {\n        clearInterval(interval);\n        clearTimeout(failureTimer);\n        reject('Timeout reached waiting for map to be ready');\n      }\n    });\n  }\n  whenLayersReady() {\n    let layersReady = [];\n    // check if all the children elements (map-extent, map-feature) of all layer- are ready\n    for (let layer of [...this.layers]) {\n      layersReady.push(layer.whenReady());\n    }\n    return Promise.allSettled(layersReady);\n  }\n  whenProjectionDefined(projection) {\n    return new Promise((resolve, reject) => {\n      let interval, failureTimer;\n      if (M[projection]) {\n        resolve();\n      } else {\n        interval = setInterval(testForProjection, 200, projection);\n        failureTimer = setTimeout(projectionNotDefined, 5000);\n      }\n      function testForProjection(p) {\n        if (M[p]) {\n          clearInterval(interval);\n          clearTimeout(failureTimer);\n          resolve();\n        }\n      }\n      function projectionNotDefined() {\n        clearInterval(interval);\n        clearTimeout(failureTimer);\n        reject('Timeout reached waiting for projection to be defined');\n      }\n    });\n  }\n  geojson2mapml(json, options = {}) {\n    if (options.projection === undefined) {\n      options.projection = this.projection;\n    }\n    let geojsonLayer = M.geojson2mapml(json, options);\n    this.appendChild(geojsonLayer);\n    return geojsonLayer;\n  }\n}\n// need to provide options { extends: ... }  for custom built-in elements\nwindow.customElements.define('mapml-viewer', MapViewer);\nwindow.customElements.define('layer-', MapLayer);\nwindow.customElements.define('map-caption', MapCaption);\nwindow.customElements.define('map-feature', MapFeature);\nwindow.customElements.define('map-extent', MapExtent);\nwindow.customElements.define('map-input', MapInput);\nwindow.customElements.define('map-select', MapSelect);\nwindow.customElements.define('map-link', MapLink);\nwindow.customElements.define('map-style', MapStyle);\n"],"names":["MapLayer","MapCaption","MapFeature","MapExtent","MapInput","MapSelect","MapLink","MapStyle","MapViewer","HTMLElement","observedAttributes","controls","this","hasAttribute","value","Boolean","setAttribute","removeAttribute","controlsList","_controlsList","width","window","getComputedStyle","replace","val","height","lat","getAttribute","lon","projection","whenProjectionDefined","then","catch","Error","zoom","parsedVal","parseInt","isNaN","layers","getElementsByTagName","extent","let","map","_map","pcrsBounds","M","pixelToPCRSBounds","getPixelBounds","getZoom","options","formattedExtent","_convertAndFormatPCRS","crs","minZoom","Infinity","maxZoom","i","length","getMinZoom","getMaxZoom","static","constructor","super","_source","outerHTML","_history","_historyIndex","_traversalCall","connectedCallback","_initShadowRoot","DOMTokenList","s","wpx","hpx","w","h","_changeWidth","_changeHeight","_createMap","_toggleStatic","mapcaption","querySelector","setTimeout","innerHTML","mapCaptionObserver","MutationObserver","observe","childList","shadowRoot","attachShadow","mode","tmpl","document","createElement","URL","import","meta","url","href","_container","insertAdjacentHTML","mapDefaultCSS","hideElementsCSS","appendChild","content","cloneNode","L","center","LatLng","resolutions","query","contextMenu","announceMovement","featureIndex","mapEl","zoomControl","_addToHistory","_createControls","_toggleControls","_crosshair","crosshair","addTo","featureIndexOverlayOption","_featureIndexOverlay","featureIndexOverlay","_setUpEvents","disconnectedCallback","_removeEvents","firstChild","removeChild","_deleteControls","adoptedCallback","attributeChangedCallback","name","oldValue","newValue","valueSet","_hideControls","_showControls","connect","layersReady","disable","layer","querySelectorAll","reAttach","push","whenReady","Promise","allSettled","zoomTo","enable","dispatchEvent","CustomEvent","bind","_resetHistory","_debug","toggleDebug","mapSize","getSize","y","totalSize","_layerControl","layerControl","collapsed","scaleValue","announceScale","metric","imperial","_scaleBar","scaleBar","_zoomControl","control","_reloadButton","reloadButton","_fullScreenControl","fullscreenButton","_geolocationButton","geolocationButton","toggleContextMenuItem","_setControlsVisibility","forEach","toLowerCase","_layers","hide","container","children","childEl","isStatic","dragging","touchZoom","doubleClickZoom","scrollWheelZoom","boxZoom","keyboard","_dropHandler","event","preventDefault","text","dataTransfer","getData","_pasteLayer","_dragoverHandler","dropEffect","off","removeEventListener","addEventListener","e","target","tagName","details","originalEvent","parentElement","keyCode","activeElement","nodeName","detail","ctrlKey","navigator","clipboard","readText","fire","on","latlng","accuracy","error","message","lng","x","containerPoint","_updateMapCenter","setMapMinAndMaxZoom","whenLayersReady","_layerEl","setMaxZoom","setMinZoom","fullscreenElement","setViewFullScreenInnerHTML","reload","altKey","forward","back","locate","stop","setView","remove","undefined","debugOverlay","style","styleSheets","cssRules","invalidateSize","Number","isInteger","location","getCenter","mapLocation","splice","prev","history","curr","scale","panBy","animate","setZoom","next","initialLocation","shift","getContainer","focus","_toggleFullScreen","toggleFullscreen","viewSource","blob","Blob","type","createObjectURL","open","revokeObjectURL","defineCustomProjection","jsonTemplate","t","JSON","parse","proj4string","origin","bounds","indexOf","toUpperCase","tileSize","includes","tilesize","TILE_SIZE","Proj","CRS","tcrs","horizontal","min","max","Math","round","vertical","pcrs","gcrs","unproject","OSMTILE","latLngBounds","point","tile","tilematrix","resolve","reject","interval","failureTimer","setInterval","viewer","clearInterval","clearTimeout","p","geojson2mapml","json","geojsonLayer","customElements","define"],"mappings":"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"}