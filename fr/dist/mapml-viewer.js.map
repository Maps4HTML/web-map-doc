{"version":3,"file":"mapml-viewer.js","sources":["../src/mapml-viewer.js"],"sourcesContent":["import './leaflet.js'; // bundled with proj4, proj4leaflet, modularized\nimport './mapml.js';\nimport DOMTokenList from './DOMTokenList.js';\nimport { MapLayer } from './layer.js';\nimport { MapCaption } from './map-caption.js';\nimport { MapFeature } from './map-feature.js';\nimport { MapExtent } from './map-extent.js';\n\nexport class MapViewer extends HTMLElement {\n  static get observedAttributes() {\n    return [\n      'lat',\n      'lon',\n      'zoom',\n      'projection',\n      'width',\n      'height',\n      'controls',\n      'static',\n      'controlslist'\n    ];\n  }\n  // see comments below regarding attributeChangedCallback vs. getter/setter\n  // usage.  Effectively, the user of the element must use the property, not\n  // the getAttribute/setAttribute/removeAttribute DOM API, because the latter\n  // calls don't result in the getter/setter being called (so you have to use\n  // the getter/setter directly)\n  get controls() {\n    return this.hasAttribute('controls');\n  }\n  set controls(value) {\n    const hasControls = Boolean(value);\n    if (hasControls) {\n      this.setAttribute('controls', '');\n    } else {\n      this.removeAttribute('controls');\n    }\n  }\n  get controlsList() {\n    return this._controlsList;\n  }\n  set controlsList(value) {\n    this._controlsList.value = value;\n    this.setAttribute('controlslist', value);\n  }\n  get width() {\n    return window.getComputedStyle(this).width.replace('px', '');\n  }\n  set width(val) {\n    //img.height or img.width setters change or add the corresponding attributes\n    this.setAttribute('width', val);\n  }\n  get height() {\n    return window.getComputedStyle(this).height.replace('px', '');\n  }\n  set height(val) {\n    //img.height or img.width setters change or add the corresponding attributes\n    this.setAttribute('height', val);\n  }\n  get lat() {\n    return this.hasAttribute('lat') ? this.getAttribute('lat') : '0';\n  }\n  set lat(val) {\n    if (val) {\n      this.setAttribute('lat', val);\n    }\n  }\n  get lon() {\n    return this.hasAttribute('lon') ? this.getAttribute('lon') : '0';\n  }\n  set lon(val) {\n    if (val) {\n      this.setAttribute('lon', val);\n    }\n  }\n  get projection() {\n    return this.hasAttribute('projection')\n      ? this.getAttribute('projection')\n      : 'OSMTILE';\n  }\n  set projection(val) {\n    if (val) {\n      this.whenProjectionDefined(val)\n        .then(() => {\n          this.setAttribute('projection', val);\n        })\n        .catch(() => {\n          throw new Error('Undefined projection:' + val);\n        });\n    }\n  }\n  get zoom() {\n    return this.hasAttribute('zoom') ? this.getAttribute('zoom') : 0;\n  }\n  set zoom(val) {\n    var parsedVal = parseInt(val, 10);\n    if (!isNaN(parsedVal) && parsedVal >= 0 && parsedVal <= 25) {\n      this.setAttribute('zoom', parsedVal);\n    }\n  }\n  get layers() {\n    return this.getElementsByTagName('layer-');\n  }\n\n  get extent() {\n    let map = this._map,\n      pcrsBounds = M.pixelToPCRSBounds(\n        map.getPixelBounds(),\n        map.getZoom(),\n        map.options.projection\n      );\n    let formattedExtent = M._convertAndFormatPCRS(\n      pcrsBounds,\n      map.options.crs,\n      this.projection\n    );\n    if (map.getMaxZoom() !== Infinity) {\n      formattedExtent.zoom = {\n        minZoom: map.getMinZoom(),\n        maxZoom: map.getMaxZoom()\n      };\n    }\n    return formattedExtent;\n  }\n  get static() {\n    return this.hasAttribute('static');\n  }\n  set static(value) {\n    const isStatic = Boolean(value);\n    if (isStatic) this.setAttribute('static', '');\n    else this.removeAttribute('static');\n  }\n\n  constructor() {\n    // Always call super first in constructor\n    super();\n    this._source = this.outerHTML;\n    // create an array to track the history of the map and the current index\n    this._history = [];\n    this._historyIndex = -1;\n    this._traversalCall = false;\n  }\n  connectedCallback() {\n    this.whenProjectionDefined(this.projection)\n      .then(() => {\n        this._initShadowRoot();\n\n        this._controlsList = new DOMTokenList(\n          this.getAttribute('controlslist'),\n          this,\n          'controlslist',\n          [\n            'noreload',\n            'nofullscreen',\n            'nozoom',\n            'nolayer',\n            'noscale',\n            'geolocation'\n          ]\n        );\n\n        var s = window.getComputedStyle(this),\n          wpx = s.width,\n          hpx = s.height,\n          w = this.hasAttribute('width')\n            ? this.getAttribute('width')\n            : parseInt(wpx.replace('px', '')),\n          h = this.hasAttribute('height')\n            ? this.getAttribute('height')\n            : parseInt(hpx.replace('px', ''));\n        this._changeWidth(w);\n        this._changeHeight(h);\n\n        this._createMap();\n\n        // https://github.com/Maps4HTML/Web-Map-Custom-Element/issues/274\n        this.setAttribute('role', 'application');\n        this._toggleStatic();\n\n        /*\n      1. only deletes aria-label when the last (only remaining) map caption is removed\n      2. only deletes aria-label if the aria-label was defined by the map caption element itself\n      */\n\n        let mapcaption = this.querySelector('map-caption');\n\n        if (mapcaption !== null) {\n          setTimeout(() => {\n            let ariaupdate = this.getAttribute('aria-label');\n\n            if (ariaupdate === mapcaption.innerHTML) {\n              this.mapCaptionObserver = new MutationObserver((m) => {\n                let mapcaptionupdate = this.querySelector('map-caption');\n                if (mapcaptionupdate !== mapcaption) {\n                  this.removeAttribute('aria-label');\n                }\n              });\n              this.mapCaptionObserver.observe(this, {\n                childList: true\n              });\n            }\n          }, 0);\n        }\n      })\n      .catch(() => {\n        throw new Error('Projection not defined');\n      });\n  }\n  _initShadowRoot() {\n    if (!this.shadowRoot) {\n      this.attachShadow({ mode: 'open' });\n    }\n    let tmpl = document.createElement('template');\n    /* jshint ignore:start */\n    tmpl.innerHTML = `<link rel=\"stylesheet\" href=\"${\n      new URL('mapml.css', import.meta.url).href\n    }\">`;\n    /* jshint ignore:end */\n\n    let shadowRoot = this.shadowRoot;\n    this._container = document.createElement('div');\n\n    let output =\n      \"<output role='status' aria-live='polite' aria-atomic='true' class='mapml-screen-reader-output'></output>\";\n    this._container.insertAdjacentHTML('beforeend', output);\n\n    // Set default styles for the map element.\n    let mapDefaultCSS = document.createElement('style');\n    mapDefaultCSS.innerHTML =\n      `:host {` +\n      `all: initial;` + // Reset properties inheritable from html/body, as some inherited styles may cause unexpected issues with the map element's components (https://github.com/Maps4HTML/Web-Map-Custom-Element/issues/140).\n      `contain: layout size;` + // Contain layout and size calculations within the map element.\n      `display: inline-block;` + // This together with dimension properties is required so that Leaflet isn't working with a height=0 box by default.\n      `height: 150px;` + // Provide a \"default object size\" (https://github.com/Maps4HTML/HTML-Map-Element/issues/31).\n      `width: 300px;` +\n      `border-width: 2px;` + // Set a default border for contrast, similar to UA default for iframes.\n      `border-style: inset;` +\n      `}` +\n      `:host([frameborder=\"0\"]) {` +\n      `border-width: 0;` +\n      `}` +\n      `:host([hidden]) {` +\n      `display: none!important;` +\n      `}` +\n      `:host .leaflet-control-container {` +\n      `visibility: hidden!important;` + // Visibility hack to improve percieved performance (mitigate FOUC) â€“ visibility is unset in mapml.css! (https://github.com/Maps4HTML/Web-Map-Custom-Element/issues/154).\n      `}`;\n\n    // Hide all (light DOM) children of the map element.\n    let hideElementsCSS = document.createElement('style');\n    hideElementsCSS.innerHTML =\n      `mapml-viewer > * {` + `display: none!important;` + `}`;\n    this.appendChild(hideElementsCSS);\n\n    // Make the Leaflet container element programmatically identifiable\n    // (https://github.com/Leaflet/Leaflet/issues/7193).\n    this._container.setAttribute('role', 'region');\n    this._container.setAttribute('aria-label', 'Interactive map');\n\n    shadowRoot.appendChild(mapDefaultCSS);\n    shadowRoot.appendChild(tmpl.content.cloneNode(true));\n    shadowRoot.appendChild(this._container);\n  }\n  _createMap() {\n    if (!this._map) {\n      this._map = L.map(this._container, {\n        center: new L.LatLng(this.lat, this.lon),\n        projection: this.projection,\n        query: true,\n        contextMenu: true,\n        announceMovement: M.options.announceMovement,\n        featureIndex: true,\n        mapEl: this,\n        crs: M[this.projection],\n        zoom: this.zoom,\n        zoomControl: false\n      });\n      this._addToHistory();\n\n      this._createControls();\n      this._toggleControls();\n      this._crosshair = M.crosshair().addTo(this._map);\n\n      if (M.options.featureIndexOverlayOption)\n        this._featureIndexOverlay = M.featureIndexOverlay().addTo(this._map);\n\n      this._setUpEvents();\n    }\n  }\n  disconnectedCallback() {\n    while (this.shadowRoot.firstChild) {\n      this.shadowRoot.removeChild(this.shadowRoot.firstChild);\n    }\n    delete this._map;\n    this._deleteControls();\n  }\n  adoptedCallback() {\n    //    console.log('Custom map element moved to new page.');\n  }\n\n  attributeChangedCallback(name, oldValue, newValue) {\n    //    console.log('Attribute: ' + name + ' changed from: '+ oldValue + ' to: '+newValue);\n    // \"Best practice\": handle side-effects in this callback\n    // https://developers.google.com/web/fundamentals/web-components/best-practices\n    // https://developers.google.com/web/fundamentals/web-components/best-practices#avoid-reentrancy\n    // note that the example is misleading, since the user can't use\n    // setAttribute or removeAttribute to set the property, they need to use\n    // the property directly in their API usage, which kinda sucks\n    /*\n  const hasValue = newValue !== null;\n  switch (name) {\n    case 'checked':\n      // Note the attributeChangedCallback is only handling the *side effects*\n      // of setting the attribute.\n      this.setAttribute('aria-checked', hasValue);\n      break;\n    ...\n  }     */\n    switch (name) {\n      case 'controlslist':\n        if (this._controlsList) {\n          if (this._controlsList.valueSet === false) {\n            this._controlsList.value = newValue;\n          }\n          this._toggleControls();\n        }\n        break;\n      case 'controls':\n        if (oldValue !== null && newValue === null) {\n          this._hideControls();\n        } else if (oldValue === null && newValue !== null) {\n          this._showControls();\n        }\n        break;\n      case 'height':\n        if (oldValue !== newValue) {\n          this._changeHeight(newValue);\n        }\n        break;\n      case 'width':\n        if (oldValue !== newValue) {\n          this._changeWidth(newValue);\n        }\n        break;\n      case 'static':\n        this._toggleStatic();\n        break;\n      case 'projection':\n        const reconnectLayers = () => {\n          if (this._map && this._map.options.projection !== newValue) {\n            // save map location and zoom\n            let lat = this.lat;\n            let lon = this.lon;\n            let zoom = this.zoom;\n            // saving the lat, lon and zoom is necessary because Leaflet seems\n            // to try to compensate for the change in the scales for each zoom\n            // level in the crs by changing the zoom level of the map when\n            // you set the map crs.  So, we save the current view for use below\n            // when all the layers' reconnections have settled.\n            this._map.options.crs = M[newValue];\n            this._map.options.projection = newValue;\n            let layersReady = [];\n            this._map.announceMovement.disable();\n            for (let layer of this.querySelectorAll('layer-')) {\n              layer.removeAttribute('disabled');\n              let reAttach = this.removeChild(layer);\n              this.appendChild(reAttach);\n              layersReady.push(reAttach.whenReady());\n            }\n            Promise.allSettled(layersReady).then(() => {\n              // use the saved map location to ensure it is correct after\n              // changing the map CRS.  Specifically affects projection\n              // upgrades, e.g. https://maps4html.org/experiments/custom-projections/BNG/\n              this.zoomTo(lat, lon, zoom);\n              this._resetHistory();\n              this._map.announceMovement.enable();\n            });\n          }\n        };\n        if (newValue) {\n          const connect = reconnectLayers.bind(this);\n          new Promise((resolve, reject) => {\n            connect();\n            resolve();\n          }).then(() => {\n            if (this._debug) for (let i = 0; i < 2; i++) this.toggleDebug();\n          });\n        }\n        break;\n    }\n  }\n\n  // Creates All map controls and adds them to the map, when created.\n  _createControls() {\n    let mapSize = this._map.getSize().y,\n      totalSize = 0;\n\n    this._layerControl = M.layerControl(null, {\n      collapsed: true,\n      mapEl: this\n    }).addTo(this._map);\n\n    let scaleValue = M.options.announceScale;\n\n    if (scaleValue === 'metric') {\n      scaleValue = { metric: true, imperial: false };\n    }\n    if (scaleValue === 'imperial') {\n      scaleValue = { metric: false, imperial: true };\n    }\n\n    if (!this._scaleBar)\n      this._scaleBar = M.scaleBar(scaleValue).addTo(this._map);\n\n    // Only add controls if there is enough top left vertical space\n    if (!this._zoomControl && totalSize + 93 <= mapSize) {\n      totalSize += 93;\n      this._zoomControl = L.control.zoom().addTo(this._map);\n    }\n    if (!this._reloadButton && totalSize + 49 <= mapSize) {\n      totalSize += 49;\n      this._reloadButton = M.reloadButton().addTo(this._map);\n    }\n    if (!this._fullScreenControl && totalSize + 49 <= mapSize) {\n      totalSize += 49;\n      this._fullScreenControl = M.fullscreenButton().addTo(this._map);\n    }\n\n    if (!this._geolocationButton) {\n      this._geolocationButton = M.geolocationButton().addTo(this._map);\n    }\n  }\n\n  // Sets controls by hiding/unhiding them based on the map attribute\n  _toggleControls() {\n    if (this.controls === false) {\n      this._hideControls();\n      this._map.contextMenu.toggleContextMenuItem('Controls', 'disabled');\n    } else {\n      this._showControls();\n      this._map.contextMenu.toggleContextMenuItem('Controls', 'enabled');\n    }\n  }\n\n  _hideControls() {\n    this._setControlsVisibility('fullscreen', true);\n    this._setControlsVisibility('layercontrol', true);\n    this._setControlsVisibility('reload', true);\n    this._setControlsVisibility('zoom', true);\n    this._setControlsVisibility('geolocation', true);\n    this._setControlsVisibility('scale', true);\n  }\n  _showControls() {\n    this._setControlsVisibility('fullscreen', false);\n    this._setControlsVisibility('layercontrol', false);\n    this._setControlsVisibility('reload', false);\n    this._setControlsVisibility('zoom', false);\n    this._setControlsVisibility('geolocation', true);\n    this._setControlsVisibility('scale', false);\n\n    // prune the controls shown if necessary\n    // this logic could be embedded in _showControls\n    // but would require being able to iterate the domain of supported tokens\n    // for the controlslist\n    if (this._controlsList) {\n      this._controlsList.forEach((value) => {\n        switch (value.toLowerCase()) {\n          case 'nofullscreen':\n            this._setControlsVisibility('fullscreen', true);\n            break;\n          case 'nolayer':\n            this._setControlsVisibility('layercontrol', true);\n            break;\n          case 'noreload':\n            this._setControlsVisibility('reload', true);\n            break;\n          case 'nozoom':\n            this._setControlsVisibility('zoom', true);\n            break;\n          case 'geolocation':\n            this._setControlsVisibility('geolocation', false);\n            break;\n          case 'noscale':\n            this._setControlsVisibility('scale', true);\n            break;\n        }\n      });\n    }\n    if (this._layerControl && this._layerControl._layers.length === 0) {\n      this._layerControl._container.setAttribute('hidden', '');\n    }\n  }\n\n  // delete the map controls that are private properties of this custom element\n  _deleteControls() {\n    delete this._layerControl;\n    delete this._zoomControl;\n    delete this._reloadButton;\n    delete this._fullScreenControl;\n    delete this._geolocationButton;\n    delete this._scaleBar;\n  }\n  // Sets the control's visibility AND all its childrens visibility,\n  // for the control element based on the Boolean hide parameter\n  _setControlsVisibility(control, hide) {\n    let container;\n    switch (control) {\n      case 'zoom':\n        if (this._zoomControl) {\n          container = this._zoomControl._container;\n        }\n        break;\n      case 'reload':\n        if (this._reloadButton) {\n          container = this._reloadButton._container;\n        }\n        break;\n      case 'fullscreen':\n        if (this._fullScreenControl) {\n          container = this._fullScreenControl._container;\n        }\n        break;\n      case 'layercontrol':\n        if (this._layerControl) {\n          container = this._layerControl._container;\n        }\n        break;\n      case 'geolocation':\n        if (this._geolocationButton) {\n          container = this._geolocationButton._container;\n        }\n        break;\n      case 'scale':\n        if (this._scaleBar) {\n          container = this._scaleBar._container;\n        }\n        break;\n    }\n    if (container) {\n      if (hide) {\n        // setting the visibility for all the children of the element\n        [...container.children].forEach((childEl) => {\n          childEl.setAttribute('hidden', '');\n        });\n        container.setAttribute('hidden', '');\n      } else {\n        // setting the visibility for all the children of the element\n        [...container.children].forEach((childEl) => {\n          childEl.removeAttribute('hidden');\n        });\n        container.removeAttribute('hidden');\n      }\n    }\n  }\n  _toggleStatic() {\n    const isStatic = this.hasAttribute('static');\n    if (this._map) {\n      if (isStatic) {\n        this._map.dragging.disable();\n        this._map.touchZoom.disable();\n        this._map.doubleClickZoom.disable();\n        this._map.scrollWheelZoom.disable();\n        this._map.boxZoom.disable();\n        this._map.keyboard.disable();\n        this._zoomControl.disable();\n      } else {\n        this._map.dragging.enable();\n        this._map.touchZoom.enable();\n        this._map.doubleClickZoom.enable();\n        this._map.scrollWheelZoom.enable();\n        this._map.boxZoom.enable();\n        this._map.keyboard.enable();\n        this._zoomControl.enable();\n      }\n    }\n  }\n\n  _dropHandler(event) {\n    event.preventDefault();\n    let text = event.dataTransfer.getData('text');\n    M._pasteLayer(this, text);\n  }\n  _dragoverHandler(event) {\n    event.preventDefault();\n    event.dataTransfer.dropEffect = 'copy';\n  }\n  _removeEvents() {\n    if (this._map) {\n      this._map.off();\n      this.removeEventListener('drop', this._dropHandler, false);\n      this.removeEventListener('dragover', this._dragoverHandler, false);\n    }\n  }\n  _setUpEvents() {\n    this.addEventListener('drop', this._dropHandler, false);\n    this.addEventListener('dragover', this._dragoverHandler, false);\n    this.addEventListener(\n      'change',\n      function (e) {\n        if (e.target.tagName === 'LAYER-') {\n          this.dispatchEvent(\n            new CustomEvent('layerchange', {\n              details: { target: this, originalEvent: e }\n            })\n          );\n        }\n      },\n      false\n    );\n\n    this.parentElement.addEventListener('keyup', function (e) {\n      if (\n        e.keyCode === 9 &&\n        document.activeElement.nodeName === 'MAPML-VIEWER'\n      ) {\n        document.activeElement.dispatchEvent(\n          new CustomEvent('mapfocused', { detail: { target: this } })\n        );\n      }\n    });\n    // pasting layer-, links and geojson using Ctrl+V\n    this.addEventListener('keydown', function (e) {\n      if (e.keyCode === 86 && e.ctrlKey) {\n        navigator.clipboard.readText().then((layer) => {\n          M._pasteLayer(this, layer);\n        });\n        // Prevents default spacebar event on all of mapml-viewer\n      } else if (\n        e.keyCode === 32 &&\n        this.shadowRoot.activeElement.nodeName !== 'INPUT'\n      ) {\n        e.preventDefault();\n        this._map.fire('keypress', { originalEvent: e });\n      }\n    });\n    this.parentElement.addEventListener('mousedown', function (e) {\n      if (document.activeElement.nodeName === 'MAPML-VIEWER') {\n        document.activeElement.dispatchEvent(\n          new CustomEvent('mapfocused', { detail: { target: this } })\n        );\n      }\n    });\n\n    this._map.on(\n      'locationfound',\n      function (e) {\n        this.dispatchEvent(\n          new CustomEvent('maplocationfound', {\n            detail: { latlng: e.latlng, accuracy: e.accuracy }\n          })\n        );\n      },\n      this\n    );\n    this._map.on(\n      'locationerror',\n      function (e) {\n        this.dispatchEvent(\n          new CustomEvent('locationerror', { detail: { error: e.message } })\n        );\n      },\n      this\n    );\n    this._map.on(\n      'load',\n      function () {\n        this.dispatchEvent(\n          new CustomEvent('load', { detail: { target: this } })\n        );\n      },\n      this\n    );\n    this._map.on(\n      'preclick',\n      function (e) {\n        this.dispatchEvent(\n          new CustomEvent('preclick', {\n            detail: {\n              lat: e.latlng.lat,\n              lon: e.latlng.lng,\n              x: e.containerPoint.x,\n              y: e.containerPoint.y\n            }\n          })\n        );\n      },\n      this\n    );\n    this._map.on(\n      'click',\n      function (e) {\n        this.dispatchEvent(\n          new CustomEvent('click', {\n            detail: {\n              lat: e.latlng.lat,\n              lon: e.latlng.lng,\n              x: e.containerPoint.x,\n              y: e.containerPoint.y\n            }\n          })\n        );\n      },\n      this\n    );\n    this._map.on(\n      'dblclick',\n      function (e) {\n        this.dispatchEvent(\n          new CustomEvent('dblclick', {\n            detail: {\n              lat: e.latlng.lat,\n              lon: e.latlng.lng,\n              x: e.containerPoint.x,\n              y: e.containerPoint.y\n            }\n          })\n        );\n      },\n      this\n    );\n    this._map.on(\n      'mousemove',\n      function (e) {\n        this.dispatchEvent(\n          new CustomEvent('mousemove', {\n            detail: {\n              lat: e.latlng.lat,\n              lon: e.latlng.lng,\n              x: e.containerPoint.x,\n              y: e.containerPoint.y\n            }\n          })\n        );\n      },\n      this\n    );\n    this._map.on(\n      'mouseover',\n      function (e) {\n        this.dispatchEvent(\n          new CustomEvent('mouseover', {\n            detail: {\n              lat: e.latlng.lat,\n              lon: e.latlng.lng,\n              x: e.containerPoint.x,\n              y: e.containerPoint.y\n            }\n          })\n        );\n      },\n      this\n    );\n    this._map.on(\n      'mouseout',\n      function (e) {\n        this.dispatchEvent(\n          new CustomEvent('mouseout', {\n            detail: {\n              lat: e.latlng.lat,\n              lon: e.latlng.lng,\n              x: e.containerPoint.x,\n              y: e.containerPoint.y\n            }\n          })\n        );\n      },\n      this\n    );\n    this._map.on(\n      'mousedown',\n      function (e) {\n        this.dispatchEvent(\n          new CustomEvent('mousedown', {\n            detail: {\n              lat: e.latlng.lat,\n              lon: e.latlng.lng,\n              x: e.containerPoint.x,\n              y: e.containerPoint.y\n            }\n          })\n        );\n      },\n      this\n    );\n    this._map.on(\n      'mouseup',\n      function (e) {\n        this.dispatchEvent(\n          new CustomEvent('mouseup', {\n            detail: {\n              lat: e.latlng.lat,\n              lon: e.latlng.lng,\n              x: e.containerPoint.x,\n              y: e.containerPoint.y\n            }\n          })\n        );\n      },\n      this\n    );\n    this._map.on(\n      'contextmenu',\n      function (e) {\n        this.dispatchEvent(\n          new CustomEvent('contextmenu', {\n            detail: {\n              lat: e.latlng.lat,\n              lon: e.latlng.lng,\n              x: e.containerPoint.x,\n              y: e.containerPoint.y\n            }\n          })\n        );\n      },\n      this\n    );\n    this._map.on(\n      'movestart',\n      function () {\n        this._updateMapCenter();\n        this.dispatchEvent(\n          new CustomEvent('movestart', { detail: { target: this } })\n        );\n      },\n      this\n    );\n    this._map.on(\n      'move',\n      function () {\n        this._updateMapCenter();\n        this.dispatchEvent(\n          new CustomEvent('move', { detail: { target: this } })\n        );\n      },\n      this\n    );\n    this._map.on(\n      'moveend',\n      function () {\n        this._updateMapCenter();\n        this._addToHistory();\n        this.dispatchEvent(\n          new CustomEvent('map-moveend', { detail: { target: this } })\n        );\n      },\n      this\n    );\n    this._map.on(\n      'zoomstart',\n      function () {\n        this._updateMapCenter();\n        this.dispatchEvent(\n          new CustomEvent('zoomstart', { detail: { target: this } })\n        );\n      },\n      this\n    );\n    this._map.on(\n      'zoom',\n      function () {\n        this._updateMapCenter();\n        this.dispatchEvent(\n          new CustomEvent('zoom', { detail: { target: this } })\n        );\n      },\n      this\n    );\n    this._map.on(\n      'zoomend',\n      function () {\n        this._updateMapCenter();\n        this.dispatchEvent(\n          new CustomEvent('zoomend', { detail: { target: this } })\n        );\n      },\n      this\n    );\n    this.addEventListener('fullscreenchange', function (event) {\n      if (document.fullscreenElement === null) {\n        // full-screen mode has been exited\n        this._map.contextMenu.setViewFullScreenInnerHTML('view');\n      } else {\n        this._map.contextMenu.setViewFullScreenInnerHTML('exit');\n      }\n    });\n    this.addEventListener('keydown', function (event) {\n      if (document.activeElement.nodeName === 'MAPML-VIEWER') {\n        // Check if Ctrl+R is pressed and map is focused\n        if (event.ctrlKey && event.keyCode === 82) {\n          // Prevent default browser behavior\n          event.preventDefault();\n          this.reload();\n        } else if (event.altKey && event.keyCode === 39) {\n          // Prevent default browser behavior\n          event.preventDefault();\n          this.forward();\n        } else if (event.altKey && event.keyCode === 37) {\n          // Prevent default browser behavior\n          event.preventDefault();\n          this.back();\n        }\n      }\n    });\n  }\n\n  locate(options) {\n    //options: https://leafletjs.com/reference.html#locate-options\n    if (this._geolocationButton) {\n      this._geolocationButton.stop();\n    }\n    if (options) {\n      if (options.zoomTo) {\n        options.setView = options.zoomTo;\n        delete options.zoomTo;\n      }\n      this._map.locate(options);\n    } else {\n      this._map.locate({ setView: true, maxZoom: 16 });\n    }\n  }\n\n  toggleDebug() {\n    if (this._debug) {\n      this._debug.remove();\n      this._debug = undefined;\n    } else {\n      this._debug = M.debugOverlay().addTo(this._map);\n    }\n  }\n\n  _changeWidth(width) {\n    if (this._container) {\n      this._container.style.width = width + 'px';\n      this.shadowRoot.styleSheets[0].cssRules[0].style.width = width + 'px';\n    }\n    if (this._map) {\n      this._map.invalidateSize(false);\n    }\n  }\n  _changeHeight(height) {\n    if (this._container) {\n      this._container.style.height = height + 'px';\n      this.shadowRoot.styleSheets[0].cssRules[0].style.height = height + 'px';\n    }\n    if (this._map) {\n      this._map.invalidateSize(false);\n    }\n  }\n  zoomTo(lat, lon, zoom) {\n    zoom = Number.isInteger(+zoom) ? +zoom : this.zoom;\n    let location = new L.LatLng(+lat, +lon);\n    this._map.setView(location, zoom);\n    this.zoom = zoom;\n    this.lat = location.lat;\n    this.lon = location.lng;\n  }\n  _updateMapCenter() {\n    // remember to tell Leaflet event handler that 'this' in here refers to\n    //  something other than the map in this case the custom polymer element\n    this.lat = this._map.getCenter().lat;\n    this.lon = this._map.getCenter().lng;\n    this.zoom = this._map.getZoom();\n  }\n  _resetHistory() {\n    this._history = [];\n    this._historyIndex = -1;\n    this._traversalCall = false;\n    // weird but ok\n    this._addToHistory();\n  }\n  /**\n   * Adds to the maps history on moveends\n   * @private\n   */\n  _addToHistory() {\n    if (this._traversalCall > 0) {\n      // this._traversalCall tracks how many consecutive moveends to ignore from history\n      this._traversalCall--; // this is useful for ignoring moveends corresponding to back, forward and reload\n      return;\n    }\n\n    let mapLocation = this._map.getPixelBounds().getCenter();\n    let location = {\n      zoom: this._map.getZoom(),\n      x: mapLocation.x,\n      y: mapLocation.y\n    };\n    this._historyIndex++;\n    this._history.splice(this._historyIndex, 0, location);\n    // Remove future history and overwrite it when map pan/zoom while inside history\n    if (this._historyIndex + 1 !== this._history.length) {\n      this._history.length = this._historyIndex + 1;\n    }\n    if (this._historyIndex === 0) {\n      // when at initial state of map, disable back, forward, and reload items\n      this._map.contextMenu.toggleContextMenuItem('Back', 'disabled'); // back contextmenu item\n      this._map.contextMenu.toggleContextMenuItem('Forward', 'disabled'); // forward contextmenu item\n      this._map.contextMenu.toggleContextMenuItem('Reload', 'disabled'); // reload contextmenu item\n      this._reloadButton?.disable();\n    } else {\n      this._map.contextMenu.toggleContextMenuItem('Back', 'enabled'); // back contextmenu item\n      this._map.contextMenu.toggleContextMenuItem('Forward', 'disabled'); // forward contextmenu item\n      this._map.contextMenu.toggleContextMenuItem('Reload', 'enabled'); // reload contextmenu item\n      this._reloadButton?.enable();\n    }\n  }\n  /**\n   * Allow user to move back in history\n   */\n  back() {\n    let history = this._history;\n    let curr = history[this._historyIndex];\n\n    if (this._historyIndex > 0) {\n      this._map.contextMenu.toggleContextMenuItem('Forward', 'enabled'); // forward contextmenu item\n      this._historyIndex--;\n      let prev = history[this._historyIndex];\n      // Disable back, reload contextmenu item when at the end of history\n      if (this._historyIndex === 0) {\n        this._map.contextMenu.toggleContextMenuItem('Back', 'disabled'); // back contextmenu item\n        this._map.contextMenu.toggleContextMenuItem('Reload', 'disabled'); // reload contextmenu item\n        this._reloadButton?.disable();\n      }\n\n      if (prev.zoom !== curr.zoom) {\n        this._traversalCall = 2; // allows the next 2 moveends to be ignored from history\n\n        let currScale = this._map.options.crs.scale(curr.zoom); // gets the scale of the current zoom level\n        let prevScale = this._map.options.crs.scale(prev.zoom); // gets the scale of the previous zoom level\n\n        let scale = currScale / prevScale; // used to convert the previous pixel location to be in terms of the current zoom level\n\n        this._map.panBy([prev.x * scale - curr.x, prev.y * scale - curr.y], {\n          animate: false\n        });\n        this._map.setZoom(prev.zoom);\n      } else {\n        this._traversalCall = 1;\n        this._map.panBy([prev.x - curr.x, prev.y - curr.y]);\n      }\n    }\n  }\n\n  /**\n   * Allows user to move forward in history\n   */\n  forward() {\n    let history = this._history;\n    let curr = history[this._historyIndex];\n    if (this._historyIndex < history.length - 1) {\n      this._map.contextMenu.toggleContextMenuItem('Back', 'enabled'); // back contextmenu item\n      this._map.contextMenu.toggleContextMenuItem('Reload', 'enabled'); // reload contextmenu item\n      this._reloadButton?.enable();\n      this._historyIndex++;\n      let next = history[this._historyIndex];\n      // disable forward contextmenu item, when at the end of forward history\n      if (this._historyIndex + 1 === this._history.length) {\n        this._map.contextMenu.toggleContextMenuItem('Forward', 'disabled'); // forward contextmenu item\n      }\n\n      if (next.zoom !== curr.zoom) {\n        this._traversalCall = 2; // allows the next 2 moveends to be ignored from history\n\n        let currScale = this._map.options.crs.scale(curr.zoom); // gets the scale of the current zoom level\n        let nextScale = this._map.options.crs.scale(next.zoom); // gets the scale of the next zoom level\n\n        let scale = currScale / nextScale; // used to convert the next pixel location to be in terms of the current zoom level\n\n        this._map.panBy([next.x * scale - curr.x, next.y * scale - curr.y], {\n          animate: false\n        });\n        this._map.setZoom(next.zoom);\n      } else {\n        this._traversalCall = 1;\n        this._map.panBy([next.x - curr.x, next.y - curr.y]);\n      }\n    }\n  }\n\n  /**\n   * Allows the user to reload/reset the map's location to it's initial location\n   */\n  reload() {\n    let initialLocation = this._history.shift();\n    let mapLocation = this._map.getPixelBounds().getCenter();\n    let curr = {\n      zoom: this._map.getZoom(),\n      x: mapLocation.x,\n      y: mapLocation.y\n    };\n\n    this._map.contextMenu.toggleContextMenuItem('Back', 'disabled'); // back contextmenu item\n    this._map.contextMenu.toggleContextMenuItem('Forward', 'disabled'); // forward contextmenu item\n    this._map.contextMenu.toggleContextMenuItem('Reload', 'disabled'); // reload contextmenu item\n    this._reloadButton?.disable();\n\n    this._history = [initialLocation];\n    this._historyIndex = 0;\n\n    if (initialLocation.zoom !== curr.zoom) {\n      this._traversalCall = 2; // ignores the next 2 moveend events\n\n      let currScale = this._map.options.crs.scale(curr.zoom); // gets the scale of the current zoom level\n      let initScale = this._map.options.crs.scale(initialLocation.zoom); // gets the scale of the initial location's zoom\n\n      let scale = currScale / initScale;\n\n      this._map.panBy(\n        [\n          initialLocation.x * scale - curr.x,\n          initialLocation.y * scale - curr.y\n        ],\n        { animate: false }\n      );\n      this._map.setZoom(initialLocation.zoom);\n    } else {\n      // if it's on the same zoom level as the initial location, no need to calculate scales\n      this._traversalCall = 1;\n      this._map.panBy([initialLocation.x - curr.x, initialLocation.y - curr.y]);\n    }\n    this._map.getContainer().focus();\n  }\n\n  _toggleFullScreen() {\n    this._map.toggleFullscreen();\n  }\n\n  viewSource() {\n    let blob = new Blob([this._source], { type: 'text/plain' }),\n      url = URL.createObjectURL(blob);\n    window.open(url);\n    URL.revokeObjectURL(url);\n  }\n\n  defineCustomProjection(jsonTemplate) {\n    let t = JSON.parse(jsonTemplate);\n    if (\n      t === undefined ||\n      !t.proj4string ||\n      !t.projection ||\n      !t.resolutions ||\n      !t.origin ||\n      !t.bounds\n    )\n      throw new Error('Incomplete TCRS Definition');\n    if (t.projection.indexOf(':') >= 0)\n      throw new Error('\":\" is not permitted in projection name');\n    if (M[t.projection.toUpperCase()]) return t.projection.toUpperCase();\n    let tileSize = [256, 512, 1024, 2048, 4096].includes(t.tilesize)\n      ? t.tilesize\n      : 256;\n\n    M[t.projection] = new L.Proj.CRS(t.projection, t.proj4string, {\n      origin: t.origin,\n      resolutions: t.resolutions,\n      bounds: L.bounds(t.bounds),\n      crs: {\n        tcrs: {\n          horizontal: {\n            name: 'x',\n            min: 0,\n            max: (zoom) =>\n              Math.round(\n                M[t.projection].options.bounds.getSize().x /\n                  M[t.projection].options.resolutions[zoom]\n              )\n          },\n          vertical: {\n            name: 'y',\n            min: 0,\n            max: (zoom) =>\n              Math.round(\n                M[t.projection].options.bounds.getSize().y /\n                  M[t.projection].options.resolutions[zoom]\n              )\n          },\n          bounds: (zoom) =>\n            L.bounds(\n              [\n                M[t.projection].options.crs.tcrs.horizontal.min,\n                M[t.projection].options.crs.tcrs.vertical.min\n              ],\n              [\n                M[t.projection].options.crs.tcrs.horizontal.max(zoom),\n                M[t.projection].options.crs.tcrs.vertical.max(zoom)\n              ]\n            )\n        },\n        pcrs: {\n          horizontal: {\n            name: 'easting',\n            get min() {\n              return M[t.projection].options.bounds.min.x;\n            },\n            get max() {\n              return M[t.projection].options.bounds.max.x;\n            }\n          },\n          vertical: {\n            name: 'northing',\n            get min() {\n              return M[t.projection].options.bounds.min.y;\n            },\n            get max() {\n              return M[t.projection].options.bounds.max.y;\n            }\n          },\n          get bounds() {\n            return M[t.projection].options.bounds;\n          }\n        },\n        gcrs: {\n          horizontal: {\n            name: 'longitude',\n            // set min/max axis values from EPSG registry area of use, retrieved 2019-07-25\n            get min() {\n              return M[t.projection].unproject(M.OSMTILE.options.bounds.min)\n                .lng;\n            },\n            get max() {\n              return M[t.projection].unproject(M.OSMTILE.options.bounds.max)\n                .lng;\n            }\n          },\n          vertical: {\n            name: 'latitude',\n            // set min/max axis values from EPSG registry area of use, retrieved 2019-07-25\n            get min() {\n              return M[t.projection].unproject(M.OSMTILE.options.bounds.min)\n                .lat;\n            },\n            get max() {\n              return M[t.projection].unproject(M.OSMTILE.options.bounds.max)\n                .lat;\n            }\n          },\n          get bounds() {\n            return L.latLngBounds(\n              [\n                M[t.projection].options.crs.gcrs.vertical.min,\n                M[t.projection].options.crs.gcrs.horizontal.min\n              ],\n              [\n                M[t.projection].options.crs.gcrs.vertical.max,\n                M[t.projection].options.crs.gcrs.horizontal.max\n              ]\n            );\n          }\n        },\n        map: {\n          horizontal: {\n            name: 'i',\n            min: 0,\n            max: (map) => map.getSize().x\n          },\n          vertical: {\n            name: 'j',\n            min: 0,\n            max: (map) => map.getSize().y\n          },\n          bounds: (map) => L.bounds(L.point([0, 0]), map.getSize())\n        },\n        tile: {\n          horizontal: {\n            name: 'i',\n            min: 0,\n            max: tileSize\n          },\n          vertical: {\n            name: 'j',\n            min: 0,\n            max: tileSize\n          },\n          get bounds() {\n            return L.bounds(\n              [\n                M[t.projection].options.crs.tile.horizontal.min,\n                M[t.projection].options.crs.tile.vertical.min\n              ],\n              [\n                M[t.projection].options.crs.tile.horizontal.max,\n                M[t.projection].options.crs.tile.vertical.max\n              ]\n            );\n          }\n        },\n        tilematrix: {\n          horizontal: {\n            name: 'column',\n            min: 0,\n            max: (zoom) =>\n              Math.round(\n                M[t.projection].options.crs.tcrs.horizontal.max(zoom) /\n                  M[t.projection].options.crs.tile.bounds.getSize().x\n              )\n          },\n          vertical: {\n            name: 'row',\n            min: 0,\n            max: (zoom) =>\n              Math.round(\n                M[t.projection].options.crs.tcrs.vertical.max(zoom) /\n                  M[t.projection].options.crs.tile.bounds.getSize().y\n              )\n          },\n          bounds: (zoom) =>\n            L.bounds(\n              [\n                M[t.projection].options.crs.tilematrix.horizontal.min,\n                M[t.projection].options.crs.tilematrix.vertical.min\n              ],\n              [\n                M[t.projection].options.crs.tilematrix.horizontal.max(zoom),\n                M[t.projection].options.crs.tilematrix.vertical.max(zoom)\n              ]\n            )\n        }\n      }\n    }); //creates crs using L.Proj\n    M[t.projection.toUpperCase()] = M[t.projection]; //adds the projection uppercase to global M\n    return t.projection;\n  }\n  whenReady() {\n    return new Promise((resolve, reject) => {\n      let interval, failureTimer;\n      if (this._map) {\n        resolve();\n      } else {\n        let viewer = this;\n        interval = setInterval(testForMap, 200, viewer);\n        failureTimer = setTimeout(mapNotDefined, 5000);\n      }\n      function testForMap(viewer) {\n        if (viewer._map) {\n          clearInterval(interval);\n          clearTimeout(failureTimer);\n          resolve();\n        }\n      }\n      function mapNotDefined() {\n        clearInterval(interval);\n        clearTimeout(failureTimer);\n        reject('Timeout reached waiting for map to be ready');\n      }\n    });\n  }\n  async whenLayersReady() {\n    let layersReady = [];\n    for (let layer of [...this.layers]) {\n      layersReady.push(layer.whenReady());\n    }\n    return Promise.allSettled(layersReady);\n  }\n  whenProjectionDefined(projection) {\n    return new Promise((resolve, reject) => {\n      let interval, failureTimer;\n      if (M[projection]) {\n        resolve();\n      } else {\n        interval = setInterval(testForProjection, 200, projection);\n        failureTimer = setTimeout(projectionNotDefined, 5000);\n      }\n      function testForProjection(p) {\n        if (M[p]) {\n          clearInterval(interval);\n          clearTimeout(failureTimer);\n          resolve();\n        }\n      }\n      function projectionNotDefined() {\n        clearInterval(interval);\n        clearTimeout(failureTimer);\n        reject('Timeout reached waiting for projection to be defined');\n      }\n    });\n  }\n  geojson2mapml(json, options = {}) {\n    if (options.projection === undefined) {\n      options.projection = this.projection;\n    }\n    let geojsonLayer = M.geojson2mapml(json, options);\n    this.appendChild(geojsonLayer);\n    return geojsonLayer;\n  }\n}\n// need to provide options { extends: ... }  for custom built-in elements\nwindow.customElements.define('mapml-viewer', MapViewer);\nwindow.customElements.define('layer-', MapLayer);\nwindow.customElements.define('map-caption', MapCaption);\nwindow.customElements.define('map-feature', MapFeature);\nwindow.customElements.define('map-extent', MapExtent);\n"],"names":["DOMTokenList","MapLayer","MapCaption","MapFeature","MapExtent","MapViewer","HTMLElement","observedAttributes","controls","this","hasAttribute","value","Boolean","setAttribute","removeAttribute","controlsList","_controlsList","width","window","getComputedStyle","replace","val","height","lat","getAttribute","lon","projection","whenProjectionDefined","then","catch","Error","zoom","parsedVal","parseInt","isNaN","layers","getElementsByTagName","extent","let","map","_map","pcrsBounds","M","pixelToPCRSBounds","getPixelBounds","getZoom","options","formattedExtent","_convertAndFormatPCRS","crs","getMaxZoom","Infinity","minZoom","getMinZoom","maxZoom","static","constructor","super","_source","outerHTML","_history","_historyIndex","_traversalCall","connectedCallback","_initShadowRoot","s","wpx","hpx","w","h","_changeWidth","_changeHeight","_createMap","_toggleStatic","mapcaption","querySelector","setTimeout","innerHTML","mapCaptionObserver","MutationObserver","observe","childList","shadowRoot","attachShadow","mode","tmpl","document","createElement","URL","import","meta","url","href","_container","insertAdjacentHTML","mapDefaultCSS","hideElementsCSS","appendChild","content","cloneNode","L","center","LatLng","query","contextMenu","announceMovement","featureIndex","mapEl","zoomControl","_addToHistory","_createControls","_toggleControls","_crosshair","crosshair","addTo","featureIndexOverlayOption","_featureIndexOverlay","featureIndexOverlay","_setUpEvents","disconnectedCallback","firstChild","removeChild","_deleteControls","adoptedCallback","attributeChangedCallback","name","oldValue","newValue","valueSet","_hideControls","_showControls","connect","layersReady","disable","layer","querySelectorAll","reAttach","push","whenReady","Promise","allSettled","zoomTo","_resetHistory","enable","bind","resolve","reject","_debug","i","toggleDebug","mapSize","getSize","y","totalSize","_layerControl","layerControl","collapsed","scaleValue","announceScale","metric","imperial","_scaleBar","scaleBar","_zoomControl","control","_reloadButton","reloadButton","_fullScreenControl","fullscreenButton","_geolocationButton","geolocationButton","toggleContextMenuItem","_setControlsVisibility","forEach","toLowerCase","_layers","length","hide","container","children","childEl","isStatic","dragging","touchZoom","doubleClickZoom","scrollWheelZoom","boxZoom","keyboard","_dropHandler","event","preventDefault","text","dataTransfer","getData","_pasteLayer","_dragoverHandler","dropEffect","_removeEvents","off","removeEventListener","addEventListener","e","target","tagName","dispatchEvent","CustomEvent","details","originalEvent","parentElement","keyCode","activeElement","nodeName","detail","ctrlKey","navigator","clipboard","readText","fire","on","latlng","accuracy","error","message","lng","x","containerPoint","_updateMapCenter","fullscreenElement","setViewFullScreenInnerHTML","reload","altKey","forward","back","locate","stop","setView","remove","undefined","debugOverlay","style","styleSheets","cssRules","invalidateSize","Number","isInteger","location","getCenter","mapLocation","splice","prev","history","curr","scale","panBy","animate","setZoom","next","initialLocation","shift","getContainer","focus","_toggleFullScreen","toggleFullscreen","viewSource","blob","Blob","type","createObjectURL","open","revokeObjectURL","defineCustomProjection","jsonTemplate","t","JSON","parse","proj4string","resolutions","origin","bounds","indexOf","toUpperCase","tileSize","includes","tilesize","Proj","CRS","tcrs","horizontal","min","max","Math","round","vertical","pcrs","gcrs","unproject","OSMTILE","latLngBounds","point","tile","tilematrix","interval","failureTimer","setInterval","viewer","clearInterval","clearTimeout","whenLayersReady","p","geojson2mapml","json","geojsonLayer","customElements","define"],"mappings":"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"}