{"version":3,"file":"map-style.js","sources":["../src/map-style.js"],"sourcesContent":["export class MapStyle extends HTMLElement {\n  static get observedAttributes() {\n    return;\n  }\n\n  attributeChangedCallback(name, oldValue, newValue) {}\n  constructor() {\n    // Always call super first in constructor\n    super();\n  }\n  connectedCallback() {\n    // if the parent element is a map-link, the stylesheet should\n    //  be created as part of a templated layer processing i.e. on moveend / when connected\n    //  and the generated <style> that implements this <map-style> should be located\n    //  in the parent <map-link>._templatedLayer.container root node if\n    //  the _templatedLayer is an instance of M.TemplatedTileLayer or M.TemplatedFeaturesLayer\n    //\n    // if the parent node (or the host of the shadow root parent node) is layer-, the link should be created in the _layer\n    // container\n    this._stylesheetHost =\n      this.getRootNode() instanceof ShadowRoot\n        ? this.getRootNode().host\n        : this.parentElement;\n    if (this._stylesheetHost === undefined) return;\n\n    this.styleElement = document.createElement('style');\n    this.styleElement.mapStyle = this;\n    this.styleElement.textContent = this.textContent;\n    copyAttributes(this, this.styleElement);\n    if (this._stylesheetHost._layer) {\n      this._stylesheetHost._layer.appendStyleElement(this);\n    } else if (this._stylesheetHost._templatedLayer) {\n      this._stylesheetHost._templatedLayer.appendStyleElement(this);\n    } else if (this._stylesheetHost._extentLayer) {\n      this._stylesheetHost._extentLayer.appendStyleElement(this);\n    }\n\n    function copyAttributes(source, target) {\n      return Array.from(source.attributes).forEach((attribute) => {\n        target.setAttribute(attribute.nodeName, attribute.nodeValue);\n      });\n    }\n\n    // use observer to monitor the changes in mapStyle textContent\n    this._observer = new MutationObserver(() => {\n      this.styleElement.textContent = this.textContent;\n    });\n    this._observer.observe(this, {\n      childList: true,\n      subtree: true,\n      characterData: true\n    });\n  }\n  disconnectedCallback() {\n    if (this._stylesheetHost) {\n      this.styleElement.remove();\n    }\n  }\n}\n"],"names":["MapStyle","HTMLElement","observedAttributes","attributeChangedCallback","name","oldValue","newValue","constructor","super","connectedCallback","source","target","this","_stylesheetHost","getRootNode","ShadowRoot","host","parentElement","undefined","styleElement","document","createElement","mapStyle","textContent","Array","from","attributes","forEach","setAttribute","attribute","nodeName","nodeValue","_layer","appendStyleElement","_templatedLayer","_extentLayer","_observer","MutationObserver","observe","childList","subtree","characterData","disconnectedCallback","remove"],"mappings":";;MAAaA,iBAAiBC,YAC5BC,iCAIAC,yBAAyBC,EAAMC,EAAUC,IACzCC,cAEEC,QAEFC,oBAaE,IAcwBC,EAAQC,EAlBhCC,KAAKC,gBACHD,KAAKE,wBAAyBC,WAC1BH,KAAKE,cAAcE,KACnBJ,KAAKK,mBACkBC,IAAzBN,KAAKC,kBAETD,KAAKO,aAAeC,SAASC,cAAc,UAC3CT,KAAKO,aAAaG,SAAWV,MACxBO,aAAaI,YAAcX,KAAKW,YAULZ,GAARD,EATTE,MAAWO,aAUjBK,MAAMC,KAAKf,EAAOgB,YAAYC,QAAQ,IAC3ChB,EAAOiB,aAAaC,EAAUC,SAAUD,EAAUE,aAVlDnB,KAAKC,gBAAgBmB,OACvBpB,KAAKC,gBAAgBmB,OAAOC,mBAAmBrB,MACtCA,KAAKC,gBAAgBqB,gBAC9BtB,KAAKC,gBAAgBqB,gBAAgBD,mBAAmBrB,MAC/CA,KAAKC,gBAAgBsB,cAC9BvB,KAAKC,gBAAgBsB,aAAaF,mBAAmBrB,MAUvDA,KAAKwB,UAAY,IAAIC,iBAAiB,KACpCzB,KAAKO,aAAaI,YAAcX,KAAKW,cAEvCX,KAAKwB,UAAUE,QAAQ1B,KAAM,CAC3B2B,WAAW,EACXC,SAAS,EACTC,eAAe,KAGnBC,uBACM9B,KAAKC,iBACPD,KAAKO,aAAawB,iBAvDX3C"}